{"version":3,"sources":["images/admin.png","utils/browsersSupport.js","actions/types.js","reducers/usersReducer.js","components/messages/messages.reducer.js","components/messages/types.js","components/common/translations.js","components/common/translations/en.js","components/common/translations/bg.js","reducers/languageReducer.js","reducers/authReducer.js","components/places/reducers/places.reducer.js","components/places/actions/types.js","components/clients/reducers/clients.reducer.js","components/clients/actions/types.js","components/common/loading/loading.reducer.js","components/common/loading/types.js","reducers/adminReducer.js","components/tasks/reducers/tasks.reducer.js","components/tasks/actions/types.js","components/checkpoints/reducers/checkpoints.reducer.js","components/checkpoints/actions/types.js","reducers/index.js","store.js","constants.js","components/messages/messages.actions.js","actions/languagesActions.js","utils/setCustomPlaceHeader.js","utils/Auth.js","components/places/actions/places.actions.js","utils/setAuthorizationToken.js","actions/authActions.js","components/messages/MessagesContainer.js","components/places/components/SetCurrPlacePage.js","actions/usersActions.js","components/users/DeleteUserModal.js","components/users/ListEachUser.js","components/users/Filter.js","components/users/ListUsersPage.js","utils/Utils.js","components/users/registered/UserOrdersModal.js","components/users/registered/ListEachRegisteredUser.js","components/users/registered/Filter.js","components/users/registered/ListRegisteredUsersPage.js","components/users/AddEditUserForm.js","components/users/AddUserPage.js","components/users/EditUserPage.js","components/login/LoginForm.js","components/login/Login.js","utils/PrivateRoute.js","components/places/components/DeletePlaceModal.js","components/places/components/ListEachPlace.js","components/places/components/Filter.js","components/places/components/ListPlacesPage.js","components/clients/actions/clients.actions.js","components/common/LangDropdown.js","components/places/components/AddEditPlaceForm.js","components/places/components/AddPlacePage.js","components/places/components/EditPlacePage.js","components/clients/components/DeleteClientModal.js","components/clients/components/ListEachClient.js","components/clients/components/Filter.js","components/clients/components/ListClientsPage.js","components/clients/components/AddEditClientForm.js","components/clients/components/AddClientPage.js","components/clients/components/EditClientPage.js","components/tasks/actions/tasks.actions.js","components/tasks/components/Filter.js","components/tasks/components/ListEachTask.js","components/tasks/components/VisitDetailsModal.js","components/tasks/components/ListTasksPage.js","components/common/DeleteModal.js","components/tasks/components/AddEditTaskForm.js","components/tasks/components/AddTaskPage.js","components/tasks/components/EditTaskPage.js","components/checkpoints/actions/checkpoints.actions.js","actions/adminActions.js","components/tasks/components/scan/ListEachTaskForUser.js","components/tasks/components/scan/ListCheckpointTasksForUserPage.js","components/visits/actions/visits.actions.js","components/tasks/components/userTasks/styles.js","components/tasks/components/userTasks/ScanModal.js","components/tasks/components/userTasks/CommentModal.js","components/tasks/components/userTasks/ListEachUserTaskBox.js","components/tasks/components/userTasks/ListUserTasksPage.js","components/checkpoints/components/ListEachCheckpoint.js","components/checkpoints/components/ListCheckpointsPage.js","components/checkpoints/components/AddEditCheckpointForm.js","components/checkpoints/components/AddCheckpointPage.js","components/checkpoints/components/EditCheckpointPage.js","components/checkpoints/components/tasks/ListEachTaskForCheckpoint.js","components/checkpoints/components/tasks/ListCheckpointTasks.js","components/checkpoints/components/tasks/AddEditCheckpointTaskForm.js","components/checkpoints/components/tasks/AddCheckpointTask.js","components/checkpoints/components/tasks/EditCheckpointTaskPage.js","MyRouter.js","components/common/loading/LoadingScreen.js","history.js","components/common/SnackbarNotifications.js","components/common/ConfirmModal.js","components/Header.js","components/SideBar.js","components/Footer.js","App.js","index.js","utils/setCustomAdminHeader.js","utils/setTablHeader.js"],"names":["module","exports","__webpack_require__","p","Object","entries","obj","ownProps","keys","i","length","resArray","Array","values","map","itm","String","prototype","includes","indexOf","apply","this","arguments","defineProperty","value","searchElement","fromIndex","TypeError","o","len","x","y","n","k","Math","max","abs","isNaN","SET_CURRENT_USER","LOGOUT","initialState","users","registered_users","roles","errors","usersReducer","state","undefined","action","type","objectSpread","payload","success","messages_reducer","translations","en","sidemenu","tasks","checkpoints","my_tasks","admin","dashboard","common","next","from","to","completed","no_internet","back","id","name","status","client","date","active","inactive","description","yes","no","add","cancel","save","delete","close","edit","download","role","filter","place","rotation_start_date","rotation_start_date_info","rotation_days_count","rotation_days_count_info","deleted","user","title","times_per_day_of_task_execution","checkpoint","not_completed","generate_qr","tasks_for_checkpoint","add_task","places","_places","ordertypes","confirm","messages","invalid_code","invalid_name","invalid_email","invalid_role","no_data_to_insert","invalid_place","invalid_credentials","email","password","date_of_registration","fullname","phone","SUPER_ADMIN","CLIENT_ADMIN","PLACE_ADMIN","USER","clients","contract_start_date","trial_start_date","trial_end_date","monthly_fee","address","additional_info","owner_name","login","bg","administration","system","super_admin","current_place","image","complete_tasks","versions","features_about_version","version","bg_places","you_must_select_place","Wrong checkpoint for task","defaultState","localStorage","getItem","languageReducer","language","isAuthenticated","auth_error","authReducer","isEmpty","functionality_modules","places_sms_logs","cities","places_reducer","clients_reducer","isLoading","loading_reducer","orderTypeStyles","soundActivated","orderStyleType","snackbarText","snackbarActionCallback","snackbarActionText","openConfirmModal","confirmModalText","confirmModalCallbackSuccess","confirmModalCallbackFail","adminReducer","text","actionText","callback","callbackSuccess","callbackFail","tasks_reducer","checkpoints_reducer","createRootReducer","history","combineReducers","tasksReducer","checkpointsReducer","messagesReducer","lang","auth","placesReducer","clientsReducer","loading","loadingReducer","router","connectRouter","routing","routerReducer","createBrowserHistory","midArr","thunk","routerMiddleware","middleware","applyMiddleware","concat","toConsumableArray","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","Intl","locale","compose","currentDomain","location","origin","apiDomain","hostname","SCAN_URL","API_URL","SETTINGS_IMG_URL","FILTER_PLACES_NAME","ADMIN_QR_CODE_DATA","width","height","margin","qrOptions","typeNumber","mode","errorCorrectionLevel","imageOptions","hideBackgroundDots","imageSize","dotsOptions","color","backgroundOptions","dotsOptionsHelper","colorType","single","gradient","linear","radial","color1","color2","rotation","cornersSquareOptions","cornersSquareOptionsHelper","cornersDotOptions","cornersDotOptionsHelper","backgroundOptionsHelper","addErrorMessages","msgs","dispatch","addSuccessMessage","msg","listLanguages","axios","get","then","res","data","catch","error","console","log","setCustomPlaceHeader","placeId","defaults","headers","cookies","Cookies","Auth","userJSON","jwt","decode","token","setItem","removeItem","requiredRole","currentUser","getDecodedUser","currentRole","allowedRoles","place_id","current","Date","after100Years","setFullYear","getFullYear","set","path","expires","listPlacesByUserRole","currUser","jwtDecode","getToken","query","client_id","addEditPlace","postData","post","initPlaceSettings","message","err","response","initSettingsForAllPlaces","setAuthorizationToken","logout","removeToken","push","setCurrentUser","MessagesContainer","_this","props","errorMsg","errObj","e","toast","theme","react_default","a","createElement","react_toastify_esm","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Component","connect","SetCurrPlacePage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handlePageChange","page","onChangeSelectAutocompletePlace","valueLabel","setUserPlace","JSON","stringify","document","href","autocompletePlaces","selectedPlace","getUserPlace","label","Fragment","className","NavLink","messages_MessagesContainer","react_select_browser_esm","options","onChange","bindActionCreators","listUsers","getRegisteredUsers","listUserRoles","editUser","ADMIN_URL","DeleteUserModal","userId","tabIndex","aria-labelledby","aria-hidden","data-dismiss","aria-label","userEmail","onClick","deleteUser","ListEachUser","userRole","find","r","roleId","key","data-toggle","data-target","users_DeleteUserModal","Filter","htmlFor","placeholder","search_email","defaultValue","search_active","ListUsersPage","preventDefault","setState","target","_this2","userItems","toLocaleLowerCase","Boolean","parseInt","items_count","current_page","start_offset","start_count","users_Filter","u","index","users_ListEachUser","Pagination_default","itemClass","activePage","activeClass","linkClass","prevPageText","nextPageText","firstPageText","lastPageText","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","Number","md5","require","Utils","tableNum","split","formData","FormData","append","parseFloat","checked","input","maxInputLength","cutFirstXSymbold","substring","errorCode","request","args","replace","allPlaces","currPlaceId","currClientPlacesCount","currPlace","currPlaceClientId","clientId","cats","returnOptions","categoriesHierarchyOptions","returnCatObejct","cat","undeletedChildrenCount","children","c","dashes","hierarchyLevel","code","parentId","appendLeadingZeroes","appendTokenToFormData","buildURLQuery","pair","encodeURIComponent","join","changeListDateFormat","d","bgMonths","getDate","getMonth","getHours","getMinutes","navigateTo","url","goBack","normalizePrice","price","toFixed","compareForPriority","b","priorityOne","priority","priorityTwo","sortName","column","nameA","toUpperCase","nameB","useStyles","makeStyles","root","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","secondary","UserOrdersModal","classes","_React$useState","React","useState","_React$useState2","slicedToArray","orders","products","order_productvariants","opv","ind","prodComment","order_comment","parse","variantId","productVariantId","productRequiredIngredientIds","productAddablengredientIds","productRemovableIngredientIds","quantity","all_products","product_variant","productId","size","settings","default_currency_suffix","style","text-decoration","background","border-radius","padding","categoriesHierarchy","catHierarchyId","ordertypeId","show_variant_additional_price","additional_price","box","comment","opv_ingredients","ing","ingredient_type","ingredientId","fontStyle","getIngredientNamesByIds","ingredients","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","Typography","moment","createdAt","format","ExpansionPanelDetails","order_type","ordertype","total_amount","total_price","currency","discount_price","discount_type","discount_value","delivery_price","ListEachRegisteredUser","registered_UserOrdersModal","placesOptions","hasAccess","onChangeSelectAutocomplete","ListRegisteredUsersPage","fieldName","filter_place","nextProps","registered_Filter","registered_ListEachRegisteredUser","categories","AddEditUserForm","selectedRole","placesRows","userPlaceId","onSubmit","onChangeCheckbox","userActive","data-checked","data-unchecked","isAddingUser","AddUserPage","bind","assertThisInitialized","validate","addUser","users_AddEditUserForm","EditUserPage","match","params","nameError","LoginForm","Login","handleChange","handleSubmit","isLoggedIn","_e$target","setToken","login_LoginForm","PrivateRoute","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","pathname","DeletePlaceModal","float","deletePlace","ListEachPlace","components_DeletePlaceModal","search_name","ListPlacesPage","is_paying","activeDefaultLanguage","items","search_is_paying","components_Filter","components_ListEachPlace","currLang","listClients","addEditClient","langId","translationsType","langOptions","languages","l","disabled","isDisabled","currLangOnChange","AddEditPlaceForm","addUploadedFileText","files","uploadedImgName","selectedParent","selectedCity","autocompleteItems","cl","cityOptions","city","cityId","tagsOptions","tags","tag","isAdding","src","getPlaceImagePath","common_LangDropdown","onChangeSelectAutocompleteItems","short_name","company_name","company_eik","company_city","company_address","company_person","company_email","company_vat_registered","lat","lng","visible_on_map","isMulti","classNamePrefix","v","onChangeSelectAutocompleteMulti","AddPlacePage","field","tagsIds","t","querySelector","forEach","file","getCities","invalid_city","alergens","components_AddEditPlaceForm","resp","EditPlacePage","newLang","newNameValue","item","currTags","Tabs","activeKey","currentTab","onSelect","Tab","eventKey","DeleteClientModal","deleteClient","ListEachClient","slug","components_DeleteClientModal","ListClientsPage","clear","reload","clients_components_Filter","components_ListEachClient","AddEditClientForm","clientholder","react_datepicker_min_default","selected","onFieldChange","dateFormat","display","AddClientPage","verified","invalid_slug","components_AddEditClientForm","EditClientPage","toDate","listAllTasks","listUserTasks","checkpointToken","addEditTask","usersOptions","search_date","search_user","marginTop","ListEachTask","task","visits","openVisitDetailsModal","checkpointId","VisitDetailsModal","Dialog","fullWidth","maxWidth","open","isOpened","onClose","TransitionComponent","Grow","data-class","Fade","in","timeout","enter","exit","DialogContent","withStyles","ListTasksPage","deleteTask","listTasksByUserRole","clickedTask","clickedUser","visitDetailsModalOpened","tasks_components_Filter","components_ListEachTask","components_VisitDetailsModal","DeleteModal","deleteFunc","editImage","invoices","justifyContent","multiple","ref","for","borderBottomLeftRadius","borderBottomRightRadius","replace_image","upload_image","common_DeleteModal","AddTaskPage","AddEditTaskForm","EditTaskPage","listCheckpoints","getParam","addEditCheckpoint","ListEachTaskForUser","deleteCheckpoint","ListCheckpointTasksForUserPage","itemsList","tasksForCheckpoint","scan_ListEachTaskForUser","createVisit","styles","_orderDisabledContain","_modalTypesTexts","backdrop","zIndex","modal","& .MuiPaper-root","& .MuiDialogContent-root","paddingTop","paddingBottom","modalTitle","backgroundColor","textFieldContainer","&:nth-of-type(1)","&:last-child","marginBottom","& .MuiFormLabel-root:not(.MuiInputLabel-root)","fontWeight","textField","& label.Mui-error","& label.Mui-focused","& .MuiInput-underline:after","borderBottomColor","& .MuiInput-underline.Mui-error:after","promocodeAppliedSuccess","& .MuiInput-input","promocodeAppliedFail","errorContainer","textAlign","borderBottom","orderCheckbox","&.Mui-checked","orderRadio","promoCodeBtn","borderRadius","&:hover","applyPromoCodeBtn","buttonsRow","paymentMethodContainer","cutleryOptionContainer","orderLabel","&.Mui-focused","promoCodeRow","@media screen and (max-width: 345px)","preorderAddressContainer","preorderAddress","grid-template-columns","preorderAddressText","placeSelf","preorderAddressNavigateBtn","verticalAlign","borderLeft","preorderAddressNavigateIcon","orderTimeOptionsContainer","gridTemplateColumns","columnGap","orderDisabledContainer","isMultipleOptionsModalContainer","grid-column-gap","grid-row-gap","place-self","@media screen and (max-width: 475px)","& > *:first-child","modalTypesBtns","minWidth","border","border-top-right-radius","border-top-left-radius","paddingLeft","paddingRight","typeText","modalTypesTexts","bottom","modalTypesIcons","priceOrderContainer","& p","border-bottom","& span:last-child","@media screen and (max-width: 350px)","formButtons","changePaymentInstrumentButton","ScanModal","getQrReader","react_qr_reader_lib_default","delay","scanDelay","onError","handleScanError","onScan","handleScan","scanLegacyMode","DialogContentText","CommentModal","visitComment","onSubmitComment","ListEachUserTaskBox","useRef","onCompleteTask","ListUserTasksPage","taskId","commentModalOpened","taskIdToComplete","scanModalOpened","scannedToken","scanned","userTasks_ListEachUserTaskBox","userTasks_ScanModal","userTasks_CommentModal","ListEachCheckpoint","rel","checkpointQRCode","ReactExport","ExcelFile","ExcelSheet","ExcelColumn","QRCodeStyling","ListCheckpointsPage","onChangeCheckboxIsForReservation","is_for_reservation","editCheckpoint","downloadAll","asyncToGenerator","regenerator_default","mark","_callee","timer","wrap","_context","prev","ms","Promise","setTimeout","update","extension","stop","checkpointsList","exportDataSet","checkpoint_num","components_ListEachCheckpoint","AddEditCheckpointForm","createRef","generateQRbtn","generateNewQrCode","checkpointNum","downloadQr","AddCheckpointPage","currentDate","components_AddEditCheckpointForm","withRouter","EditCheckpointPage","removeCheckpoint","downloadQR","qrCodeImage","qr_code_image","placeInUrl","place_in_url","currPlaceOrderTypes","orderTypes","checkpoint_token","put","ListEachTaskForCheckpoint","ListCheckpointTasksPage","tasks_ListEachTaskForCheckpoint","AddEditCheckpointTaskForm","AddCheckpointTaskPage","usersIds","tasks_AddEditCheckpointTaskForm","EditCheckpointTaskPage","taskUsers","ndescriptioname","Router","Switch","exact","LoginPage","utils_PrivateRoute","ListCheckpointTasks","LoadingScreen","visibility","spacing","ConsecutiveSnackbars","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","setSnackbarText","onExited","Button","IconButton","Close","ConfirmModal","closeConfirmModal","aria-describedby","DialogActions","autoFocus","Header","mySetLang","setLang","rerender","timerCheckForceRefresh","timeoutRefreshPage","logo","logoSrc","tabl_logo","tabl_short_logo","shortLogoSrc","favicon","setAttribute","docElm","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","fullscreenElement","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","_this$props","currClient","currPlaceName","loading_LoadingScreen","common_ConfirmModal","marginLeft","maxHeight","marginRight","changeLanguage","aria-haspopup","aria-expanded","adminImg","alt","overflowY","logoutAction","SideBar","index_esm","hasAccessCustom","Footer","loginMargin","library","faEnvelope","faKey","App","sideBar","isUserAuthenticated","components_SideBar","components_Header","src_MyRouter","Footer_Footer","interceptors","use","reject","listen","app","es","esm","src_App_0","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.52825c1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/admin.39132ce0.png\";","export default (function() {\r\n    if (!Object.entries) {\r\n        Object.entries = function( obj ){\r\n            var ownProps = Object.keys( obj ),\r\n                i = ownProps.length,\r\n                resArray = new Array(i); // preallocate the Array\r\n            while (i--)\r\n            resArray[i] = [ownProps[i], obj[ownProps[i]]];\r\n\r\n            return resArray;\r\n        };\r\n    }\r\n\r\n    if(!Object.values) {\r\n        Object.values = function(obj) {\r\n            return Object.keys(obj).map(function(itm) { return obj[itm]; });\r\n        }\r\n    }\r\n\r\nif (!String.prototype.includes) {\r\n    String.prototype.includes = function() {\r\n        'use strict';\r\n        return String.prototype.indexOf.apply(this, arguments) !== -1;\r\n    };\r\n}\r\n\r\n\r\nif (!Array.prototype.includes) {\r\n  Object.defineProperty(Array.prototype, 'includes', {\r\n    value: function (searchElement, fromIndex) {\r\n\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      // 1. Let O be ? ToObject(this value).\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If len is 0, return false.\r\n      if (len === 0) {\r\n        return false;\r\n      }\r\n\r\n      // 4. Let n be ? ToInteger(fromIndex).\r\n      //    (If fromIndex is undefined, this step produces the value 0.)\r\n      var n = fromIndex | 0;\r\n\r\n      // 5. If n ≥ 0, then\r\n      //  a. Let k be n.\r\n      // 6. Else n < 0,\r\n      //  a. Let k be len + n.\r\n      //  b. If k < 0, let k be 0.\r\n      var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n\r\n      function sameValueZero(x, y) {\r\n        return x === y || (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));\r\n      }\r\n\r\n      // 7. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let elementK be the result of ? Get(O, ! ToString(k)).\r\n        // b. If SameValueZero(searchElement, elementK) is true, return true.\r\n        if (sameValueZero(o[k], searchElement)) {\r\n          return true;\r\n        }\r\n        // c. Increase k by 1. \r\n        k++;\r\n      }\r\n\r\n      // 8. Return false\r\n      return false;\r\n    }\r\n  });\r\n}\r\n\r\n\r\n})();\r\n","// Categories\r\nexport const LIST_CATEGORIES = 'LIST_CATEGORIES';\r\n// export const ADD_CATEGORY = 'ADD_CATEGORY'; //Not used\r\nexport const ADD_EDIT_CATEGORY_ERROR = 'ADD_EDIT_CATEGORY_ERROR';\r\nexport const ADD_EDIT_CATEGORY_TRANSLATION_ERROR = 'ADD_EDIT_CATEGORY_TRANSLATION_ERROR';\r\nexport const GET_CATEGORY_SAMPLE_IMAGES = 'GET_CATEGORY_SAMPLE_IMAGES';\r\n\r\n// Subcategories\r\nexport const LIST_SUBCATEGORIES = 'LIST_SUBCATEGORIES';\r\nexport const ADD_EDIT_SUBCATEGORY_ERROR = 'ADD_EDIT_SUBCATEGORY_ERROR';\r\nexport const ADD_EDIT_SUBCATEGORY_TRANSLATION_ERROR = 'ADD_EDIT_SUBCATEGORY_TRANSLATION_ERROR'\r\n\r\n// Products\r\nexport const LIST_PRODUCTS = 'LIST_PRODUCTS';\r\nexport const ADD_EDIT_PRODUCT_TRANSLATION_ERROR = 'ADD_EDIT_PRODUCT_TRANSLATION_ERROR';\r\nexport const ADD_EDIT_PRODUCT_SUCCESS = 'ADD_EDIT_PRODUCT_SUCCESS';\r\nexport const ADD_EDIT_PRODUCT_ERROR = 'ADD_EDIT_PRODUCT_ERROR';\r\nexport const SET_PRODUCT_FILTER = 'SET_PRODUCT_FILTER';\r\nexport const CLEAR_PRODUCT_FILTER = 'CLEAR_PRODUCT_FILTER';\r\n\r\n// Tables\r\nexport const LIST_TABLES = 'LIST_TABLES';\r\nexport const ADD_EDIT_TABLE_SUCCESS = 'ADD_EDIT_TABLE_SUCCESS';\r\nexport const ADD_EDIT_TABLE_ERROR = 'ADD_EDIT_TABLE_ERROR';\r\n\r\n//Product variants\r\nexport const ADD_EDIT_VARIANT_ERROR = 'ADD_EDIT_VARIANT_ERROR';\r\nexport const ADD_EDIT_VARIANT_SUCCESS = 'ADD_EDIT_VARIANT_SUCCESS';\r\n\r\n// Settings\r\nexport const LIST_SETTINGS = 'LIST_SETTINGS';\r\n\r\n// Settings - Languages\r\nexport const LIST_LANGUAGES = 'LIST_LANGUAGES';\r\nexport const ADD_EDIT_LANGUAGE_ERROR = 'ADD_EDIT_LANGUAGE_ERROR';\r\n\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const LOGOUT = 'LOGOUT';\r\n// Users\r\nexport const LIST_USERS = 'LIST_USERS';\r\nexport const LIST_REGISTERED_USERS = 'LIST_REGISTERED_USERS';\r\nexport const ADD_EDIT_USER_ERROR = 'ADD_EDIT_USER_ERROR';\r\nexport const LIST_USER_ROLES = 'LIST_USER_ROLES';\r\n// Orders\r\nexport const LIST_ORDERS = 'LIST_ORDERS';\r\nexport const LIST_USER_NEEDS = 'LIST_USER_NEEDS';\r\nexport const LOADING_ORDERS_START = 'LOADING_ORDERS_START';\r\nexport const LOADING_ORDERS_END = 'LOADING_ORDERS_END';\r\n\r\n// CAT hierarchy\r\nexport const LIST_CATEGORIES_HIERARCHY = 'LIST_CATEGORIES_HIERARCHY';\r\nexport const ADD_EDIT_CATEGORY_HIERARCHY_ERROR = 'ADD_EDIT_CATEGORY_HIERARCHY_ERROR';\r\n\r\n// Admin common settings\r\nexport const SET_SOUND_ACTIVATION = 'SET_SOUND_ACTIVATION';\r\nexport const CHANGE_ORDER_STYLE_TYPE = 'CHANGE_ORDER_STYLE_TYPE';\r\nexport const OPEN_CONFIRM_MODAL = 'OPEN_CONFIRM_MODAL';\r\nexport const CLOSE_CONFIRM_MODAL = 'CLOSE_CONFIRM_MODAL';\r\n\r\n// Snackbar\r\nexport const SET_SNACKBAR_TEXT = 'SET_SNACKBAR_TEXT';","import { LIST_USERS, ADD_EDIT_USER_ERROR, LIST_USER_ROLES, LIST_REGISTERED_USERS } from '../actions/types';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    registered_users: [],\r\n    roles: [],\r\n    errors: [],\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case LIST_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n                errors: [] // Reset add/edit users error\r\n            }\r\n        case LIST_REGISTERED_USERS: \r\n            return {\r\n                ...state,\r\n                registered_users: action.payload\r\n            }\r\n        case LIST_USER_ROLES: \r\n            return {\r\n                ...state,\r\n                roles: action.payload,\r\n                errors: []\r\n            }\r\n        case ADD_EDIT_USER_ERROR:\r\n            return {\r\n                ...state,\r\n                errors: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ADD_ERROR_MESSAGES, CLEAR_MESSAGES, ADD_SUCCESS_MESSAGE } from './types';\r\n\r\nconst initialState = {\r\n    errors: [],\r\n    success: \"\"\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case ADD_ERROR_MESSAGES:\r\n            return {\r\n                ...state,\r\n                // errors: action.payload.message ? [action.payload.message] : action.payload,\r\n                errors: action.payload\r\n            }\r\n        case CLEAR_MESSAGES:\r\n            return {\r\n                ...state,\r\n                errors: [],\r\n                success: \"\",\r\n            }\r\n        case ADD_SUCCESS_MESSAGE:\r\n            return {\r\n                ...state,\r\n                success: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const ADD_ERROR_MESSAGES = 'ADD_ERROR_MESSAGES';\r\nexport const ADD_SUCCESS_MESSAGE = 'ADD_SUCCESS_MESSAGE';\r\nexport const CLEAR_MESSAGES = 'CLEAR_MESSAGES';\r\n","// import MultiLanguage from \"react-redux-multilang\";\r\nimport { enTranslations } from './translations/en';\r\nimport { bgTranslations } from './translations/bg';\r\nexport const translations =\r\n//new MultiLanguage(\r\n{\r\n    en: enTranslations,\r\n    bg: bgTranslations,\r\n}\r\n// )\r\n\r\n","export const enTranslations = {\r\n    sidemenu: {\r\n        tasks: \"Tasks\",\r\n        checkpoints: \"Checkpoints\",\r\n        my_tasks: \"My tasks\",\r\n        admin: \"Admin\",\r\n        dashboard: \"Dashboard\",\r\n    },\r\n    common: {\r\n        next: 'Next',\r\n        from: 'From',\r\n        to: 'To',\r\n        completed: 'Completed',\r\n        no_internet: 'No internet connection',\r\n       \r\n        back: \"Back\",\r\n\r\n        id: \"Id\",\r\n        dashboard: \"Dashboard\",\r\n        name: \"Name\",\r\n        status: \"Status\",\r\n        action: \"Action\",\r\n        client: \"Client\",\r\n        date: \"Date\",\r\n        active: \"Active\",\r\n        inactive: \"Inactive\",\r\n        description: \"Description\",\r\n        yes: \"Yes\",\r\n        no: \"No\",\r\n        add: \"Add\",\r\n        cancel: \"Cancel\",\r\n        save: \"Save\",\r\n        delete: \"Delete\",\r\n        close: \"Close\",\r\n        edit: \"Edit\",\r\n        download: \"Download\",\r\n        value: \"Value\",\r\n        role: \"Role\",\r\n        filter: \"Filter\",\r\n        place: \"Place\",\r\n       \r\n        rotation_start_date: \"Rotation start date\",\r\n        rotation_start_date_info: \"\",\r\n        rotation_days_count: \"Rotation days count\",\r\n        rotation_days_count_info: \"\",\r\n        deleted: \"Deleted\",\r\n        user: \"User\",\r\n    },\r\n    tasks: {\r\n        title: \"Tasks\",\r\n        description: \"Description\",\r\n        rotation_start_date: \"Rotation start date\",\r\n        rotation_days_count: \"Rotation days count\",\r\n        times_per_day_of_task_execution: \"Times per day\",\r\n        users: \"Users for the task\",\r\n        checkpoint: \"Checkpoint\",\r\n        not_completed: \"Not completed\",\r\n        completed: \"Completed\"\r\n    },\r\n    checkpoints: {\r\n        title: \"Checkpoints\",\r\n        generate_qr: \"Generate new QR\",\r\n        tasks_for_checkpoint: \"Tasks\",\r\n        add_task: \"Add task\",\r\n        add: \"Add checkpoint\",\r\n    },\r\n    \r\n    places: {\r\n        title: \"Places\",\r\n        add: \"Add place\",\r\n        edit: \"Edit place\",\r\n        ordertypes: \"Order types\",\r\n        edit: \"Edit\",\r\n        delete: {\r\n            title: \"Delete place\",\r\n            confirm: \"Are you sure you want to delete \"\r\n        },\r\n    },\r\n    \r\n    messages: {\r\n        errors: {\r\n            invalid_code: 'Invalid code',\r\n            invalid_name: \"Invalid name\",\r\n            invalid_email: \"Invalid email\",\r\n            invalid_role: \"Invalid role\",\r\n            no_data_to_insert: \"Empty data\",\r\n            invalid_place: \"Invalid place\",\r\n            invalid_credentials: \"Invalid credentials\",\r\n        }\r\n    },\r\n    \r\n    users: {\r\n        add: \"Add user\",\r\n        edit: \"Edit user\",\r\n        email: \"Email\",\r\n        password: \"Password\",\r\n        date_of_registration: \"Registration date\",\r\n        fullname: \"Full name\",\r\n        phone: \"Phone\",\r\n    },\r\n    roles: {\r\n        SUPER_ADMIN: \"Super Admin\",\r\n        CLIENT_ADMIN: \"All places Admin\",\r\n        PLACE_ADMIN: \"One place Admin\",\r\n        USER: \"User\"\r\n    },\r\n    clients: {\r\n        title: \"Clients\",\r\n        add: \"Add client\",\r\n        edit: \"Edit client\",\r\n        delete: {\r\n            title: \"Delete client\",\r\n            confirm: \"Are you sure you want to delete \"\r\n        },\r\n        contract_start_date: \"Contract start date\",\r\n        trial_start_date: \"Trial start date\",\r\n        trial_end_date: \"Trial end date\",\r\n        monthly_fee: \"Monthly fee\",\r\n        address: \"Address\",\r\n        additional_info: \"Additional info\",\r\n        owner_name: \"Owner's name\",\r\n    },\r\n    login: {\r\n        title: \"Login\",\r\n        email: \"Email\",\r\n        password: \"Password\",\r\n        login: \"Login\"\r\n    },\r\n}","export const bgTranslations = {\r\n    sidemenu: {\r\n        my_tasks: \"Моите задачи\",\r\n        tasks: \"Задачи\",\r\n        checkpoints: \"Локации\",\r\n        \r\n        admin: \"Админ\",\r\n        dashboard: \"Начало\",\r\n        administration: \"Админ\",\r\n        users: \"Потребители\",\r\n        system: \"Системни\",\r\n        super_admin: \"Супер админ\",\r\n        current_place: \"Текущ обект\",\r\n        clients: \"Клиенти\",\r\n        place: \"Обект\",\r\n        places: \"Обекти\",\r\n    },\r\n    common: {\r\n        next: 'Следващ',\r\n        from: 'От',\r\n        to: 'До',\r\n        no_internet: 'Липсва връзка с интернет',\r\n        back: \"Назад\",\r\n        \r\n        title: \"Заглавие\",\r\n        \r\n        id: \"Номер\",\r\n        dashboard: \"Начало\",\r\n        name: \"Име\",\r\n        status: \"Статус\",\r\n        action: \"Действие\",\r\n        client: \"Клиент\",\r\n        date: \"Дата\",\r\n        active: \"Активна\",\r\n        inactive: \"Неактивна\",\r\n        description: \"Описание\",\r\n        image: \"Снимка\",\r\n        yes: \"Да\",\r\n        no: \"Не\",\r\n        add: \"Добави\",\r\n        cancel: \"Откажи\",\r\n        save: \"Запази\",\r\n        delete: \"Изтрий\",\r\n        close: \"Затвори\",\r\n        edit: \"Редактирай\",\r\n        download: \"Свали\",\r\n        role: \"Роля\",\r\n        filter: \"Филтър\",\r\n        place: \"Обект\",\r\n        rotation_start_date: \"Начална дата на ротация\",\r\n        rotation_start_date_info: \"\",\r\n        rotation_days_count: \"Дни на ротация\",\r\n        rotation_days_count_info: \"\",\r\n        deleted: \"Изтрит\",\r\n        user: \"Потребител\",\r\n    },\r\n    tasks: {\r\n        title: \"Задачи\",\r\n        description: \"Описание\",\r\n        rotation_start_date: \"Начална дата на изпълнение\",\r\n        rotation_days_count: \"През колко дни да се изпълнява\",\r\n        times_per_day_of_task_execution: \"Брой изпълнения на ден\",\r\n        users: \"Потребители изпълняващи задачата\",\r\n        complete_tasks: \"Изпълни\",\r\n        completed: \"Изпълнена\",\r\n        not_completed: \"Неизпълнена\",\r\n        checkpoint: \"Локация\",\r\n    },\r\n    checkpoints: {\r\n        title: \"Локации\",\r\n        generate_qr: \"Генерирай нов QR\",\r\n        tasks_for_checkpoint: \"Задачи\",\r\n        add_task: \"Добави задача\",\r\n        add: \"Добави локация\",\r\n    },\r\n    versions: {\r\n        features_about_version: \"Нови функционалности за версия:\",\r\n        version: \"Версия\"\r\n    },\r\n    places: {\r\n        title: \"Обекти\",\r\n        add: \"Добави обект\",\r\n        edit: \"Промяна на обект\",\r\n        ordertypes: \"Типове поръчка\",\r\n        edit: \"Промяна\",\r\n        delete: {\r\n            title: \"Изтрий обект\",\r\n            confirm: \"Сигурен ли си, че искаш да изтриеш обекта \"\r\n        },\r\n        init_settings_for_all_places: \"Инициализирай настройките за всички обекти\",\r\n        functionality_modules: \"Функционални модули\",\r\n        sms_logs: \"SMS-и по месеци\",\r\n        additional_info: \"Допълнителна информация (договорки)\",\r\n        company_email: \"Имейл\",\r\n        lat: \"Lat\",\r\n        lng: \"Lng\",\r\n    },\r\n    messages: {\r\n        errors: {\r\n            invalid_name: \"Невалидно име\",\r\n            invalid_email: \"Невалиден мейл\",\r\n            invalid_role: \"Невалидна роля\",\r\n            you_must_select_place: \"Трябва да изберете обект\",\r\n            invalid_place: \"Невалиден обект\",\r\n            invalid_credentials: \"Невалидни данни за вход\",\r\n            \"Wrong checkpoint for task\": \"Невалидна локация за задачата\"\r\n        }\r\n    },\r\n    users: {\r\n        add: \"Добави\",\r\n        edit: \"Промени\",\r\n        email: \"Имейл\",\r\n        password: \"Парола\",\r\n        date_of_registration: \"Дата на създаване\",\r\n        fullname: \"Име\",\r\n        phone: \"Телефон\",\r\n    },\r\n    roles: {\r\n        SUPER_ADMIN: \"Супер Админ\",\r\n        CLIENT_ADMIN: \"Админ на всички обекти\",\r\n        PLACE_ADMIN: \"Админ на обект\",\r\n        USER: \"Обикновен потребител\"\r\n    },\r\n    clients: {\r\n        title: \"Клиенти\",\r\n        add: \"Добави клиент\",\r\n        edit: \"Промяна на клиент\",\r\n        delete: {\r\n            title: \"Изтрий клиент\",\r\n            confirm: \"Сигурен ли си, че искаш да изтриеш клиента \"\r\n        },\r\n        contract_start_date: \"Договор: начална дата\",\r\n        trial_start_date: \"Тестов период: начало\",\r\n        trial_end_date: \"Тестов период: край\",\r\n        monthly_fee: \"Месечна такса\",\r\n        address: \"Адрес\",\r\n        additional_info: \"Допълнителна информация (договорки)\",\r\n        owner_name: \"Име на собственик\",\r\n    },\r\n    login: {\r\n        title: \"Влез в профила си\",\r\n        email: \"Имейл\",\r\n        password: \"Парола\",\r\n        login: \"Влез\"\r\n    },\r\n}","import {translations} from './../components/common/translations';\r\n\r\nconst defaultState = localStorage.getItem('default_lang') && translations[localStorage.getItem('default_lang')] \r\n?\r\ntranslations[localStorage.getItem('default_lang')] \r\n:\r\ntranslations.bg \r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n      case 'SWITCH_LANGUAGE':\r\n        return translations[action.language] ? translations[action.language] : translations[\"bg\"]\r\n      default:\r\n        return state\r\n    }\r\n  }","import { SET_CURRENT_USER } from '../actions/types';\r\nimport isEmpty from 'lodash/isEmpty';\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    auth_error: \"\"\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                isAuthenticated: !isEmpty(action.user),\r\n                user: action.user\r\n            }\r\n        default: return state;\r\n    }\r\n}","import { LIST_PLACES, LIST_ORDERTYPES, LIST_FUNCTIONALITY_MODULES, GET_PLACES_SMS, GET_CITIES } from '../actions/types';\r\n\r\nconst initialState = {\r\n    places: [],\r\n    ordertypes: [],\r\n    functionality_modules: [],\r\n    places_sms_logs: [],\r\n    cities: [],\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case LIST_PLACES: {\r\n            return {\r\n                ...state,\r\n                places: action.payload,\r\n            }\r\n        }\r\n        case LIST_ORDERTYPES: {\r\n            return {\r\n                ...state,\r\n                ordertypes: action.payload,\r\n            }\r\n        }\r\n        case LIST_FUNCTIONALITY_MODULES: {\r\n            return {\r\n                ...state,\r\n                functionality_modules: action.payload,\r\n            }\r\n        }\r\n        case GET_PLACES_SMS: {\r\n            return {\r\n                ...state,\r\n                places_sms_logs: action.payload\r\n            }\r\n        }\r\n        case GET_CITIES: {\r\n            return {\r\n                ...state,\r\n                cities: action.payload\r\n            }\r\n        }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","export const LIST_PLACES = 'LIST_PLACES';\r\nexport const LIST_ORDERTYPES = 'LIST_ORDERTYPES';\r\nexport const LIST_FUNCTIONALITY_MODULES = 'LIST_FUNCTIONALITY_MODULES';\r\nexport const GET_PLACES_SMS = 'GET_PLACES_SMS';\r\nexport const GET_CITIES = 'GET_CITIES';","import { LIST_CLIENTS } from '../actions/types';\r\n\r\nconst initialState = {\r\n    clients: []\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case LIST_CLIENTS: {\r\n            return {\r\n                ...state,\r\n                clients: action.payload,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const LIST_CLIENTS = 'LIST_CLIENTS';","import { SHOW_LOADING, HIDE_LOADING } from './types';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SHOW_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case HIDE_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","export const SHOW_LOADING = 'SHOW_LOADING';\r\nexport const HIDE_LOADING = 'HIDE_LOADING';\r\n","import { SET_SOUND_ACTIVATION, CHANGE_ORDER_STYLE_TYPE, SET_SNACKBAR_TEXT, OPEN_CONFIRM_MODAL, CLOSE_CONFIRM_MODAL } from '../actions/types';\r\n\r\nlet orderTypeStyles = {};\r\norderTypeStyles['row'] = 'box';\r\norderTypeStyles['box'] = 'row';\r\n\r\nconst initialState = {\r\n    soundActivated: false,\r\n    orderStyleType: 'row', // ['row','box']\r\n    snackbarText: '',\r\n    snackbarActionCallback: () => { },\r\n    snackbarActionText: '',\r\n    openConfirmModal: false,\r\n    confirmModalText: '',\r\n    confirmModalCallbackSuccess: () => void (0),\r\n    confirmModalCallbackFail: () => void (0),\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_SOUND_ACTIVATION:\r\n            return {\r\n                ...state,\r\n                soundActivated: action.payload,\r\n            }\r\n        case CHANGE_ORDER_STYLE_TYPE:\r\n            return {\r\n                ...state,\r\n                orderStyleType: orderTypeStyles[state.orderStyleType], //if is row will set box and so on..\r\n            }\r\n        case SET_SNACKBAR_TEXT:\r\n            return {\r\n                ...state,\r\n                snackbarText: action.payload.text,\r\n                snackbarActionText: action.payload.actionText,\r\n                snackbarActionCallback: action.payload.callback,\r\n            }\r\n        case OPEN_CONFIRM_MODAL:\r\n            return {\r\n                ...state,\r\n                openConfirmModal: true,\r\n                confirmModalText: action.payload.text,\r\n                confirmModalCallbackSuccess: action.payload.callbackSuccess,\r\n                confirmModalCallbackFail: action.payload.callbackFail,\r\n            }\r\n        case CLOSE_CONFIRM_MODAL:\r\n            return {\r\n                ...state,\r\n                openConfirmModal: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { LIST_TASKS } from '../actions/types';\r\n\r\nconst initialState = {\r\n    tasks: [],\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case LIST_TASKS: {\r\n            return {\r\n                ...state,\r\n                tasks: action.payload,\r\n            }\r\n        }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","export const LIST_TASKS = 'LIST_TASKS';\r\n","import { LIST_CHECKPOINTS } from '../actions/types';\r\n\r\nconst initialState = {\r\n    checkpoints: [],\r\n    errors: [],\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case LIST_CHECKPOINTS:\r\n            return {\r\n                ...state,\r\n                checkpoints: action.payload,\r\n                errors: [] // Reset add/edit table error\r\n            }\r\n     \r\n        default:\r\n            return state;\r\n    }\r\n}","export const LIST_CHECKPOINTS = 'LIST_CHECKPOINTS';","import { combineReducers } from 'redux';\r\nimport { routerReducer } from 'react-router-redux';\r\nimport usersReducer from './usersReducer';\r\nimport messagesReducer from './../components/messages/messages.reducer';\r\nimport languageReducer from './languageReducer';\r\nimport { connectRouter } from 'connected-react-router'\r\nimport authReducer from '../reducers/authReducer';\r\nimport placesReducer from './../components/places/reducers/places.reducer';\r\nimport clientsReducer from './../components/clients/reducers/clients.reducer';\r\nimport loadingReducer from './../components/common/loading/loading.reducer';\r\nimport adminReducer from './adminReducer';\r\n\r\nimport tasksReducer from '../components/tasks/reducers/tasks.reducer';\r\nimport checkpointsReducer from '../components/checkpoints/reducers/checkpoints.reducer';\r\n\r\nconst createRootReducer = (history) => combineReducers({\r\n  tasks: tasksReducer,\r\n  checkpoints: checkpointsReducer,\r\n  users: usersReducer,\r\n  messages: messagesReducer,\r\n  lang: languageReducer,\r\n  auth: authReducer,\r\n  places: placesReducer,\r\n  clients: clientsReducer,\r\n  loading: loadingReducer,\r\n  router: connectRouter(history),\r\n  routing: routerReducer,\r\n  admin: adminReducer,\r\n})\r\n\r\nexport default createRootReducer","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n// import rootReducer from './reducers';\r\n\r\nimport { browserHistory } from 'react-router-dom';\r\nimport { syncHistoryWithStore, routerMiddleware } from 'react-router-redux';\r\n\r\nimport { createBrowserHistory } from 'history'\r\nimport createRootReducer from './reducers'\r\n\r\nexport const history = createBrowserHistory()\r\n\r\nconst InitialState = {\r\n    Intl: { locale: 'en'}\r\n};\r\nconst midArr = [thunk, routerMiddleware(history)]\r\n\r\nconst middleware = [\r\n    applyMiddleware(...midArr),\r\n    ...(window.__REDUX_DEVTOOLS_EXTENSION__ ? [window.__REDUX_DEVTOOLS_EXTENSION__()] : [])\r\n]\r\n\r\nconst store = createStore(\r\n    createRootReducer(history),\r\n    InitialState, \r\n    compose(...middleware)\r\n);\r\n\r\n// const history = syncHistoryWithStore(browserHistory, store);\r\n\r\n\r\nexport default store;\r\n/*\r\nvar arr = [1, 2, 3, 4]\r\nvar [a, ...b] = arr;\r\nconsole.log('a:'+a)\r\nconsole.log('b',b)\r\n*/\r\n","let currentDomain = window.location.origin + '/';\r\nlet apiDomain = currentDomain;\r\nlet imgPath = currentDomain + \"admin/\";\r\n\r\nif (window.location.hostname == 'localhost') {\r\n    apiDomain = 'http://localhost:4000/'; // Custom api requests ulr\r\n    imgPath = currentDomain;\r\n}\r\n\r\nexport const API_DOMAIN = apiDomain;\r\nexport const SCAN_URL = apiDomain + \"t/\";\r\nexport const API_URL = apiDomain + \"api/\";\r\nexport const ADMIN_URL = \"/admin/\";\r\nexport const PUBLIC_PATH = currentDomain + \"admin/\";\r\n\r\n// Pagination\r\nexport const ITEMS_PER_PAGE = 8;\r\nexport const ITEMS_PAGE_RANGE_DISPLAYED = 5;\r\n\r\n// Image paths\r\nexport const PUBLIC_IMAGE_PATH = apiDomain;\r\nexport const IMG_PATH = currentDomain + \"files/images/\";\r\nexport const PRODUCT_THUMB_IMG_URL = currentDomain + \"files/images_thumbs/\";\r\nexport const PRODUCT_IMG_URL = apiDomain + \"files/images/\";\r\nexport const SETTINGS_IMG_URL = apiDomain + \"files/images/\";\r\nexport const PLACE_IMG_URL = apiDomain + \"files/places/\";\r\n\r\nexport const IMAGE_CAT_IMAGES_PATH = currentDomain + \"files/category_menu_images/\";\r\nexport const DEFAULT_CATEGORIES_IMAGES_PATH = currentDomain + \"files/defaultCategoryImages/\"\r\n\r\nexport const FILTER_PLACES_NAME = 'places_ids';\r\n\r\nexport const ADMIN_QR_CODE_DATA = {\r\n    width: 400,\r\n    height: 400,\r\n    margin: 15,\r\n    // data: '',\r\n    image: null, //tablLogo,\r\n    // image: tablLogoBlack,\r\n    \"qrOptions\": {\r\n        \"typeNumber\": \"0\",\r\n        \"mode\": \"Byte\",\r\n        \"errorCorrectionLevel\": \"Q\"\r\n    },\r\n    \"imageOptions\": {\r\n        \"hideBackgroundDots\": true,\r\n        \"imageSize\": 0.4,\r\n        \"margin\": 0\r\n    },\r\n    \"dotsOptions\": {\r\n        \"type\": \"square\",\r\n        // \"type\": \"rounded\",\r\n        \"color\": \"#000000\"\r\n    },\r\n    \"backgroundOptions\": {\r\n        \"color\": \"#ffffff\"\r\n    },\r\n    \"dotsOptionsHelper\": {\r\n        \"colorType\": {\r\n            \"single\": true,\r\n            \"gradient\": false\r\n        },\r\n        \"gradient\": {\r\n            \"linear\": true,\r\n            \"radial\": false,\r\n            \"color1\": \"#6a1a4c\",\r\n            \"color2\": \"#6a1a4c\",\r\n            \"rotation\": \"0\"\r\n        }\r\n    },\r\n    \"cornersSquareOptions\": {\r\n        // \"type\": \"\",\r\n        \"type\": \"square\",\r\n        \"color\": \"#000000\"\r\n    },\r\n    \"cornersSquareOptionsHelper\": {\r\n        \"colorType\": {\r\n            \"single\": true,\r\n            \"gradient\": false\r\n        },\r\n        \"gradient\": {\r\n            \"linear\": true,\r\n            \"radial\": false,\r\n            \"color1\": \"#000000\",\r\n            \"color2\": \"#000000\",\r\n            \"rotation\": \"0\"\r\n        }\r\n    },\r\n    \"cornersDotOptions\": {\r\n        \"type\": \"\",\r\n        \"color\": \"#f66201\"\r\n        // \"color\": \"#000000\" // Black\r\n    },\r\n    \"cornersDotOptionsHelper\": {\r\n        \"colorType\": {\r\n            \"single\": true,\r\n            \"gradient\": false\r\n        },\r\n        \"gradient\": {\r\n            \"linear\": true,\r\n            \"radial\": false,\r\n            \"color1\": \"#000000\",\r\n            \"color2\": \"#000000\",\r\n            \"rotation\": \"0\"\r\n        }\r\n    },\r\n    \"backgroundOptionsHelper\": {\r\n        \"colorType\": {\r\n            \"single\": true,\r\n            \"gradient\": false\r\n        },\r\n        \"gradient\": {\r\n            \"linear\": true,\r\n            \"radial\": false,\r\n            \"color1\": \"#ffffff\",\r\n            \"color2\": \"#ffffff\",\r\n            \"rotation\": \"0\"\r\n        }\r\n    }\r\n}\r\n\r\nexport const ADMIN_VERSION = '03.04.2021-1';\r\n\r\n//Reservations\r\nexport const API_TOKEN = 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJ0YWJsIiwiYXVkIjoiVEhFX0FVRElFTkNFIiwiaWF0IjoxNTcxMDkzNzMyLCJuYmYiOjE1NzEwOTM3NDIsImV4cCI6MTcyODc3MzczMiwiZGF0YSI6eyJpZCI6IjEiLCJmaXJzdG5hbWUiOiJ0ZXN0IiwibGFzdG5hbWUiOm51bGwsImVtYWlsIjoidGVzdEB0ZXN0LmNvbSJ9fQ.wdL6RIeLM3FmojeDZuz6BBsGg1BBSHn4vX3-nYyNdHk';","import { ADD_ERROR_MESSAGES, CLEAR_MESSAGES, ADD_SUCCESS_MESSAGE}\r\n     from './types';\r\n\r\nexport const clearMessages = () => dispatch => {\r\n    dispatch({\r\n        type: CLEAR_MESSAGES\r\n    })\r\n}\r\n\r\nexport const addErrorMessages = (msgs) => dispatch => {\r\n    dispatch(clearMessages());\r\n    dispatch({\r\n        type: ADD_ERROR_MESSAGES,\r\n        payload: msgs\r\n    })\r\n}\r\n\r\nexport const addSuccessMessage = (msg) => dispatch => {\r\n    dispatch(clearMessages());\r\n    dispatch({\r\n        type: ADD_SUCCESS_MESSAGE,\r\n        payload: msg\r\n    })\r\n}\r\n","import axios from 'axios';\r\nimport { LIST_LANGUAGES, ADD_EDIT_LANGUAGE_ERROR } from './types';\r\nimport { API_URL, ADMIN_URL } from './../constants'\r\n\r\nexport const changeLanguage = (language) => {\r\n    localStorage.setItem('default_lang', language);\r\n    return {\r\n      type: 'SWITCH_LANGUAGE',\r\n      language\r\n    }\r\n  }\r\n  \r\n\r\nexport const listLanguages = () => dispatch => {\r\n    axios\r\n        .get(API_URL + 'languages')\r\n        .then(res =>\r\n            dispatch({\r\n                type: LIST_LANGUAGES,\r\n                payload: res.data\r\n            })\r\n        ).catch(error => {\r\n            console.log('erroring ', error)\r\n            throw(error);\r\n        });\r\n}\r\n\r\nexport const addLanguage = (postData, history) => dispatch => {\r\n    fetch(API_URL + 'languages', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n    .then(res => res.json())\r\n    .then(\r\n        function(post) {\r\n            if (post.error) {\r\n                dispatch({\r\n                    type: ADD_EDIT_LANGUAGE_ERROR,\r\n                    payload: post.error.errors\r\n                })\r\n            } else {\r\n                history.push(ADMIN_URL + 'settings/languages');\r\n            }\r\n        }\r\n    )\r\n    .catch(function(e) {\r\n        console.log(\"error\", e);\r\n    });\r\n}\r\n\r\nexport const editLanguage = (id, postData, history) => dispatch => {\r\n    fetch(API_URL + 'languages/'+id, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n    })\r\n    .then(res => res.json())\r\n    .then(\r\n        function(post) {\r\n            if (post.error) {\r\n                dispatch({\r\n                    type: ADD_EDIT_LANGUAGE_ERROR,\r\n                    payload: post.error.errors\r\n                })\r\n            } else {\r\n                history.push(ADMIN_URL + 'settings/languages');\r\n            }\r\n        }\r\n    )\r\n    .catch(function(e) {\r\n        console.log(\"error\", e);\r\n    });\r\n}\r\n\r\nexport const removeLanguage = (id, history) => dispatch => {\r\n    fetch(API_URL + 'languages/'+id, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify({deleted:true})\r\n    })\r\n    .then(res => res.json())\r\n    .then(\r\n        function(res) {\r\n            if (history) {\r\n                // Deleting from /edit\r\n                history.push(ADMIN_URL + \"settings/languages\")\r\n            } else { \r\n                // Deleting from /list\r\n                dispatch(listLanguages())\r\n            }\r\n        }\r\n    )\r\n    .catch(function(e) {\r\n        console.log(\"error\", e);\r\n    });\r\n}\r\n","import axios from 'axios';\r\n\r\nexport default function setCustomPlaceHeader(placeId) {\r\n    if (placeId) {\r\n        // console.log(\"SETTING PLACE HEADER \", placeId)\r\n        axios.defaults.headers.common['place'] = placeId;\r\n\r\n        // console.log(\"TOKENN SETT\", token);\r\n        // console.log(axios.defaults.headers)\r\n    } else {\r\n        delete axios.defaults.headers.common['place'];\r\n    }\r\n}","import Cookies from 'universal-cookie';\r\nimport jwt from 'jsonwebtoken';\r\nimport setCustomPlaceHeader from './setCustomPlaceHeader';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst TABL_USER_TOKEN_KEY = '_tut_';     // THE TOKEN FOR THE USER LOGIN   (table_user_token)\r\n\r\nclass Auth {\r\n\r\n\tstatic getDecodedUser() {\r\n\t\tconst userJSON = window.localStorage.getItem(TABL_USER_TOKEN_KEY)\r\n\t\tif (userJSON) {\r\n\t\t\treturn jwt.decode((userJSON));\r\n\t\t}\r\n\t\t// console.log('nqma user')\r\n\t\treturn {}\r\n\t}\r\n\r\n\tstatic isUserAuthenticated() {\r\n\t\treturn window.localStorage.getItem(TABL_USER_TOKEN_KEY) !== null\r\n\t}\r\n\r\n\tstatic setToken(token) {\r\n\t\tlocalStorage.setItem(TABL_USER_TOKEN_KEY, token);\r\n\t}\r\n\r\n\tstatic getToken() {\r\n\t\treturn window.localStorage.getItem(TABL_USER_TOKEN_KEY)\r\n\t}\r\n\r\n\tstatic removeToken() {\r\n\t\treturn window.localStorage.removeItem(TABL_USER_TOKEN_KEY)\r\n\t}\r\n\r\n\tstatic hasAccess(requiredRole) {\r\n\t\tlet currentUser = this.getDecodedUser();\r\n\t\tif (!currentUser) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet currentRole = currentUser.role;\r\n\t\t// console.log('currentRole', currentRole);\r\n\t\t// console.log('requiredRole', requiredRole);\r\n\r\n\t\tswitch (requiredRole) {\r\n\t\t\tcase 'USER':\r\n\t\t\t\treturn true;\r\n\t\t\tcase 'PLACE_ADMIN':\r\n\t\t\t\treturn (currentRole == 'PLACE_ADMIN' || currentRole == 'CLIENT_ADMIN' || currentRole == 'SUPER_ADMIN')\r\n\t\t\tcase 'CLIENT_ADMIN':\r\n\t\t\t\treturn (currentRole == 'CLIENT_ADMIN' || currentRole == 'SUPER_ADMIN')\r\n\t\t\tcase 'SUPER_ADMIN':\r\n\t\t\t\treturn (currentRole == 'SUPER_ADMIN')\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic hasAccessCustom(allowedRoles) {\r\n\t\tlet currentUser = this.getDecodedUser();\r\n\t\tif (!currentUser) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet currentRole = currentUser.role;\r\n\r\n\t\tif (allowedRoles.includes(currentRole)) {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tstatic setUserPlace(place_id) {\r\n\t\tconst current = new Date();\r\n\t\tconst after100Years = new Date();\r\n\t\tafter100Years.setFullYear(current.getFullYear() + 100);\r\n\r\n\t\tif (place_id) {\r\n\t\t\tcookies.set('tabl_a_place', place_id, { path: '/', expires: after100Years });\r\n\t\t\tsetCustomPlaceHeader(place_id);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic getUserPlace() {\r\n\t\treturn cookies.get('tabl_a_place');\r\n\t}\r\n\r\n}\r\n\r\nexport default Auth\r\n","import axios from 'axios';\r\nimport { LIST_PLACES, LIST_ORDERTYPES, LIST_FUNCTIONALITY_MODULES, GET_PLACES_SMS, GET_CITIES} from './types';\r\nimport { API_URL, ADMIN_URL } from './../../../constants';\r\nimport { addSuccessMessage, addErrorMessages } from './../../messages/messages.actions';\r\nimport { changeLanguage } from './../../../actions/languagesActions';\r\nimport Auth from './../../../utils/Auth';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nexport const listPlacesByUserRole = () => dispatch => {\r\n    let currUser = jwtDecode(Auth.getToken());\r\n\r\n    let query = \"\";\r\n    if (currUser.role == \"CLIENT_ADMIN\") {\r\n        query = `?client_id=${currUser.client_id}`\r\n\r\n    } else if (currUser.role == \"PLACE_ADMIN\") {\r\n        query = `?place_id=${currUser.place_id}`\r\n    }\r\n\r\n    axios\r\n        .get(API_URL + `places${query}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LIST_PLACES,\r\n                payload: res && res.data ? res.data : []\r\n            });\r\n        })\r\n        .catch(error => {\r\n            throw (error);\r\n        });\r\n}\r\n\r\nexport const addEditPlace = (postData) => dispatch => {\r\n    // return axios({\r\n    //     method: \"post\",\r\n    //     url: API_URL + 'places',\r\n    //     data: postData,\r\n    //     headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    //   })\r\n    return axios\r\n        .post(API_URL + 'places', postData)\r\n\r\n        .then((post) => {\r\n            // post = post.data;\r\n            // dispatch(addEditAllergenTranslation(post.id, langId, postData))\r\n            // if (!postData.id && typeof postData.deleted === \"undefined\") { // edit\r\n            // } else {\r\n                dispatch(listPlacesByUserRole());\r\n                // history.push(ADMIN_URL + 'clients');\r\n                // dispatch(addSuccessMessage(\"Changes saved\"))\r\n                \r\n            // }\r\n        })\r\n\r\n        \r\n}\r\n\r\n\r\nexport const addRemoveOrdertype = (add = true, place_id, ordertype_id) => dispatch => {\r\n    const route = add ? 'addOrdertype' : 'removeOrdertype';\r\n\r\n    axios\r\n        .post(API_URL + `places/${route}`, { \"place_id\": place_id, \"ordertype_id\": ordertype_id })\r\n        .then(function (res) {\r\n            dispatch(listPlacesByUserRole())\r\n\r\n            if (res.error) {\r\n                //TODO image not uploaded Toastr\r\n            }\r\n            else {\r\n                // history.push(ADMIN_URL + 'products_admin');\r\n            }\r\n            // Error msg\r\n            // history.push(ADMIN_URL + 'products');\r\n        })\r\n    // .catch(e =>\r\n    //     // history.push(ADMIN_URL + 'products')\r\n    // );\r\n\r\n}\r\n\r\nexport const listOrderTypes = () => dispatch => {\r\n\r\n    axios\r\n        .get(API_URL + `ordertypes`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LIST_ORDERTYPES,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            throw (error);\r\n        });\r\n}\r\n\r\nexport const copyMenu = (from_place_id) => dispatch => {\r\n    let to_place_id = Auth.getUserPlace();\r\n\r\n    axios\r\n        .post(API_URL + `copyMenuFromPlaceToAnother`, { \"from_place_id\": from_place_id, \"to_place_id\": to_place_id })\r\n        .then(function (res) {\r\n            dispatch(addSuccessMessage(\"Successfully copied menu\"));\r\n\r\n            // dispatch(listPlacesByUserRole())\r\n\r\n            if (res.error) {\r\n                //TODO image not uploaded Toastr\r\n            }\r\n            else {\r\n                // history.push(ADMIN_URL + 'products_admin');\r\n            }\r\n            // Error msg\r\n            // history.push(ADMIN_URL + 'products');\r\n        })\r\n        .catch(err => {\r\n            dispatch(addErrorMessages(err.response.data.error.errors));\r\n        })\r\n}\r\n\r\nexport const initPlaceSettings = (placeId) => dispatch => {\r\n    axios\r\n        .post(API_URL + `settings/init_place_settings`, { \"place_id\": placeId })\r\n        .then(function (res) {\r\n            dispatch(addSuccessMessage(res.data.message));\r\n        })\r\n        .catch(err => {\r\n            dispatch(addErrorMessages(err.response.data.error.errors));\r\n        })\r\n}\r\n\r\nexport const initSettingsForAllPlaces = () => dispatch => {\r\n\r\n    axios\r\n        .post(API_URL + `settings/initSettingsAllPlaces`, {})\r\n        .then(function (res) {\r\n            dispatch(addSuccessMessage(res.data.data.message));\r\n        })\r\n        .catch(err => {\r\n            dispatch(addErrorMessages(err.response.data.error.errors));\r\n        })\r\n}\r\n\r\n\r\nexport const listFunctionalityModules = () => dispatch => {\r\n    axios\r\n    .get(API_URL + `functionalityModules`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: LIST_FUNCTIONALITY_MODULES,\r\n            payload: res.data\r\n        });\r\n    })\r\n    .catch(error => {\r\n        throw (error);\r\n    });\r\n}\r\n\r\n\r\nexport const addRemoveFunctionalityModule = (add = true, place_id, module_id, price = null) => dispatch => {\r\n    const route = add ? 'addFunctionalityModule' : 'removeFunctionalityModule';\r\n\r\n    axios\r\n        .post(API_URL + `places/${route}`, { \"place_id\": place_id, \"module_id\": module_id, \"price\": price })\r\n        .then(function (res) {\r\n            dispatch(listPlacesByUserRole())\r\n            dispatch(addSuccessMessage(\"Changes saved\"))\r\n\r\n        })\r\n        .catch(e => {\r\n\r\n        });\r\n}\r\n\r\nexport const getSmsesForPlacesByMonth = () => dispatch => {\r\n    \r\n    axios\r\n    .get(API_URL + `logs/getSmsesForPlacesByMonth`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: GET_PLACES_SMS,\r\n            payload: res && res.data ? res.data : []\r\n        });\r\n    })\r\n    .catch(error => {\r\n        throw (error);\r\n    });\r\n}\r\n\r\n\r\n\r\nexport const getCities = () => dispatch =>  {\r\n\r\n    axios.get(API_URL + \"getCities\")\r\n    .then(resp => {\r\n        dispatch({\r\n            type: GET_CITIES,\r\n            payload: resp.data\r\n        });\r\n    })\r\n    .catch(e => {\r\n\r\n    });\r\n}\r\n\r\n// export const getTagsForMap = () => dispatch =>  {\r\n\r\n//     axios.get(API_URL + \"getTagsForMap\")\r\n//     .then(resp => {\r\n//         dispatch({\r\n//             type: GET_TAGS_FOR_MAP,\r\n//             payload: resp.data\r\n//         });\r\n//     })\r\n//     .catch(e => {\r\n\r\n//     });\r\n// }","import axios from 'axios';\r\n\r\nexport default function setAuthorizationToken(token) {\r\n    if (token) {\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n\r\n        // console.log(\"TOKENN SETT\", token);\r\n        // console.log(axios.defaults.headers)\r\n    } else {\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n}","// import jwt from 'jsonwebtoken';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { SET_CURRENT_USER, LOGOUT } from './types';\r\nimport setAuthorizationToken from '../utils/setAuthorizationToken';\r\nimport axios from 'axios';\r\nimport Auth from './../utils/Auth';\r\n// import {history} from './../utils/history';\r\nimport { history } from './../store';\r\nimport { API_URL } from './../constants'\r\nimport { addErrorMessages } from './../components/messages/messages.actions';\r\nexport function logout() {\r\n    // localStorage.removeItem('jwtToken');\r\n    Auth.removeToken();\r\n    setAuthorizationToken(false);\r\n    history.push(\"/admin/login\")\r\n    // window.location.href='/admin/login';\r\n    // return dispatch => {\r\n    //     dispatch(setCurrentUser({}));\r\n    // }\r\n    return {\r\n        type: LOGOUT\r\n    }\r\n}\r\n\r\nexport function login(data) {\r\n    return dispatch => {\r\n        return axios.post(API_URL + 'users/login', data)\r\n    }\r\n}\r\n\r\nexport function setCurrentUser(user) {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        user\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {logout} from './../../actions/authActions';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass MessagesContainer extends Component {\r\n\trender() {\r\n\t\tlet errors = [];\r\n\t\t\r\n\t\tif(this.props.data == 'Unauthorized') {\r\n\t\t\tthis.props.logout();\r\n\t\t\treturn ;\r\n\t\t} else {\r\n\r\n\t\t\t// for when error.response.data == \"String\"\r\n\t\t\tif(this.props.errors && this.props.errors.response && this.props.errors.response.data && typeof this.props.errors.response.data === 'string') {\r\n\t\t\t\tlet errorMsg = this.props.errors.response.data;\r\n\t\t\t\terrorMsg = this.props.translations && this.props.translations.messages.errors[errorMsg] || errorMsg;\r\n\t\t\t\terrors.push(errorMsg);\r\n\r\n\t\t\t// for when error.response.data == {error: { errors: [ {message: 'err msg'} ] }}\r\n\t\t\t}else if(this.props.errors && this.props.errors.response && this.props.errors.response.data && this.props.errors.response.data.error && this.props.errors.response.data.error.errors) {\r\n\t\t\t\tthis.props.errors.response.data.error.errors.map(errObj => {\r\n\t\t\t\t\tlet errorMsg = errObj.message;\r\n\t\t\t\t\terrorMsg = this.props.translations && this.props.translations.messages.errors[errorMsg] || errorMsg;\r\n\t\t\t\t\terrors.push(errorMsg);\r\n\t\t\t\t})\r\n\r\n\t\t\t// Същото като горното но съм подал error.response.data\t\t\r\n\t\t\t} else if(this.props.errors.length > 0 && typeof this.props.errors[0] === 'object' && this.props.errors[0] !== null) {\r\n\t\t\t\tthis.props.errors.map(errObj => {\r\n\t\t\t\t\terrors.push(errObj.message);\r\n\t\t\t\t})\r\n\t\t\t} else if(this.props.errors.length > 0 && typeof this.props.errors[0] === 'string') {\r\n\t\t\t\terrors = this.props.errors;\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\tlet k = 0;\r\n\r\n\t\terrors.map(e => {\r\n\t\t\ttoast.error(e, {\r\n\t\t\t\ttheme: \"colored\"\r\n\t\t\t  });\r\n\t\t})\r\n\r\n\t\tif(this.props.success.length > 0) {\r\n\t\t\ttoast.success(this.props.success, {\r\n\t\t\t\ttheme: \"colored\"\r\n\t\t\t  })\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<ToastContainer\r\n\t\t\t\tposition=\"top-right\"\r\n\t\t\t\tautoClose={8000}\r\n\t\t\t\thideProgressBar={false}\r\n\t\t\t\tnewestOnTop={false}\r\n\t\t\t\tcloseOnClick\r\n\t\t\t\trtl={false}\r\n\t\t\t\tpauseOnFocusLoss\r\n\t\t\t\tdraggable\r\n\t\t\t\tpauseOnHover\r\n\t\t\t/>\r\n\t\t// <div className=\"errors-container\">\r\n\r\n\r\n\r\n\t\t// \t{errors.length > 0 ?\r\n\t\t// \t\terrors.map(e => (\r\n\t\t// \t\t\t<div key={k++} className=\"alert alert-danger fade show\" role=\"alert\">\r\n\t\t// \t\t\t\t{e}\r\n\t\t// \t\t\t</div>\r\n\t\t// \t\t))\r\n\t\t// \t:\r\n\t\t// \t\t''\r\n\t\t// \t}\r\n\t\t\t\t\r\n\t\t// \t{this.props.success.length > 0 ?\r\n\t\t// \t\t<div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">{this.props.success}</div>\r\n\t\t// \t:\r\n\t\t// \t\t''\r\n\t\t// \t}\r\n\t\t// </div>\r\n\t\t)\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = (state, dispatch) => {\r\n    return {\r\n\t\tdata: state.messages.data,\r\n\t\terrors: state.messages.errors || [],\r\n\t\tsuccess: state.messages.success || '',\r\n\t\ttranslations: state.lang\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {logout})(MessagesContainer);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport { NavLink } from 'react-router-dom';\r\nimport Pagination from \"react-js-pagination\";\r\nimport { push } from 'react-router-redux';\r\nimport { listPlacesByUserRole } from './../actions/places.actions';\r\n\r\nimport { ADMIN_URL, ITEMS_PER_PAGE, ITEMS_PAGE_RANGE_DISPLAYED, FILTER_PLACES_NAME } from '../../../constants';\r\nimport MessagesContainer from './../../messages/MessagesContainer';\r\nimport queryString from 'query-string'\r\nimport Select from 'react-select'\r\nimport Auth from './../../../utils/Auth';\r\n\r\nclass SetCurrPlacePage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.listPlacesByUserRole()\r\n    }\r\n    \r\n    handlePageChange = (page) => {\r\n        // this.props.dispatch(push('/admin/settings?page='+page))\r\n    }\r\n\r\n\tonChangeSelectAutocompletePlace = (valueLabel) => {\r\n        Auth.setUserPlace(valueLabel.value);\r\n        window.localStorage.setItem(FILTER_PLACES_NAME, JSON.stringify([valueLabel.value]));\r\n\r\n        document.location.href = document.location.href;\r\n\t}\r\n\r\n    render() {\r\n\r\n        let autocompletePlaces = [];\r\n        let selectedPlace = {};\r\n        \r\n        this.props.places.map(place => {\r\n            if (Auth.getUserPlace() == place.id) {\r\n                selectedPlace = { 'value':place.id, 'label': place.name} ;\r\n            }\r\n            \r\n            // if(place.active == 1) {                \r\n                autocompletePlaces.push( {'value': place.id, 'label': place.name} );\r\n            // } \r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <main className=\"main\">\r\n                    \r\n                    <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.dashboard}</NavLink></li>\r\n                        <li className=\"breadcrumb-item active\">{this.props.translations.sidemenu.places}</li>\r\n                    </ol>\r\n    \r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"animated fadeIn\">\r\n                            <div className=\"row\">\r\n                        \r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"card\">\r\n                                        \r\n                                        <div className=\"card-body\">\r\n                                            \r\n                                            <MessagesContainer/>\r\n\r\n                                            <Select name=\"parentId\" options={autocompletePlaces} \r\n                                                onChange={this.onChangeSelectAutocompletePlace} \r\n                                                value={selectedPlace} \r\n                                                // placeholder={\"Основна категория (родител)\"}\r\n                                            />\r\n\r\n                                            <br/>\r\n                                            <hr/>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, dispatch) => {\r\n\r\n    return {\r\n        currUser: state.auth.user || [],\r\n        places: state.places.places,\r\n        translations: state.lang,\r\n\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({ listPlacesByUserRole }, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps )(SetCurrPlacePage);\r\n","import axios from 'axios';\r\nimport { LIST_USERS, ADD_EDIT_CATEGORY_ERROR, LIST_USER_ROLES, LIST_REGISTERED_USERS } from './types';\r\nimport { API_URL, ADMIN_URL } from './../constants'\r\nimport { addErrorMessages, addSuccessMessage } from './../components/messages/messages.actions';\r\nimport Auth from './../utils/Auth';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nexport const listUsers = (place_id = null) => dispatch => {\r\n    let currUser = jwtDecode(Auth.getToken());\r\n\r\n    let query = \"\";\r\n    // if(currUser.role == \"CLIENT_ADMIN\") {\r\n    //     query = `?client_id=${currUser.client_id}`\r\n    // } else if(currUser.role != \"SUPER_ADMIN\") {\r\n    //     return;\r\n    // }\r\n\r\n    axios\r\n        .get(API_URL + 'users' + query)\r\n        .then(res =>\r\n            dispatch({\r\n                type: LIST_USERS,\r\n                payload: res && res.data || []\r\n            })\r\n        ).catch(error => {\r\n            console.log('erroring ', error)\r\n            throw (error);\r\n        });\r\n}\r\n\r\nexport const getRegisteredUsers = (placeId = null) => dispatch => {\r\n    let query = \"\";\r\n\r\n    if (placeId != null) {\r\n        query += \"?place_id=\" + placeId;\r\n    }\r\n\r\n    // let place_id = Auth.getUserPlace();\r\n    // query += \"?place_id=\" + place_id;\r\n\r\n    axios\r\n        .get(API_URL + 'users/registered' + query)\r\n        .then(res =>\r\n            dispatch({\r\n                type: LIST_REGISTERED_USERS,\r\n                payload: res && res.data || []\r\n            })\r\n        ).catch(error => {\r\n            console.log('erroring ', error)\r\n            throw (error);\r\n        });\r\n}\r\n\r\nexport const listUserRoles = () => dispatch => {\r\n    axios\r\n        .get(API_URL + 'users/roles')\r\n        .then(res =>\r\n            dispatch({\r\n                type: LIST_USER_ROLES,\r\n                payload: res.data\r\n            })\r\n        ).catch(error => {\r\n            if (error && error.response && error.response.data && error.response.data.error && error.response.data.error.errors) {\r\n                dispatch(addErrorMessages(error.response.data.error.errors));\r\n            } else {\r\n                dispatch(addErrorMessages([\"Unauthorized\"]));\r\n            }\r\n\r\n            // console.log('erroring ', error)\r\n            // throw(error);\r\n        });\r\n}\r\n\r\nexport const addUser = (postData, history) => dispatch => {\r\n    axios\r\n        .post(API_URL + 'users/register', postData)\r\n        .then(res => {\r\n            dispatch(listUsers());\r\n\r\n            history.push(ADMIN_URL + 'users');\r\n        })\r\n        .catch(error => {\r\n            if (error && error.response) {\r\n                dispatch(addErrorMessages(error.response.data.error.errors));\r\n            } else {\r\n                console.log(\"ERROR \", error);\r\n            }\r\n            // throw(error);\r\n        });\r\n\r\n\r\n    // fetch(API_URL + 'users/register', {\r\n    //     method: 'POST',\r\n    //     headers: {\r\n    //         'content-type': 'application/json'\r\n    //     },\r\n    //     body: JSON.stringify(postData)\r\n    // })\r\n    // .then(res => res.json())\r\n    // .then(\r\n    //     function(post) {\r\n    //         if (post.error) {\r\n    //             dispatch({\r\n    //                 type: ADD_EDIT_CATEGORY_ERROR,\r\n    //                 payload: post.error.errors\r\n    //             })\r\n    //         } else {\r\n    //             history.push(ADMIN_URL + 'users');\r\n    //         }\r\n    //     }\r\n    // )\r\n    // .catch(function(e) {\r\n    // });\r\n}\r\n\r\nexport const editUser = (id, postData, history) => dispatch => {\r\n    axios\r\n        .post(API_URL + 'users/edit', postData)\r\n        .then(res => {\r\n            dispatch(listUsers());\r\n\r\n            history.push(ADMIN_URL + 'users');\r\n        })\r\n        .catch(error => {\r\n            dispatch(addErrorMessages(error.response.data.error.errors));\r\n            // throw(error);\r\n        });\r\n\r\n\r\n    // fetch(API_URL + 'users/edit', {\r\n    //     method: 'POST',\r\n    //     headers: {\r\n    //         'content-type': 'application/json'\r\n    //     },\r\n    //     body: JSON.stringify(postData)\r\n    // })\r\n    // .then(res => res.json())\r\n    // .then(\r\n    //     function(post) {\r\n    //         if (post.error) {\r\n    //             dispatch({\r\n    //                 type: ADD_EDIT_CATEGORY_ERROR,\r\n    //                 payload: post.error.errors\r\n    //             })\r\n    //         } else {\r\n    //             dispatch(listUsers())\r\n\r\n    //             // listUsers();\r\n    //             history.push(ADMIN_URL + 'users');\r\n    //         }\r\n    //     }\r\n    // )\r\n    // .catch(function(e) {\r\n    //     console.log(\"error\", e);\r\n    // });\r\n}\r\n","import React from 'react'\r\n\r\nconst DeleteUserModal = (props) => (\r\n    <div className=\"modal fade\" id={\"dangerModal\" + props.userId} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-danger\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h4 className=\"modal-title\">Delete user</h4>\r\n                    <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p>Are you sure you want to delete user '{props.userEmail}'?</p>\r\n                </div>\r\n                {/* <div className=\"modal-footer\"> */}\r\n                <div className=\"modal-body\">\r\n                    <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Close</button>\r\n                    <button className=\"btn btn-danger fright\" type=\"button\" data-dismiss=\"modal\" onClick={(e) => { props.deleteUser(e, props.userId, props.userEmail) }}>Delete</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default DeleteUserModal;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL } from '../../constants.js'\r\nimport DeleteUserModal from './DeleteUserModal.js';\r\n\r\nconst ListEachUser = (props) => {\r\n    if (props.user.email !== 'demo@tabl.bg') {\r\n        let userRole = \"\";\r\n        let role = props.roles && props.roles.find(r => r.id == props.user.roleId) || null;\r\n        if(role) {\r\n            userRole = role.name && props.translations.roles[role.name] || \"---\";\r\n        }\r\n\r\n        return (\r\n            <tr key={props.user.id}>\r\n                <td>\r\n                    {props.user.email}\r\n                </td>\r\n                <td>\r\n                    {userRole}\r\n                </td>\r\n                <td>\r\n                    {props.user.active ? <span className=\"badge badge-success\">{props.translations.common.active}</span> : <span className=\"badge badge-secondary\">{props.translations.common.inactive}</span>}\r\n                </td>\r\n                <td>\r\n                    <NavLink to={ADMIN_URL+'users/edit/' + props.user.id}>\r\n                        <button className=\"btn btn-pill btn-link\" type=\"button\">\r\n                            <i className=\"fas fa-edit\"></i>\r\n                        </button>\r\n                    </NavLink>\r\n                    \r\n                    <button className=\"btn btn-pill btn-link\" type=\"button\" data-toggle=\"modal\" data-target={\"#dangerModal\" + props.user.id} >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n\r\n                    <DeleteUserModal\r\n                        userId={props.user.id}\r\n                        userEmail={props.user.email}\r\n                        deleteUser={props.deleteUser}\r\n                    />\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    } else {\r\n        return (<React.Fragment></React.Fragment>)\r\n    }\r\n}\r\n\r\nexport default ListEachUser;","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"animated fadeIn\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"form-group reservation-list-search col-md-2 col-sm-4 \">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">{props.translations.users.email}</label>\r\n                            <input className={`form-control`} id=\"search_email\" type=\"text\" placeholder=\"\"\r\n                                name=\"search_email\" onChange={props.onChange} value={props.search_email} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group reservation-list-search col-md-2 col-sm-4 \">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">{props.translations.common.status}</label>\r\n                            <select className=\"form-control\" name=\"search_active\" defaultValue={props.search_active} onChange={props.onChange}>\r\n                                <option key={0} value=\"\">-</option>\r\n                                <option value={1}>{props.translations.common.inactive}</option>\r\n                                <option value={2}>{props.translations.common.active}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { listUsers, editUser, listUserRoles } from '../../actions/usersActions';\r\nimport ListEachUser from './ListEachUser';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL, ITEMS_PER_PAGE, ITEMS_PAGE_RANGE_DISPLAYED } from '../../constants.js'\r\nimport Pagination from \"react-js-pagination\";\r\nimport { push } from 'react-router-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport Filter from './Filter';\r\n\r\nclass ListUsersPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            search_email: '',\r\n            search_active: '',\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.listUsers();\r\n        this.props.listUserRoles();\r\n    }\r\n\r\n    deleteUser = (e, id, email) => {\r\n        e.preventDefault();\r\n\t\tlet post = {id: id, email: email, deleted:true};\r\n\t\tthis.props.editUser(id, post, this.props.history);\r\n        // this.props.editUser(id);\r\n        this.props.listUsers();\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        this.handlePageChange(1);\r\n    }\r\n\r\n    handlePageChange = (page) => {\r\n        this.props.dispatch(push('/admin/users?page='+page))\r\n    }\r\n\r\n    render() {\r\n        let userItems = this.props.users;\r\n\r\n        if (this.state.search_email.length > 0\r\n            || this.state.search_active != 0\r\n        ) {\r\n            userItems = Object.values(userItems).filter(i => {\r\n                return (\r\n                    ((i.email).toLocaleLowerCase().includes((this.state.search_email).toLocaleLowerCase()))\r\n              \r\n                    && (this.state.search_active != 0 ? i.active == Boolean(parseInt(this.state.search_active) - 1) : true)\r\n                )\r\n            })\r\n        }\r\n\r\n        const items_count = Object.keys(userItems).length\r\n        const current_page = this.props.page;\r\n        const start_offset = (current_page - 1) * ITEMS_PER_PAGE;\r\n        let start_count = 0; \r\n\r\n        return (\r\n            <main className=\"main\">\r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.dashboard}</NavLink></li>\r\n                    <li className=\"breadcrumb-item active\">{this.props.translations.sidemenu.users}</li>\r\n                    <li className=\"breadcrumb-menu d-md-down-none\">\r\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Button group\">\r\n                            <NavLink to={ADMIN_URL+`users/add`} className=\"btn\" >\r\n                                <i className=\"fas fa-plus\"></i> &nbsp; {this.props.translations.users.add}\r\n                            </NavLink>\r\n                        </div>\r\n                    </li>\r\n                </ol>\r\n\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"animated fadeIn\">\r\n                        <div className=\"row\">\r\n                            <Filter\r\n                                translations={this.props.translations}\r\n                                onChange={this.onChange}\r\n                                users={this.props.users}\r\n                            />\r\n\r\n                            <div className=\"col-lg-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body\">\r\n                                        <table className=\"table table-responsive-sm table-striped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>{this.props.translations.users.email}</th>\r\n                                                    <th>{this.props.translations.common.role}</th>\r\n                                                    <th>{this.props.translations.common.status}</th>\r\n                                                    <th>{this.props.translations.common.action}</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {Object.values(userItems).map((u, index) => {\r\n                                                    if(index >= start_offset && start_count < ITEMS_PER_PAGE) {\r\n                                                        start_count++;\r\n                                                        return <ListEachUser \r\n                                                        key={u.id} \r\n                                                        user={u} \r\n                                                        deleteUser={this.deleteUser}\r\n                                                        translations={this.props.translations}\r\n                                                        roles={this.props.roles}\r\n                                                    />\r\n                                                    }\r\n                                                })}\r\n                                                \r\n                                            </tbody>\r\n                                        </table>\r\n\r\n                                        <Pagination\r\n                                            className=\"pagination\"\r\n                                            itemClass=\"page-item\"\r\n                                            activePage={current_page}\r\n                                            activeClass=\"active\"\r\n                                            linkClass=\"page-link\"\r\n                                            prevPageText=\"<\"\r\n                                            nextPageText=\">\"\r\n                                            firstPageText=\"<<\"\r\n                                            lastPageText=\">>\"\r\n                                            itemsCountPerPage={ITEMS_PER_PAGE}\r\n                                            totalItemsCount={items_count}\r\n                                            pageRangeDisplayed={ITEMS_PAGE_RANGE_DISPLAYED}\r\n                                            onChange={this.handlePageChange}\r\n                                            />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, dispatch) => {\r\n    return {\r\n        users: state.users.users || [],\r\n        page: Number(state.router.location.query.page) || 1,\r\n        translations: state.lang,\r\n        roles: state.users.roles,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({ listUsers, editUser, listUserRoles }, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps )(ListUsersPage);\r\n","import { API_TOKEN, SETTINGS_IMG_URL, PRODUCT_THUMB_IMG_URL, PRODUCT_IMG_URL, INVOICES_PATH, PLACE_IMG_URL } from '../constants'\r\n// import history from './history';\r\nimport { history } from './../store';\r\nimport { translations } from '../components/common/translations';\r\nimport Auth from './Auth';\r\nimport store from './../store';\r\n\r\nlet md5 = require('md5');\r\n\r\nclass Utils {\r\n\r\n\tstatic generateCheckpointToken(tableNum) {\r\n\t\treturn md5(md5(tableNum + (+new Date)))\r\n\t}\r\n\r\n\tstatic cropMail(email) {\r\n\t\tif (email && (email.indexOf(\"@\") !== -1)) {\r\n\t\t\treturn email.split(\"@\")[0];\r\n\t\t}\r\n\t\treturn email;\r\n\t}\r\n\r\n\tstatic objectToFormData(obj) {\r\n\t\tlet formData = new FormData();\r\n\t\tfor (var key in obj) {\r\n\t\t\tformData.append(key, obj[key]);\r\n\t\t}\r\n\t\treturn formData;\r\n\t}\r\n\r\n\tstatic onChange(e) {\r\n\t\treturn { [e.target.name]: (e.target.type && e.target.type === 'number') ? parseFloat(e.target.value) : e.target.value }\r\n\t}\r\n\r\n\tstatic onChangeCheckbox(e) {\r\n\t\treturn { [e.target.name]: e.target.checked ? 1 : 0 };\r\n\t}\r\n\r\n\tstatic truncate(input, maxInputLength = 15, cutFirstXSymbold = 5) {\r\n\t\tif (input.length == 0) return '-';\r\n\r\n\t\tif (input.length > maxInputLength)\r\n\t\t\treturn input.substring(0, cutFirstXSymbold) + '...';\r\n\t\telse\r\n\t\t\treturn input;\r\n\t}\r\n\r\n\tstatic appendLeadingZeroes = (n) =>\r\n\t\t(n <= 9 ? \"0\" + n : n)\r\n\r\n\tstatic appendTokenToFormData = (formData) =>\r\n\t\t(formData.append('Authorization', API_TOKEN))\r\n\r\n\r\n\tstatic buildURLQuery = (obj) =>\r\n\t\tObject.entries(obj)\r\n\t\t\t.map(pair => pair.map(encodeURIComponent).join('='))\r\n\t\t\t.join('&');\r\n\r\n\tstatic changeListDateFormat = (d) => {\r\n\t\tlet bgMonths = [];\r\n\t\tbgMonths[0] = 'яну';\r\n\t\tbgMonths[1] = 'фев';\r\n\t\tbgMonths[2] = 'март';\r\n\t\tbgMonths[3] = 'апр';\r\n\t\tbgMonths[4] = 'май';\r\n\t\tbgMonths[5] = 'юни';\r\n\t\tbgMonths[6] = 'юли';\r\n\t\tbgMonths[7] = 'авг';\r\n\t\tbgMonths[8] = 'сеп';\r\n\t\tbgMonths[9] = 'окт';\r\n\t\tbgMonths[10] = 'ное';\r\n\t\tbgMonths[11] = 'дек';\r\n\r\n\t\treturn Utils.appendLeadingZeroes(d.getDate()) + '-' + bgMonths[d.getMonth()] + '-' + d.getFullYear() + ' ' + Utils.appendLeadingZeroes(d.getHours()) + ':' + Utils.appendLeadingZeroes(d.getMinutes())\r\n\t}\r\n\r\n\tstatic errorHandler(error) {\r\n\t\tconst customErrorMsg = \"Възникна грешка #\";\r\n\t\tlet errorCode = 0;\r\n\r\n\t\t// https://gist.github.com/fgilio/230ccd514e9381fafa51608fcf137253\r\n\t\tif (error.response) {\r\n\t\t\terrorCode = 1;\r\n\t\t\tconsole.log(error.response.data); //DO NOT REMOVE\r\n\t\t\tconsole.log(error.response.status); //DO NOT REMOVE\r\n\t\t\tconsole.log(error.response.headers); //DO NOT REMOVE\r\n\t\t\t/*\r\n\t\t\t\t* The request was made and the server responded with a\r\n\t\t\t\t* status code that falls out of the range of 2xx\r\n\t\t\t*/\r\n\t\t} else if (error.request) {\r\n\t\t\terrorCode = 2;\r\n\t\t\terrorCode += ' - Проблем със сървъра или слаб интернет!';\r\n\t\t\t/*\r\n\t\t\t* The request was made but no response was received, `error.request`\r\n\t\t\t* is an instance of XMLHttpRequest in the browser and an instance\r\n\t\t\t* of http.ClientRequest in Node.js\r\n\t\t\t*/\r\n\t\t\tconsole.log(error.request); //DO NOT REMOVE\r\n\t\t} else {\r\n\t\t\terrorCode = 3;\r\n\t\t\t// Something happened in setting up the request and triggered an Error\r\n\t\t\tconsole.log('Error', error.message); //DO NOT REMOVE\r\n\t\t}\r\n\r\n\t\treturn customErrorMsg + errorCode;\r\n\t}\r\n\r\n\tstatic navigateTo = (url) => {\r\n\t\thistory.push(url);\r\n\t}\r\n\tstatic goBack = () => {\r\n\t\thistory.goBack();\r\n\t}\r\n\r\n\t// {Utils.translate(this.props.translations.common.dashboard, {count: 5, total: 8})}\r\n\tstatic translate(text, args = {}) {\r\n\t\tif (Object.keys(args).length === 0) {\r\n\t\t\treturn text;\r\n\t\t}\r\n\r\n\t\tObject.entries(args).map(a => text = text.replace('{' + a[0] + '}', a[1]))\r\n\t\treturn text;\r\n\t}\r\n\r\n\r\n\tstatic normalizePrice = (price) => {\r\n\t\treturn price.toFixed(2);\r\n\t}\r\n\r\n\tstatic compareForPriority = (asc = true) => {\r\n\t\treturn function (a, b) {\r\n\t\t\tlet priorityOne = a.priority;\r\n\t\t\tlet priorityTwo = b.priority;\r\n\t\t\t// // nulls sort after anything else\r\n\t\t\t// if (priorityOne === 0) {\r\n\t\t\t//     return 1;\r\n\t\t\t// }\r\n\t\t\t// else if (priorityTwo === 0) {\r\n\t\t\t//     return -1;\r\n\t\t\t// }\r\n\t\t\t// // otherwise, if we're ascending, lowest sorts first\r\n\t\t\t// return priorityOne < priorityTwo ? -1 : 1;\r\n\r\n\t\t\treturn (priorityOne < priorityTwo) ? -1 : ((priorityOne > priorityTwo) ? 1 : 0);\r\n\r\n\t\t};\r\n\t}\r\n\r\n\tstatic sortName = (asc = true, column = 'name') => {\r\n\t\treturn function (a, b) {\r\n\t\t\tvar nameA = a[column].toUpperCase(); // ignore upper and lowercase\r\n\t\t\tvar nameB = b[column].toUpperCase(); // ignore upper and lowercase\r\n\t\t\tif (nameA < nameB) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\tif (nameA > nameB) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\r\n\t\t\t// names must be equal\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\r\n\tstatic getCurrClientPlacesCount(allPlaces) {\r\n\t\tlet currPlaceId = Auth.getUserPlace();\r\n\t\tlet currClientPlacesCount = 0;\r\n\r\n\t\tif (allPlaces) {\r\n\t\t\tlet currPlace = allPlaces.find(p => p.id == currPlaceId);\r\n\t\t\tif (currPlace) {\r\n\t\t\t\tlet currPlaceClientId = currPlace.clientId;\r\n\t\t\t\tcurrClientPlacesCount = allPlaces.filter(p => p.clientId == currPlaceClientId).length;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn currClientPlacesCount;\r\n\t}\r\n\r\n\tstatic getOptionsForAutocompleteSelect(cats, returnOptions = true) {\r\n\t\tlet categoriesHierarchyOptions = [];\r\n\t\tlet returnCatObejct = [];\r\n\r\n\t\tif (cats) {\r\n\t\t\tObject.values(cats).map(cat => {\r\n\r\n\t\t\t\tlet undeletedChildrenCount = cat.children.filter(c => c.deleted == 0).length;\r\n\t\t\t\tif (cat.active == 1 && cat.deleted == 0 && (cat.children.length == 0 || undeletedChildrenCount == 0)) {\r\n\r\n\t\t\t\t\tif (returnOptions) {\r\n\t\t\t\t\t\tlet dashes = '';\r\n\t\t\t\t\t\tfor (let i = 0; i < cat.hierarchyLevel - 1; i++) {\r\n\t\t\t\t\t\t\tdashes += \"-\";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcategoriesHierarchyOptions.push({\r\n\t\t\t\t\t\t\t'value': cat.id,\r\n\t\t\t\t\t\t\t'label': dashes + cat.name + (cat.code ? ' (' + cat.code + ')' : '') + (cats && cats[cat.parentId] && cats[cat.parentId].name ? (\" /\" + cats[cat.parentId].name + '/') : '')\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturnCatObejct.push(cat)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn returnOptions ? categoriesHierarchyOptions : returnCatObejct;\r\n\t}\r\n\r\n\t\r\n\r\n}\r\n\r\nexport default Utils;","import React from 'react'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\nimport Utils from './../../../utils/Utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      flexBasis: '50%',\r\n      flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }));\r\n\r\n\r\n  const UserOrdersModal = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"modal fade\" id={\"ordersModal\" + props.userId} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-success\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h4 className=\"modal-title\">Orders</h4>\r\n                        <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">×</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        {props.orders.map(o => {\r\n\r\n                            let products = Object.values(o.order_productvariants).map((opv, ind) => {\r\n                                const prodComment = o.order_comment ? JSON.parse(o.order_comment).find(p => p.variantId === opv.productVariantId) : undefined;\r\n                                let productRequiredIngredientIds = [];\r\n                                let productAddablengredientIds = [];\r\n                                let productRemovableIngredientIds = [];\r\n                                // console.log('o', o)\r\n                                // console.log('object', object)\r\n                                return <p key={ind}>{opv.quantity} x <b>{props.all_products && props.all_products[opv.product_variant.productId] && props.all_products[opv.product_variant.productId].name ? props.all_products[opv.product_variant.productId].name : ''}</b> - <i>{opv.product_variant.size}</i> /{opv.product_variant.price} {(props.settings.default_currency_suffix && props.settings.default_currency_suffix.value ? props.settings.default_currency_suffix.value : 'лв.')}/\r\n                                    -&nbsp;\r\n                                    <span style={{ 'text-decoration': 'none', background: '#e8e8e8', 'border-radius': 4, padding: '1px 5px' }} >\r\n                                        ({props.categoriesHierarchy && props.categoriesHierarchy[opv.catHierarchyId] ? props.categoriesHierarchy[opv.catHierarchyId].name : ''})\r\n                                        </span>\r\n                                    {((o.ordertypeId == 2 || o.ordertypeId == 3) && ((props.settings && props.settings.show_variant_additional_price && props.settings.show_variant_additional_price.value && props.settings.show_variant_additional_price.value == 1) && ((parseFloat(opv.product_variant.additional_price)).toFixed(2) != '0.00')) ? (' + ' + (props.translations && props.translations.common && props.translations.common.box ? props.translations.common.box : '') + ' ' + opv.product_variant.additional_price + ' ' + (props.settings.default_currency_suffix && props.settings.default_currency_suffix.value ? props.settings.default_currency_suffix.value : 'лв.')) : '')}\r\n                                    {prodComment && prodComment.comment ? <> - <span className=\"badge badge-secondary\">{prodComment.comment}</span></> : null}\r\n                                    {opv.opv_ingredients.map(ing => {\r\n                                        if (ing.ingredient_type == \"required\") {\r\n                                            productRequiredIngredientIds.push(ing.ingredientId);\r\n                                        }\r\n                                        if (ing.ingredient_type == \"addable\") {\r\n                                            productAddablengredientIds.push(ing.ingredientId);\r\n                                        }\r\n                                        if (ing.ingredient_type == \"removable\") {\r\n                                            productRemovableIngredientIds.push(ing.ingredientId);\r\n                                        }\r\n                                    })}\r\n\r\n                                    {\r\n                                        productRequiredIngredientIds.length > 0 ?\r\n                                            <div style={{ fontStyle: 'italic' }}>{Utils.getIngredientNamesByIds(props.ingredients, productRequiredIngredientIds)}</div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n\r\n                                    {\r\n                                        productAddablengredientIds.length > 0 ?\r\n                                            <div style={{ color: '#008017', fontStyle: 'italic' }}>+ {Utils.getIngredientNamesByIds(props.ingredients, productAddablengredientIds)}</div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n\r\n                                    {\r\n                                        productRemovableIngredientIds.length > 0 ?\r\n                                            <div style={{ color: '#c50000', fontStyle: 'italic' }}>- {Utils.getIngredientNamesByIds(props.ingredients, productRemovableIngredientIds)}</div>\r\n                                            :\r\n                                            null\r\n                                    }\r\n\r\n                                </p>\r\n                            })\r\n\r\n                            return (\r\n                                <ExpansionPanel>\r\n                                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n                                        <Typography className={classes.heading}>{moment(o.createdAt).format('DD-MM-YYYY HH:mm')}</Typography>\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails>\r\n                                        <Typography>\r\n                                            {props.translations.common.order_type} - <b>{o.ordertype.type}</b>\r\n                                            <br/>\r\n                                            {props.translations.common.total_amount} - <b>{o.total_price ? o.total_price : null}</b>&nbsp;\r\n                                            {props.translations.common.currency}\r\n\r\n                                            {o.discount_price && o.discount_price != 0 ?\r\n                                                <div>Отстъпка: {o.discount_price} {props.translations.common.currency} {o.discount_type == 'percent' && o.discount_value ? <span>({o.discount_value} %)</span> : null}</div>\r\n                                                :\r\n                                                null\r\n                                            }\r\n\r\n                                            {o.delivery_price && o.delivery_price != 0 ?\r\n                                                <div>Доставка: {o.delivery_price} {props.translations.common.currency}</div>\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                            <br/>\r\n                                            {products}\r\n                                        </Typography>\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    {/* <div className=\"modal-footer\"> */}\r\n                    {/* <div className=\"modal-body\">\r\n                        <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Close</button>\r\n                        <button className=\"btn btn-danger fright\" type=\"button\" data-dismiss=\"modal\" onClick={(e) => { props.deleteUser(e, props.userId, props.userEmail) }}>Delete</button>\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserOrdersModal;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL } from '../../../constants.js'\r\nimport UserOrdersModal from './UserOrdersModal.js';\r\nimport moment from 'moment';\r\n\r\nconst ListEachRegisteredUser = (props) => {\r\n    if (props.user.email !== 'demo@tabl.bg') {\r\n\r\n        return (\r\n            <tr key={props.user.id}>\r\n                <td>\r\n                    {moment(props.user.createdAt).format(\"DD-MM-YYYY HH:mm\")}\r\n                </td>\r\n                <td>\r\n                    {props.user.email}\r\n                </td>\r\n                <td>\r\n                    {props.user.fullname}\r\n                </td>\r\n                <td>\r\n                    <a href={'tel:' + props.user.phone}>{props.user.phone}</a>\r\n                </td>\r\n                <td>\r\n                    {props.user.address || \"-\"}\r\n                </td>\r\n                <td>\r\n                    {props.user.active ? <span className=\"badge badge-success\">{props.translations.common.active}</span> : <span className=\"badge badge-secondary\">{props.translations.common.inactive}</span>}\r\n                </td>\r\n                <td>\r\n                    <button className=\"btn btn-pill btn-link\" type=\"button\" data-toggle=\"modal\" data-target={\"#ordersModal\" + props.user.id} >\r\n                        {props.translations.common.orders} ({props.user.orders.length})\r\n                    </button>\r\n\r\n                    <UserOrdersModal\r\n                        userId={props.user.id}\r\n                        userEmail={props.user.email}\r\n                        orders={props.user.orders}\r\n                        settings={props.settings}\r\n                        all_products={props.all_products}\r\n                        translations={props.translations}\r\n                        categoriesHierarchy={props.categoriesHierarchy}\r\n                    />\r\n\r\n                </td>\r\n            </tr>\r\n        )\r\n    } else {\r\n        return (<React.Fragment></React.Fragment>)\r\n    }\r\n}\r\n\r\nexport default ListEachRegisteredUser;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport Auth from './../../../utils/Auth';\r\nimport Select from 'react-select'\r\n\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst Filter = (props) => {\r\n    // const [startDate, setStartDate] = useState(new Date());\r\n    let placesOptions = [];\r\n    let currPlace = props.places && props.places.find(p => p.id == Auth.getUserPlace()) || null;\r\n    let currClientId = 0;\r\n    if(currPlace) {\r\n        currClientId = currPlace.clientId;\r\n    }\r\n\r\n    if(Auth.hasAccess(\"SUPER_ADMIN\")) {\r\n        placesOptions.push({ 'value': 'all',  'label': 'All' });\r\n    }\r\n\r\n    Object.values(props.places).map(place => {\r\n        if (place.active == 1) {\r\n            placesOptions.push({ 'value': place.id,  'label': place.name });\r\n        }\r\n    });\r\n\r\n    return (\r\n        // <div className=\"container-fluid p-0\">\r\n            // <div className=\"animated fadeIn\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">{props.translations.users.email}</label>\r\n                            <input className={`form-control`} id=\"search_email\" type=\"text\" placeholder=\"\"\r\n                                name=\"search_email\" onChange={props.onChange} value={props.search_email} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">{props.translations.common.status}</label>\r\n                            <select className=\"form-control\" name=\"search_active\" defaultValue={props.search_active} onChange={props.onChange}>\r\n                                <option key={0} value=\"\">-</option>\r\n                                <option value={1}>{props.translations.common.inactive}</option>\r\n                                <option value={2}>{props.translations.common.active}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {Auth.hasAccess(\"SUPER_ADMIN\") ?\r\n                        <div className=\"col-md-3\">\r\n                            <label htmlFor=\"place\">{props.translations.common.place}</label>\r\n                            <Select name=\"place\" options={placesOptions} placeholder={\"\"}\r\n                                onChange={(valueLabel) => props.onChangeSelectAutocomplete('filter_place', valueLabel)} \r\n                            />\r\n                        </div>\r\n                    :\r\n                        null\r\n                    }\r\n                    \r\n                    <hr/>\r\n                </div>\r\n            // </div>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { getRegisteredUsers } from '../../../actions/usersActions';\r\nimport ListEachRegisteredUser from './ListEachRegisteredUser';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL, ITEMS_PER_PAGE, ITEMS_PAGE_RANGE_DISPLAYED } from '../../../constants.js'\r\nimport Pagination from \"react-js-pagination\";\r\nimport { push } from 'react-router-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport Filter from './Filter';\r\n\r\nclass ListRegisteredUsersPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            search_email: '',\r\n            search_active: '',\r\n            filter_place: null,\r\n\r\n        }\r\n    }\r\n  \r\n    componentWillMount() {\r\n        this.props.getRegisteredUsers();\r\n        // this.props.listUserRoles();\r\n    }\r\n\r\n    componentsWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        this.handlePageChange(1);\r\n    }\r\n\r\n    handlePageChange = (page) => {\r\n        this.props.dispatch(push('/admin/users/registered?page='+page))\r\n    }\r\n\r\n    onChangeSelectAutocomplete = (fieldName, valueLabel) => {\r\n        this.setState({ [fieldName]: valueLabel.value });\r\n        let placeId = valueLabel.value;\r\n        this.props.getRegisteredUsers(placeId);\r\n        \r\n\t}\r\n\r\n    render() {\r\n        let userItems = this.props.registered_users;\r\n\r\n        if (this.state.search_email.length > 0\r\n            || this.state.search_active != 0\r\n        ) {\r\n            userItems = Object.values(userItems).filter(i => {\r\n                return (\r\n                    ((i.email).toLocaleLowerCase().includes((this.state.search_email).toLocaleLowerCase()))\r\n              \r\n                    && (this.state.search_active != 0 ? i.active == Boolean(parseInt(this.state.search_active) - 1) : true)\r\n                )\r\n            })\r\n        }\r\n\r\n        const items_count = Object.keys(userItems).length\r\n        const current_page = this.props.page;\r\n        const start_offset = (current_page - 1) * ITEMS_PER_PAGE;\r\n        let start_count = 0; \r\n\r\n        return (\r\n            <main className=\"main\">\r\n                    \r\n                {/* <!-- Breadcrumb--> */}\r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.dashboard}</NavLink></li>\r\n\t\t\t\t\t{/* <li className=\"breadcrumb-item\">Меню</li> */}\r\n                    <li className=\"breadcrumb-item active\">{this.props.translations.users.registered_users}</li>\r\n                </ol>\r\n\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"animated fadeIn\">\r\n                        <Filter\r\n                            translations={this.props.translations}\r\n                            onChange={this.onChange}\r\n                            onChangeSelectAutocomplete={this.onChangeSelectAutocomplete}\r\n                            users={this.props.users}\r\n                            places={this.props.places}\r\n                        />\r\n                        <div className=\"row\">\r\n                            \r\n\r\n                            {/* <!-- /.col--> */}\r\n                            <div className=\"col-lg-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body\">\r\n                                        <b>Total:</b> {Object.keys(userItems).length}\r\n                                    \r\n                                        <table className=\"table table-responsive-sm table-striped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>{this.props.translations.users.date_of_registration}</th>\r\n                                                    <th>{this.props.translations.users.email}</th>\r\n                                                    <th>{this.props.translations.users.fullname}</th>\r\n                                                    <th>{this.props.translations.users.phone}</th>\r\n                                                    <th>{this.props.translations.users.address}</th>\r\n                                                    <th>{this.props.translations.common.status}</th>\r\n                                                    <th>{this.props.translations.common.orders}</th>\r\n                                                    {/* <th>{this.props.translations.common.action}</th> */}\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                                {Object.values(userItems).map((u, index) => {\r\n                                                    if(index >= start_offset && start_count < ITEMS_PER_PAGE) {\r\n                                                        start_count++;\r\n                                                        return <ListEachRegisteredUser\r\n                                                            key={u.id} \r\n                                                            user={u}\r\n                                                            translations={this.props.translations}\r\n                                                            settings={this.props.settings}\r\n                                                            all_products={this.props.products}\r\n                                                            categoriesHierarchy={this.props.categoriesHierarchy}\r\n                                                        />\r\n                                                    }\r\n                                                })}\r\n                                                \r\n                                            </tbody>\r\n                                        </table>\r\n\r\n                                        <Pagination\r\n                                            className=\"pagination\"\r\n                                            itemClass=\"page-item\"\r\n                                            activePage={current_page}\r\n                                            activeClass=\"active\"\r\n                                            linkClass=\"page-link\"\r\n                                            prevPageText=\"<\"\r\n                                            nextPageText=\">\"\r\n                                            firstPageText=\"<<\"\r\n                                            lastPageText=\">>\"\r\n                                            itemsCountPerPage={ITEMS_PER_PAGE}\r\n                                            totalItemsCount={items_count}\r\n                                            pageRangeDisplayed={ITEMS_PAGE_RANGE_DISPLAYED}\r\n                                            onChange={this.handlePageChange}\r\n                                            />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!-- /.col--> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, dispatch) => {\r\n    return {\r\n        registered_users: state.users.registered_users || [],\r\n        page: Number(state.router.location.query.page) || 1,\r\n        translations: state.lang,\r\n        roles: state.users.roles,\r\n        products: state.products.products || [],\r\n        categoriesHierarchy: state.categoriesHierarchy.categories || [],\r\n        places: state.places.places || [],\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({ getRegisteredUsers }, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps )(ListRegisteredUsersPage);\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL } from '../../constants.js'\r\nimport DeleteUserModal from './DeleteUserModal.js';\r\nimport MessagesContainer from './../messages/MessagesContainer';\r\nimport Auth from './../../utils/Auth';\r\n\r\nconst AddEditUserForm = (props) => {\r\n\r\n    let selectedRole;\r\n    const roles = [];\r\n    props.roles.map(r => {\r\n        if (props.roleId == r.id) {\r\n            selectedRole = r.id;\r\n        }\r\n        // TODO: скрий по-големите роли ролята от current lognatiq user \r\n        // if (Auth.getDecodedUser().roleId <= r.id && r.name != \"USER\" && r.name != \"SUPER_ADMIN\" && r.name != \"PDF_MENU_ADMIN\" && r.name != \"RASPBERRY_ADMIN\") {\r\n            roles.push(<option key={r.id} value={r.id}>{props.translations.roles[r.name] || \"---\"}</option>);\r\n        // }\r\n// \r\n        // if(r.name != \"USER\" && r.name != \"SUPER_ADMIN\") {\r\n        // }\r\n    })\r\n\r\n    let selectedPlace;\r\n    const placesRows = props.places.map(p => {\r\n        if (props.userPlaceId == p.id) {\r\n            selectedPlace = p.id;\r\n        }\r\n\r\n        return <option key={p.id} value={p.id}>{p.name}</option>\r\n    })\r\n\r\n    return (\r\n        <form onSubmit={props.onSubmit}>\r\n            <MessagesContainer />\r\n\r\n            <div className=\"card-body\">\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">{props.translations.users.email}</label>\r\n                            <input className={`form-control`} id=\"name\" type=\"text\" placeholder=\"\" name=\"email\" onChange={props.onChange} value={props.userEmail} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">{props.translations.users.password}</label>\r\n                            <input className={`form-control`} id=\"name\" type=\"text\" placeholder=\"\" name=\"password\" onChange={props.onChange} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label className=\"col-md-1 col-form-label\">{props.translations.common.active}</label>\r\n                    <div className=\"col-md-11 col-form-label\">\r\n                        <label className=\"switch switch-label switch-pill switch-outline-primary-alt\">\r\n                            <input className=\"switch-input\" type=\"checkbox\" name=\"active\" onChange={props.onChangeCheckbox} checked={props.userActive} />\r\n                            <span className=\"switch-slider\" data-checked={props.translations.common.yes} data-unchecked={props.translations.common.no}></span>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label className=\"col-md-1 col-form-label\">{props.translations.common.role}</label>\r\n                    <div className=\"col-md-11 col-form-label\">\r\n                        <select className=\"form-control\" name=\"role\" onChange={props.onChange} value={selectedRole}>\r\n                            <option key={0} value={0}>-</option>\r\n                            {roles}\r\n                        </select>\r\n                        {/* <label className=\"switch switch-label switch-pill switch-outline-primary-alt\">\r\n                            <input className=\"switch-input\" type=\"checkbox\"  name=\"active\" onChange={props.onChangeCheckbox} checked={props.userActive}/>\r\n                            <span className=\"switch-slider\" data-checked={props.translations.common.yes} data-unchecked={props.translations.common.no}></span>\r\n                        </label> */}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <label className=\"col-md-1 col-form-label\">{props.translations.common.place}</label>\r\n                    <div className=\"col-md-11 col-form-label\">\r\n                        <select className=\"form-control\" name=\"placeId\" onChange={props.onChange} value={selectedPlace}>\r\n                            <option key={0} value={0}>-</option>\r\n                            {placesRows}\r\n                        </select>\r\n                        {/* <label className=\"switch switch-label switch-pill switch-outline-primary-alt\">\r\n                            <input className=\"switch-input\" type=\"checkbox\"  name=\"active\" onChange={props.onChangeCheckbox} checked={props.userActive}/>\r\n                            <span className=\"switch-slider\" data-checked={props.translations.common.yes} data-unchecked={props.translations.common.no}></span>\r\n                        </label> */}\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n                <br />\r\n\r\n                <div className=\"form-actions\">\r\n                    {props.isAddingUser == '1' ? '' : <button className=\"btn btn-danger mright10\" type=\"button\" data-toggle=\"modal\" data-target={\"#dangerModal\" + props.userId} >{props.translations.common.delete}</button>}\r\n\r\n                    <DeleteUserModal\r\n                        userId={props.userId}\r\n                        userEmail={props.userEmail}\r\n                        deleteUser={props.deleteUser}\r\n                    />\r\n\r\n                    <NavLink to={ADMIN_URL + 'users'}>\r\n                        <button className=\"btn btn-secondary\" type=\"button\">\r\n                            {props.translations.common.cancel}\r\n                        </button>\r\n                    </NavLink>\r\n\r\n                    <button className=\"fright btn btn-primary\" type=\"submit\">\r\n                        {props.isAddingUser == '1' ? props.translations.common.add : props.translations.common.edit}\r\n                    </button>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddEditUserForm;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addUser, listUserRoles } from '../../actions/usersActions';\r\nimport { listPlacesByUserRole } from './../places/actions/places.actions';\r\nimport AddEditUserForm from './AddEditUserForm';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL } from '../../constants';\r\nimport { addErrorMessages } from './../messages/messages.actions';\r\n\r\nclass AddUserPage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = { \r\n\t\t\temail: '',\r\n\t\t\tactive: 1,\r\n\t\t\trole: 0,\r\n\t\t\tplaceId: 0\r\n\t\t}\r\n\t  \r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.onChangeCheckbox = this.onChangeCheckbox.bind(this);\r\n\t\tthis.onSubmit = this.onSubmit.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.listUserRoles();\r\n\t\tthis.props.listPlacesByUserRole()\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tthis.setState({\r\n\t\t\temail: '',\r\n\t\t\tactive: 1\r\n\t\t});\r\n\t}\r\n\r\n\tonChange(e) {\r\n\t\tthis.setState({ [e.target.name]: e.target.value });\r\n\t}\r\n\t\r\n\tonChangeCheckbox(e) {\r\n\t\tthis.setState({ [e.target.name]: e.target.checked });\r\n\t}\r\n\r\n\tvalidate(post) {\r\n\t\tlet errors = [];\r\n\r\n\t\t// if (post.email.length === 0) {\r\n\t\t// \terrors.push(this.props.translations.messages.errors.invalid_email);\r\n\t\t// }\r\n\t\tif (post.role == 0) {\r\n\t\t\terrors.push(this.props.translations.messages.errors.invalid_role);\r\n\t\t}\r\n\t\tif (post.placeId == 0) {\r\n\t\t\terrors.push(this.props.translations.messages.errors.invalid_place);\r\n\t\t}\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tonSubmit(e) {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst post = {\r\n\t\t\temail: this.state.email,\r\n\t\t\tpassword: this.state.password,\r\n\t\t\tactive: this.state.active,\r\n\t\t\trole: this.state.role,\r\n\t\t\tplaceId: this.state.placeId\r\n\t\t}\r\n\r\n\t\tconst errors = this.validate(post);\r\n        if (errors.length > 0) {\r\n            this.props.addErrorMessages(errors);\r\n            return;\r\n        }\r\n\r\n\t\tthis.props.addUser(post, this.props.history);\r\n\t}\r\n    render() {\r\n    \treturn (\r\n\t\t\t<main className=\"main\">\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.dashboard}</NavLink></li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL + \"users\"}>{this.props.translations.sidemenu.users}</NavLink></li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\">{this.props.translations.users.add}</li>\r\n\t\t\t\t</ol>\r\n        \t\t<div className=\"container-fluid\">\r\n           \t\t\t<div className=\"animated fadeIn\">\r\n              \t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<AddEditUserForm\r\n\t\t\t\t\t\t\t\t\t\tonSubmit={this.onSubmit}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonChangeCheckbox={this.onChangeCheckbox}\r\n\t\t\t\t\t\t\t\t\t\tuserEmail={this.state.email}\r\n\t\t\t\t\t\t\t\t\t\tuserActive={this.state.active}\r\n\t\t\t\t\t\t\t\t\t\tisAddingUser={1}\r\n\t\t\t\t\t\t\t\t\t\ttranslations={this.props.translations}\r\n\t\t\t\t\t\t\t\t\t\troles={this.props.roles}\r\n\t\t\t\t\t\t\t\t\t\tplaces={this.props.places}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t  \t\t</div>\r\n\t\t\t\t  \t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n    \t)\r\n  \t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\terrors: state.users.errors,\r\n\ttranslations: state.lang,\r\n\troles: state.users.roles,\r\n\tplaces: state.places.places || []\r\n});\r\n\r\nexport default connect(mapStateToProps, { addUser, listUserRoles, addErrorMessages, listPlacesByUserRole})(AddUserPage);","import React, { Component } from 'react';\r\nimport AddEditUserForm from './AddEditUserForm';\r\nimport { listUsers, editUser, listUserRoles } from '../../actions/usersActions';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL } from '../../constants';\r\nimport { addErrorMessages } from './../messages/messages.actions';\r\n\r\nclass EditUserPage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tid: this.props.match.params.id,\r\n\t\t\temail: this.props.user.email,\r\n\t\t\tactive: this.props.user.active? this.props.user.active : 0,\r\n\t\t\trole: this.props.user.roleId ? this.props.user.roleId: 0,\r\n\t\t\tplaceId: this.props.user.placeId ? this.props.user.placeId : 0\r\n\t\t}\r\n\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.onChangeCheckbox = this.onChangeCheckbox.bind(this);\r\n\t\tthis.onSubmit = this.onSubmit.bind(this);\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.listUsers();\r\n\t\tthis.props.listUserRoles();\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (nextProps.user.id) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tid: nextProps.match.params.id,\r\n\t\t\t\temail: nextProps.user.email,\r\n\t\t\t\tactive: nextProps.user.active? nextProps.user.active : 0,\r\n\t\t\t\trole: nextProps.user.roleId ? nextProps.user.roleId: 0,\r\n\t\t\t\tplaceId: nextProps.user.placeId ? nextProps.user.placeId: 0,\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tonChange(e) {\r\n\t\tthis.setState({ [e.target.name]: e.target.value });\r\n\t}\r\n\r\n\tonChangeCheckbox(e) {\r\n\t\tthis.setState({ [e.target.name]: e.target.checked });\r\n\t}\r\n\t\r\n\tvalidate(post) {\r\n\t\tlet errors = [];\r\n\r\n\t\t// if (post.email.length === 0) {\r\n\t\t// \terrors.push(this.props.translations.messages.errors.invalid_email);\r\n\t\t// }\r\n\t\tif (post.role == 0) {\r\n\t\t\terrors.push(this.props.translations.messages.errors.invalid_role);\r\n\t\t}\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tonSubmit(e) {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst post = {\r\n\t\t\tid: this.state.id,\r\n\t\t\temail: this.state.email,\r\n\t\t\tpassword: this.state.password,\r\n\t\t\tactive: this.state.active,\r\n\t\t\trole: this.state.role,\r\n\t\t\tplaceId: this.state.placeId\r\n\t\t}\r\n\r\n\t\tconst errors = this.validate(post);\r\n        if (errors.length > 0) {\r\n            this.props.addErrorMessages(errors);\r\n            return;\r\n        }\r\n\t\t\r\n\t\tthis.props.editUser(this.state.id, post, this.props.history);\r\n\t}\r\n\t\r\n \t deleteUser = (e, id, email) => {\r\n        // console.log('del', id)\r\n\t\te.preventDefault();\r\n\t\tlet post = {id: id, email: email, deleted:true};\r\n\t\t// this.props.removeUser(data, this.props.history);\r\n\t\tthis.props.editUser(id, post, this.props.history);\r\n\r\n\t\t\r\n\t}\r\n\t\r\n\r\n    render() {  \r\n\t\treturn (\r\n\t\t\t<main className=\"main\">\r\n        \r\n\t\t\t\t{/* <!-- Breadcrumb--> */}\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.dashboard}</NavLink></li>\r\n\t\t\t\t\t{/* <li className=\"breadcrumb-item\">Меню</li> */}\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL + \"users\"}>{this.props.translations.sidemenu.users}</NavLink></li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\">{this.props.translations.users.edit}</li>\r\n\t\t\t\t\t{/* <!-- Breadcrumb Menu--> */}\r\n\t\t\t\t</ol>\r\n\r\n        \t\t<div className=\"container-fluid\">\r\n           \t\t\t<div className=\"animated fadeIn\">\r\n              \t\t\t<div className=\"row\">\r\n                \r\n\t\t\t\t\t\t\t{/* <!-- /.col--> */}                \r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\r\n\t\t\t\t\t\t\t\t\t<AddEditUserForm\r\n\t\t\t\t\t\t\t\t\t\tonSubmit={this.onSubmit}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonChangeCheckbox={this.onChangeCheckbox}\r\n\t\t\t\t\t\t\t\t\t\tuserId={this.state.id}\r\n\t\t\t\t\t\t\t\t\t\tuserEmail={this.state.email}\r\n\t\t\t\t\t\t\t\t\t\tuserActive={this.state.active}\r\n\t\t\t\t\t\t\t\t\t\tdeleteUser={this.deleteUser}\r\n\t\t\t\t\t\t\t\t\t\tactionText=\"Запази\"\r\n\t\t\t\t\t\t\t\t\t\tisAddingUser=\"0\"\r\n\t\t\t\t\t\t\t\t\t\tnameError={this.props.errors.find(error => error.path == 'name') ? this.props.errors.find(error => error.path == 'name') : \"\" }\r\n\t\t\t\t\t\t\t\t\t\ttranslations={this.props.translations}\r\n\t\t\t\t\t\t\t\t\t\troles={this.props.roles}\r\n\t\t\t\t\t\t\t\t\t\troleId={this.state.role}\r\n\t\t\t\t\t\t\t\t\t\tplaces={this.props.places}\r\n\t\t\t\t\t\t\t\t\t\tuserPlaceId={this.state.placeId}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t  \r\n\t\t\t\t  \t\t</div>\r\n\t\t\t\t  \t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</main>\r\n    \t)\r\n  \t}\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  \tlet userId = ownProps.match.params.id;\r\n\r\n\t\tlet user = state.users.users[userId];\r\n\t\tif (!user) user = { \r\n\t\t\tid: '',\r\n\t\t\temail: '',\r\n\t\t\tactive: '',\r\n\t\t\trole: 0,\r\n\t\t\tplaceId: 0\r\n\t};\r\n\r\n\treturn {\r\n\t\tuser: user,\r\n\t\terrors: state.users.errors,\r\n\t\ttranslations: state.lang,\r\n\t\troles: state.users.roles || [],\r\n\t\tplaces: state.places.places || []\r\n\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, {listUsers, editUser, listUserRoles, addErrorMessages })(EditUserPage);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass LoginForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-6 col-md-offset-3 m0auto mtop50\">\r\n                <h2>{this.props.translations.login.title}</h2>\r\n                <form name=\"form\" onSubmit={this.props.onSubmit}>\r\n                    <div className={'form-group'}>\r\n                        <label htmlFor=\"username\">{this.props.translations.login.email}</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"email\" value={this.props.email} onChange={this.props.onChange} />\r\n                    </div>\r\n                    <div className={'form-group'}>\r\n                        <label htmlFor=\"password\">{this.props.translations.login.password}</label>\r\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={this.props.password} onChange={this.props.onChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary\">{this.props.translations.login.login}</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, {  })(LoginForm);\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n// import { history } from '../../utils/history';\r\nimport { history } from './../../store';\r\n\r\nimport { login, setCurrentUser } from '../../actions/authActions';\r\nimport jwt from 'jsonwebtoken';\r\nimport {ADMIN_URL, FILTER_PLACES_NAME} from './../../constants';\r\nimport Auth from './../../utils/Auth';\r\nimport MessagesContainer  from './../messages/MessagesContainer';\r\nimport { addErrorMessages }  from './../messages/messages.actions';\r\n\r\nimport jwtDecode from 'jwt-decode';\r\nimport setAuthorizationToken from '../../utils/setAuthorizationToken';\r\nimport LoginForm from './LoginForm';\r\n// import '../../../css/login.css';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    isLoggedIn(){\r\n        if (jwt.decode(Auth.getToken()) && jwt.decode(Auth.getToken()) != undefined){\r\n            history.push('/my-tasks');\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.isLoggedIn();\r\n    }\r\n\r\n    handleChange(e) {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (!!this.state.email && !!this.state.password) {\r\n            this.props.login(this.state).then(res => {\r\n                const token = res.data.token;\r\n                if (token) {\r\n                    Auth.setToken(token);\r\n                    setAuthorizationToken(token);\r\n    \r\n                    let currUser = jwtDecode(token);\r\n                    this.props.setCurrentUser(currUser);\r\n                    Auth.setUserPlace(currUser.place_id)\r\n                    window.localStorage.setItem(FILTER_PLACES_NAME, JSON.stringify([currUser.place_id]));\r\n                    window.location.href = '/my-tasks';\r\n                } else {\r\n                    this.props.addErrorMessages([this.props.translations.messages.errors.invalid_credentials]);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.props.addErrorMessages([this.props.translations.messages.errors.invalid_credentials]);\r\n            });\r\n        } else {\r\n            this.props.addErrorMessages([this.props.translations.messages.errors.invalid_credentials]);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (<>\r\n            <MessagesContainer/>\r\n\r\n            <LoginForm \r\n                onChange={this.handleChange}\r\n                onSubmit={this.handleSubmit}\r\n                email={this.state.email}\r\n                password={this.state.password}\r\n                translations={this.props.translations}\r\n            />\r\n        </>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\ttranslations: state.lang,\r\n\t}\r\n};\r\nexport default connect(mapStateToProps, { login, setCurrentUser, addErrorMessages })(Login);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Auth from './Auth';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        Auth.getToken()\r\n            ? <Component {...props} />\r\n            : <Redirect to={{ pathname: '/admin/login', state: { from: props.location } }} />\r\n    )} />\r\n)\r\n\r\nexport default PrivateRoute;","import React from 'react'\r\n\r\nconst DeletePlaceModal = (props) => (\r\n    <div className=\"modal fade\" id={\"dangerModal\" + props.id} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-danger\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h4 className=\"modal-title\">{props.translations.places.delete.title}</h4>\r\n                    <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p>{props.translations.places.delete.confirm} '{props.name}'?</p>\r\n                </div>\r\n                {/* <div className=\"modal-footer\"> */}\r\n                <div className=\"modal-body\">\r\n                    <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\" style={{ float: 'left' }}>{props.translations.common.close}</button>\r\n                    <button className=\"btn btn-danger fright\" type=\"button\" data-dismiss=\"modal\" onClick={(e) => { props.deletePlace(e, props.id) }}>{props.translations.common.delete}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default DeletePlaceModal;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL, IMG_PATH } from '../../../constants.js'\r\nimport DeletePlaceModal from './DeletePlaceModal';\r\nimport Utils from '../../../utils/Utils';\r\nimport Auth from '../../../utils/Auth.js';\r\n\r\nconst ListEachPlace = (props) => (\r\n    <tr key={props.place.id}>\r\n        <td>\r\n            {props.place.name}\r\n        </td>\r\n\r\n        <td>\r\n            <NavLink to={ADMIN_URL + 'places/edit/' + props.place.id}>\r\n                <button className=\"btn btn-pill btn-link\" type=\"button\">\r\n                    <i className=\"fas fa-edit\"></i>\r\n                </button>\r\n            </NavLink>\r\n\r\n            <button className=\"btn btn-pill btn-link\" type=\"button\" data-toggle=\"modal\" data-target={\"#dangerModal\" + props.place.id} >\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n\r\n            <DeletePlaceModal\r\n                id={props.place.id}\r\n                name={props.place.name}\r\n                deletePlace={props.deletePlace}\r\n                translations={props.translations}\r\n            />\r\n\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nexport default ListEachPlace;","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"animated fadeIn\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"form-group reservation-list-search col-md-2 col-sm-4 \">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">{props.translations.common.name}</label>\r\n                            <input className={`form-control`} id=\"search_name\" type=\"text\" placeholder=\"\"\r\n                                name=\"search_name\" onChange={props.onChange} value={props.search_name} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { listPlacesByUserRole, addEditPlace, initPlaceSettings, initSettingsForAllPlaces } from '../actions/places.actions';\r\nimport ListEachPlace from './ListEachPlace';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL, ITEMS_PER_PAGE, ITEMS_PAGE_RANGE_DISPLAYED } from '../../../constants.js'\r\nimport Pagination from \"react-js-pagination\";\r\nimport { push } from 'react-router-redux';\r\n// import Filter from './Filter';\r\nimport MessagesContainer from '../../messages/MessagesContainer';\r\nimport { translations } from '../../common/translations';\r\nimport Filter from './Filter';\r\n\r\nclass ListPlacesPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.activeDefaultLanguage = 'bg'; // TODO add it in db\r\n        this.state = {\r\n            search_name: '',\r\n            search_active: '',\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.listPlacesByUserRole();\r\n    }\r\n\r\n    deletePlace = (e, id) => {\r\n        e.preventDefault();\r\n        this.props.addEditPlace({ id: id, deleted: true });\r\n    }\r\n\r\n    handlePageChange = (page) => {\r\n        this.props.dispatch(push('/admin/places?page=' + page))\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        this.handlePageChange(1);\r\n    }\r\n\r\n    onChangeCheckbox = (e, id) => {\r\n        e.preventDefault();\r\n        this.props.addEditPlace({ id: id, is_paying: e.target.checked });\r\n        this.props.listPlacesByUserRole();\r\n    }\r\n\r\n    render() {\r\n        let places = this.props.items;\r\n\r\n        if (this.state.search_name.length > 0\r\n            // || this.state.search_active != 0\r\n        ) {\r\n            places = Object.values(places).filter(i => {\r\n                return (\r\n                    ((i.name).toLocaleLowerCase().includes((this.state.search_name).toLocaleLowerCase()))\r\n                    // && (this.state.search_active != 0 ? i.active == Boolean(parseInt(this.state.search_active) - 1) : true)\r\n                )\r\n            })\r\n        } else if (this.state.search_is_paying == 1) {\r\n            places = Object.values(places).filter(i => i.is_paying == 1)\r\n        } else if (this.state.search_is_paying == 2) {\r\n            places = Object.values(places).filter(i => i.is_paying == 0)\r\n        } else if ((this.state.search_name.length > 0) && (this.state.search_is_paying == 1)) {\r\n            places = Object.values(places).filter(i => {\r\n                return (\r\n                    i.is_paying == 1 && ((i.name).toLocaleLowerCase().includes((this.state.search_name).toLocaleLowerCase()))\r\n                    // && (this.state.search_active != 0 ? i.active == Boolean(parseInt(this.state.search_active) - 1) : true)\r\n                )\r\n            })\r\n        }\r\n\r\n        const items_count = (places).length\r\n        const current_page = this.props.page;\r\n        const start_offset = (current_page - 1) * ITEMS_PER_PAGE;\r\n        let start_count = 0;\r\n\r\n        return (\r\n            <main className=\"main\">\r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.dashboard}</NavLink></li>\r\n                    <li className=\"breadcrumb-item active\">{this.props.translations.places.title}</li>\r\n                    <li className=\"breadcrumb-menu d-md-down-none\">\r\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Button group\">\r\n                            <NavLink to={ADMIN_URL + `places/add`} className=\"btn\" >\r\n                                <i className=\"fas fa-plus\"></i> &nbsp; {this.props.translations.places.add}\r\n                            </NavLink>\r\n                        </div>\r\n                    </li>\r\n                </ol>\r\n\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"animated fadeIn\">\r\n                        <div className=\"row\">\r\n\r\n                            <Filter\r\n                                translations={this.props.translations}\r\n                                onChange={this.onChange}\r\n                            />\r\n\r\n                            {/* <!-- /.col--> */}\r\n                            <div className=\"col-lg-12\">\r\n                                <div className=\"card\">\r\n\r\n                                    <div className=\"card-body\">\r\n\r\n                                        <MessagesContainer />\r\n\r\n                                        <table className=\"table table-responsive-sm table-striped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>{this.props.translations.common.name}</th>\r\n                                                    <th>{this.props.translations.common.action}</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                                {(places).map((place, index) => {\r\n                                                    if (index >= start_offset && start_count < ITEMS_PER_PAGE) {\r\n                                                        start_count++;\r\n                                                        return <ListEachPlace\r\n                                                            key={place.id}\r\n                                                            place={place}\r\n                                                            deletePlace={this.deletePlace}\r\n                                                            translations={this.props.translations}\r\n                                                            currLang={this.props.currLang}\r\n                                                            initPlaceSettings={this.props.initPlaceSettings}\r\n                                                            onChangeCheckbox={(e) => this.onChangeCheckbox(e, place.id)}\r\n                                                        />\r\n                                                    }\r\n                                                })}\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n                                        <Pagination\r\n                                            className=\"pagination\"\r\n                                            itemClass=\"page-item\"\r\n                                            activePage={current_page}\r\n                                            activeClass=\"active\"\r\n                                            linkClass=\"page-link\"\r\n                                            prevPageText=\"<\"\r\n                                            nextPageText=\">\"\r\n                                            firstPageText=\"<<\"\r\n                                            lastPageText=\">>\"\r\n                                            itemsCountPerPage={ITEMS_PER_PAGE}\r\n                                            totalItemsCount={items_count}\r\n                                            pageRangeDisplayed={ITEMS_PAGE_RANGE_DISPLAYED}\r\n                                            onChange={this.handlePageChange}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!-- /.col--> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, dispatch) => {\r\n    return {\r\n        items: state.places.places || [],\r\n        page: Number(state.router.location.query.page) || 1,\r\n        translations: state.lang,\r\n        currLang: \"bg\",\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({ listPlacesByUserRole, addEditPlace, initPlaceSettings, initSettingsForAllPlaces }, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPlacesPage);\r\n","import axios from 'axios';\r\nimport { LIST_CLIENTS } from './types';\r\nimport { API_URL, ADMIN_URL } from './../../../constants';\r\nimport { addSuccessMessage, addErrorMessages } from './../../messages/messages.actions';\r\nimport { changeLanguage } from './../../../actions/languagesActions';\r\nimport Auth from './../../../utils/Auth';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nexport const listClients = () => dispatch => {\r\n    let currUser = jwtDecode(Auth.getToken());\r\n\r\n    // if(currUser.role !== \"SUPER_ADMIN\") {\r\n    //     return;\r\n    // }\r\n\r\n    axios\r\n        .get(API_URL + `clientsAdmin`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LIST_CLIENTS,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch(error => {\r\n            throw (error);\r\n        });\r\n}\r\n\r\nexport const addEditClient = (postData, history, langId) => dispatch => {\r\n    axios\r\n        .post(API_URL + 'clients', postData)\r\n        .then((post) => {\r\n            post = post.data;\r\n            // dispatch(addEditAllergenTranslation(post.id, langId, postData))\r\n            // if (!postData.id && typeof postData.deleted === \"undefined\") { // edit\r\n            // } else {\r\n                dispatch(listClients());\r\n                history.push(ADMIN_URL + 'clients');\r\n                dispatch(addSuccessMessage(\"Changes saved\"))\r\n                \r\n            // }\r\n        })\r\n        .catch(function (error) {\r\n            // dispatch(addErrorMessages('Error occured'));\r\n        })\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst LangDropdown = (props) => {\r\n\r\n    let langOptions = Object.values(props.languages).map(l => {\r\n        return (\r\n            <option value={l.code}>{l.code}</option>\r\n        )\r\n    })\r\n    return (\r\n        // only show if type is 2 - custom translations; 1 is google translation\r\n        props.translationsType == 2 ? (\r\n        <div className=\"row\">\r\n            <div className=\"col-sm-12\">\r\n                <div className=\"form-group\">\r\n                    <select className=\"form-control\" id=\"currLang\" type=\"text\"  name=\"currLang\"\r\n                        disabled={props.isDisabled}\r\n                        onChange={props.currLangOnChange} value={props.currLang}>\r\n                        {langOptions}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n        :\r\n        \"\"\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    let translationsType = 1; //state.settings.settings['translations_type'] && state.settings.settings['translations_type'].value || 2\r\n\r\n    return {\r\n        translationsType: translationsType\r\n\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(LangDropdown);\r\n// export default ;","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL, PRODUCT_IMG_URL } from '../../../constants.js'\r\nimport DeletePlaceModal from './DeletePlaceModal';\r\nimport MessagesContainer from '../../messages/MessagesContainer';\r\nimport Utils from '../../../utils/Utils.js';\r\nimport LangDropdown from './../../common/LangDropdown';\r\nimport Select from 'react-select'\r\n\r\nclass AddEditPlaceForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            uploadedImgName: \"\"\r\n        }\r\n    }\r\n\r\n    addUploadedFileText = e => {\r\n        if (e && e.target && e.target.files && e.target.files[0] && e.target.files[0].name) {\r\n            this.setState({ uploadedImgName: e.target.files[0].name })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n\r\n        let selectedParent;\r\n        let autocompleteItems = [];\r\n        autocompleteItems.push({ 'value': null, 'label': \"Choose client\" })\r\n\r\n        console.log(\"AUTO \", props.place)\r\n        props.clients.map(cl => {\r\n            if (props.place.clientId == cl.id) {\r\n                selectedParent = { 'value': cl.id, 'label': cl.name };\r\n            }\r\n\r\n            // if(cat.active == 1) {\r\n\r\n            autocompleteItems.push({ 'value': cl.id, 'label': cl.name });\r\n            // } \r\n        });\r\n\r\n\r\n        let selectedCity;\r\n        let cityOptions = [];\r\n        cityOptions.push({ 'value': null, 'label': \"Choose city\" })\r\n\r\n        props.cities.map(city => {\r\n            if (props.place.cityId == city.id) {\r\n                selectedCity = { 'value': city.id, 'label': city.name };\r\n            }\r\n\r\n            cityOptions.push({ 'value': city.id, 'label': city.name });\r\n        });\r\n\r\n        let tagsOptions = [];\r\n\r\n        props.tags.map(tag => {\r\n            tagsOptions.push({ 'value': tag.id, 'label': tag.name });\r\n        });\r\n\r\n        let editImage;\r\n        if (props.isAdding == '0' && (props.place.image && props.place.image.length > 0)) {\r\n            editImage = <img src={Utils.getPlaceImagePath(props.place.image)} className=\"editPagesImage\" />\r\n        }\r\n\r\n        return (\r\n            <form onSubmit={props.onSubmit}>\r\n                <MessagesContainer />\r\n                <div className=\"card-body\">\r\n\r\n                    <LangDropdown\r\n                        isDisabled={props.isAdding == 1 ? 1 : \"\"}\r\n                        currLangOnChange={props.currLangOnChange}\r\n                        currLang={props.currLang}\r\n                        languages={props.languages}\r\n                    />\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-sm-12\">\r\n                            <label htmlFor=\"parentId\">{props.translations.common.client}</label>\r\n                            <Select name=\"parentId\" options={autocompleteItems} onChange={props.onChangeSelectAutocompleteItems} value={selectedParent}\r\n                                placeholder={\"Client\"}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">{props.translations.common.name}</label>\r\n                                <input className={`form-control`} id=\"name\" type=\"text\" placeholder={props.translations.common.name} name=\"name\" onChange={props.onChange} value={props.place.name} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"short_name\">{props.translations.places.short_name}</label>\r\n                                <input className={`form-control`} id=\"short_name\" type=\"text\" placeholder={props.translations.common.short_name} name=\"short_name\" onChange={props.onChange} value={props.place.short_name} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"company_name\">{props.translations.places.company_name || \"\"}</label>\r\n                                <input className={`form-control`} type=\"text\" placeholder={props.translations.places.company_name} name=\"company_name\" onChange={props.onChange} value={props.place.company_name} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"company_name\">{props.translations.places.company_eik || \"\"}</label>\r\n                                <input className={`form-control`} type=\"text\" placeholder={props.translations.places.company_eik} name=\"company_eik\" onChange={props.onChange} value={props.place.company_eik} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"company_city\">{props.translations.places.company_city || \"\"}</label>\r\n                                <input className={`form-control`} type=\"text\" name=\"company_city\" onChange={props.onChange} value={props.place.company_city} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"company_address\">{props.translations.places.company_address || \"\"}</label>\r\n                                <input className={`form-control`} type=\"text\" name=\"company_address\" onChange={props.onChange} value={props.place.company_address} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"company_person\">{props.translations.places.company_person}</label>\r\n                                <input className={`form-control`} type=\"text\" name=\"company_person\" onChange={props.onChange} value={props.place.company_person} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"company_email\">{props.translations.places.company_email}</label>\r\n                                <input className={`form-control`} type=\"text\" name=\"company_email\" onChange={props.onChange} value={props.place.company_email} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"monthly_fee\">{props.translations.places.price}</label>\r\n                                <input className={`form-control`} type=\"text\" name=\"monthly_fee\" onChange={props.onChange} value={props.place.monthly_fee} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-3 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"company_vat_registered\">{props.translations.places.company_vat_registered}</label>\r\n\r\n                                <label className=\"switch switch-label switch-pill switch-outline-primary-alt\">\r\n                                    <input className=\"switch-input\" type=\"checkbox\" name=\"company_vat_registered\" onChange={props.onChangeCheckbox} checked={props.place.company_vat_registered} />\r\n                                    <span className=\"switch-slider\" data-checked={props.translations.common.yes} data-unchecked={props.translations.common.no}></span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-3 col-sm-12\">\r\n                            <label>{props.translations.common.is_paying}</label>\r\n\r\n                            <label className=\"switch switch-label switch-pill switch-outline-primary-alt\">\r\n                                <input className=\"switch-input\" type=\"checkbox\" name=\"is_paying\" onChange={props.onChangeCheckbox} checked={props.place.is_paying} />\r\n                                <span className=\"switch-slider\" data-checked={props.translations.common.yes} data-unchecked={props.translations.common.no}></span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"additional_info\">{props.translations.places.additional_info}</label>\r\n                                <textarea className={`form-control`} name=\"additional_info\" onChange={props.onChange} value={props.place.additional_info}>\r\n                                </textarea>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"lat\">{props.translations.places.lat}</label>\r\n                                <input className={`form-control`} type=\"text\" name=\"lat\" onChange={props.onChange} value={props.place.lat} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"lng\">{props.translations.places.lng}</label>\r\n                                <input className={`form-control`} type=\"text\" name=\"lng\" onChange={props.onChange} value={props.place.lng} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group col-sm-6\">\r\n                            <label htmlFor=\"parentId\">{props.translations.places.city}</label>\r\n                            <Select name=\"cityId\" options={cityOptions} onChange={(valueLabel) => props.onChangeSelectAutocomplete('cityId', valueLabel)} value={selectedCity}\r\n                                placeholder={\"City\"}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"visible_on_map\">{props.translations.places.visible_on_map}</label>\r\n\r\n                                <label className=\"switch switch-label switch-pill switch-outline-primary-alt\">\r\n                                    <input className=\"switch-input\" type=\"checkbox\" name=\"visible_on_map\" onChange={props.onChangeCheckbox} checked={props.place.visible_on_map} />\r\n                                    <span className=\"switch-slider\" data-checked={props.translations.common.yes} data-unchecked={props.translations.common.no}></span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group col-sm-12\">\r\n                            <label htmlFor=\"catHierarchyId\">{props.translations.places.tags}</label>\r\n\r\n                            <Select\r\n                                value={props.place.tags}\r\n                                isMulti\r\n                                name=\"colors\"\r\n                                options={tagsOptions}\r\n                                className=\"basic-multi-select\"\r\n                                classNamePrefix=\"select\"\r\n                                onChange={(v) => props.onChangeSelectAutocompleteMulti('tags', v)}\r\n                            // onChange={(values, { action, removedValue }) => props.ingredientsOnChange(values, { action, removedValue }, 'removable')}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* <div className=\"form-group col-sm-12\">\r\n                            <label className=\"col-md-1 col-form-label vertical-center\" htmlFor=\"file-multiple-input\">{props.translations.common.image}</label>\r\n                            <div className=\"col-md-5 col-form-label vertical-center\" style={{ justifyContent: 'center' }}>\r\n                                <input type='file' name='file' id='placeImg' multiple ref=\"image\" style={{ display: 'none' }} onChange={this.addUploadedFileText} />\r\n                                <label for=\"placeImg\" type=\"button\" className=\"btn btn-secondary\" style={{ borderBottomLeftRadius: 0, borderBottomRightRadius: 0, margin: 0 }}>{!props.isAdding && props.place.image && props.place.image.length > 0 ? props.translations.products.replace_image : props.translations.products.upload_image}</label>\r\n                                {editImage}\r\n                                {this.state.uploadedImgName}\r\n                            </div>\r\n                        </div> */}\r\n\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <br />\r\n\r\n                    <div className=\"form-actions\">\r\n                        {props.isAdding == '1' ? '' : <button className=\"btn btn-danger mright10\" type=\"button\" data-toggle=\"modal\" data-target={\"#dangerModal\" + props.place.id} >{props.translations.common.delete}</button>}\r\n\r\n                        <DeletePlaceModal\r\n                            id={props.place.id}\r\n                            name={props.place.name}\r\n                            deletePlace={props.deletePlace}\r\n                            translations={props.translations}\r\n                        />\r\n\r\n                        <NavLink to={ADMIN_URL + 'places'}>\r\n                            <button className=\"btn btn-secondary\" type=\"button\">\r\n                                {props.translations.common.cancel}\r\n                            </button>\r\n                        </NavLink>\r\n\r\n                        <button className=\"fright btn btn-primary\" type=\"submit\">\r\n                            {props.isAdding == '1' ? props.translations.common.add : props.translations.common.save}\r\n                            {/* {props.actionText} */}\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddEditPlaceForm;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addEditPlace, listPlacesByUserRole, getCities } from '../actions/places.actions';\r\n// import { getTags } from './../../tags/actions/tags.actions';\r\nimport { listClients } from './../../clients/actions/clients.actions';\r\nimport AddEditPlaceForm from './AddEditPlaceForm';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL } from '../../../constants';\r\nimport { addErrorMessages, addSuccessMessage } from '../../messages/messages.actions';\r\n\r\nclass AddPlacePage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = { \r\n\t\t\tcurrLang: this.props.currLang,\r\n\t\t\tname: '',\r\n\t\t\tshort_name: '',\r\n\t\t\tcompany_name: '',\r\n\t\t\tcompany_eik: '',\r\n\t\t\tcompany_vat_registered: '',\r\n\t\t\tcompany_city: '',\r\n\t\t\tcompany_address: '',\r\n\t\t\tcompany_person:'',\r\n\t\t\tcompany_email: '',\r\n\t\t\tmonthly_fee: '',\r\n\t\t\tadditional_info: '',\r\n\t\t\tlat: '',\r\n\t\t\tlng: '',\r\n\t\t\tvisible_on_map: 0,\r\n\t\t\tis_paying: 0,\r\n\t\t\tcityId: 0,\r\n\t\t\ttags: [],\r\n\r\n\t\t\tclientId: '',\r\n\t\t}\r\n\t  \r\n\t}\r\n\r\n    componentWillMount() {\r\n        this.props.listClients();\r\n\t\tthis.props.getCities();\r\n\t\t// this.props.getTags();\r\n\r\n    }\r\n\r\n\tonChange = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\t\r\n\tonChangeCheckbox = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.checked });\r\n\t}\r\n\r\n    onChangeSelectAutocompleteItems = (valueLabel) => {\r\n        this.setState({ 'clientId': valueLabel.value });\r\n    }\r\n\r\n\tonChangeSelectAutocomplete = (field, valueLabel) => {\r\n\t\tthis.setState({ [field]: valueLabel.value });\r\n\t}\r\n\r\n\tonChangeSelectAutocompleteMulti = (field, values) => {\r\n\t\tthis.setState({ [field]: values });\r\n\t}\r\n\t\t\r\n\tvalidate() {\r\n\t\tlet errors = [];\r\n\r\n\t\tif (this.state.name.length === 0) {\r\n\t\t\terrors.push(this.props.translations.messages.errors.invalid_name);\r\n\t\t}\r\n\t\tif (!this.state.cityId) {\r\n\t\t\terrors.push(this.props.translations.messages.errors.invalid_city);\r\n\t\t}\r\n\t\treturn errors;\r\n    }\r\n\r\n\tonSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const errors = this.validate();\r\n        if(errors.length > 0) {\r\n            this.props.addErrorMessages(errors);\r\n            return;\r\n\t\t}\r\n\t\t\r\n\t\tlet tagsIds = this.state.tags.map(t => t.value)\r\n\r\n\t\tconst post = {\r\n\t\t\tname: this.state.name,\r\n\t\t\tshort_name: this.state.short_name,\r\n\t\t\tcompany_name: this.state.company_name,\r\n\t\t\tcompany_eik: this.state.company_eik,\r\n\t\t\tcompany_vat_registered: this.state.company_vat_registered,\r\n\t\t\tcompany_city: this.state.company_city,\r\n\t\t\tcompany_address: this.state.company_address,\r\n\t\t\tcompany_person: this.state.company_person,\r\n\t\t\tcompany_email: this.state.company_email,\r\n\t\t\tmonthly_fee: this.state.monthly_fee,\r\n\t\t\tadditional_info: this.state.additional_info,\r\n\t\t\tlat: this.state.lat,\r\n\t\t\tlng: this.state.lng,\r\n\t\t\tvisible_on_map: this.state.visible_on_map,\r\n\t\t\tis_paying: this.state.is_paying,\r\n\t\t\tcityId: this.state.cityId,\r\n\t\t\ttagsIds: tagsIds,\r\n\r\n\t\t\tclientId: this.state.clientId,\r\n\t\t}\r\n\r\n\t\tconst files = Array.from(document.querySelector('#placeImg').files)\r\n\t\tconsole.log(\"FILES \", files); \r\n        let formData = new FormData()\r\n        files.forEach((file, i) => {\r\n\t\t\tconsole.log(\"each \", files); \r\n\r\n            formData.append(\"file\", file)\r\n        })\r\n\r\n\t\tObject.keys(post).map(k => {\r\n            formData.append(k, post[k] || \"\")\r\n\t\t})\r\n\r\n\t\tthis.props.addEditPlace(formData, this.props.history, this.props.languages[this.state.currLang].id)\r\n\t\t.then((post) => {\r\n            post = post.data;\r\n\t\t\tthis.props.listPlacesByUserRole();\r\n\t\t\tthis.props.history.push(\"/admin/places/edit/\"+post.id)\r\n            this.props.addSuccessMessage(\"Successfully created place\");\r\n        })\r\n        .catch( (error) => {\r\n            this.props.addErrorMessages(error);\r\n        })\r\n\t}\r\n\r\n\t\r\n\r\n    render() {\r\n\t\t\r\n    \treturn (\r\n\t\t\t<main className=\"main\">\r\n\r\n\t\t\t\t{/* <!-- Breadcrumb--> */}\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.alergens}</NavLink></li>\r\n\t\t\t\t\t{/* <li className=\"breadcrumb-item\">Меню</li> */}\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL + \"places\"}>{this.props.translations.places.title}</NavLink></li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\">{this.props.translations.places.add}</li>\r\n\t\t\t\t\t{/* <!-- Breadcrumb Menu--> */}\r\n\t\t\t\t\t<li className=\"breadcrumb-menu d-md-down-none\">\r\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Button group\">\r\n                            {/* \r\n                            <!--<a className=\"btn\" href=\"./\">\r\n                                <i className=\"icon-graph\"></i>  Dashboard</a>\r\n                            <a className=\"btn\" href=\"#\">\r\n                                <i className=\"icon-settings\"></i>  Settings</a>\r\n                            --> \r\n                            */}\r\n                        </div>\r\n                    </li>\r\n\t\t\t\t</ol>\r\n\r\n        \t\t<div className=\"container-fluid\">\r\n           \t\t\t<div className=\"animated fadeIn\">\r\n              \t\t\t<div className=\"row\">\r\n                \r\n\t\t\t\t\t\t\t{/* <!-- /.col--> */}                \r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\r\n\t\t\t\t\t\t\t\t\t<AddEditPlaceForm\r\n                                        clients={this.props.clients}\r\n\t\t\t\t\t\t\t\t\t\tonSubmit={this.onSubmit}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonChangeCheckbox={this.onChangeCheckbox}\r\n                                        onChangeSelectAutocompleteItems={this.onChangeSelectAutocompleteItems}\r\n\t\t\t\t\t\t\t\t\t\tonChangeSelectAutocomplete={this.onChangeSelectAutocomplete}\r\n\t\t\t\t\t\t\t\t\t\tonChangeSelectAutocompleteMulti={this.onChangeSelectAutocompleteMulti}\r\n\t\t\t\t\t\t\t\t\t\tplace={this.state}\r\n\t\t\t\t\t\t\t\t\t\tisAdding=\"1\"\r\n\t\t\t\t\t\t\t\t\t\ttranslations={this.props.translations}\r\n\t\t\t\t\t\t\t\t\t\tcurrLang={this.state.currLang}\r\n\t\t\t\t\t\t\t\t\t\tlanguages={this.props.languages}\r\n\t\t\t\t\t\t\t\t\t\tcities={this.props.cities}\r\n\t\t\t\t\t\t\t\t\t\ttags={this.props.tags}\r\n\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t  \t\t</div>\r\n\t\t\t\t  \t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</main>\r\n    \t)\r\n  \t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    // errors: state.categories.errors,\r\n    clients: state.clients.clients || [],\r\n\ttranslations: state.lang,\r\n\tlanguages: state.languages.languages || {},\r\n\tcities: state.places.cities || [],\r\n\ttags: [],// state.tags.tags || [],\r\n\r\n\tcurrLang: state.settings.settings['default_lang'] && state.settings.settings['default_lang'].value || \"bg\",\r\n});\r\n\r\nexport default connect(mapStateToProps, { addEditPlace, addErrorMessages, addSuccessMessage, listClients, listPlacesByUserRole, getCities })(AddPlacePage);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { addEditPlace, listPlacesByUserRole, listOrderTypes, getCities } from '../actions/places.actions';\r\n// import {  getTags } from './../../tags/actions/tags.actions';\r\nimport { listClients } from './../../clients/actions/clients.actions';\r\nimport { addErrorMessages, addSuccessMessage } from '../../messages/messages.actions';\r\n\r\nimport { ADMIN_URL } from '../../../constants';\r\nimport AddEditPlaceForm from './AddEditPlaceForm';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\n// import OrderTypesTab from './edit/OrderTypesTab';\r\n// import FunctionalityModulesTab from './edit/FunctionalityModulesTab';\r\n\r\nclass EditPlacePage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tcurrLang: this.props.currLang,\r\n\t\t\tid: this.props.item.id,\r\n\t\t\tname: this.props.item.name,\r\n\t\t\tshort_name: this.props.item.short_name,\r\n\t\t\tcompany_name: this.props.item.company_name,\r\n\t\t\tcompany_eik: this.props.item.company_eik,\r\n\t\t\tcompany_vat_registered: this.props.item.company_vat_registered,\r\n\t\t\tcompany_city: this.props.item.company_city,\r\n\t\t\tcompany_address: this.props.item.company_address,\r\n\t\t\tcompany_person: this.props.item.company_person,\r\n\t\t\tcompany_email: this.props.item.company_email,\r\n\t\t\tmonthly_fee: this.props.item.monthly_fee,\r\n\t\t\tadditional_info: this.props.item.additional_info,\r\n\t\t\timage: this.props.item.image,\r\n\t\t\tlat: this.props.item.lat,\r\n\t\t\tlng: this.props.item.lng,\r\n\t\t\tvisible_on_map: this.props.item.visible_on_map,\r\n\t\t\tis_paying: this.props.item.is_paying,\r\n\t\t\tcityId: this.props.item.cityId,\r\n\t\t\ttags: [],\r\n\r\n\t\t\tclientId: this.props.item.clientId ? this.props.item.clientId : '',\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.props.listClients();\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (nextProps.item.id) {\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tid: nextProps.match.params.id,\r\n\t\t\t\tname: nextProps.item.name,\r\n\t\t\t\tshort_name: nextProps.item.short_name,\r\n\t\t\t\tcompany_name: nextProps.item.company_name,\r\n\t\t\t\tcompany_eik: nextProps.item.company_eik,\r\n\t\t\t\tcompany_vat_registered: nextProps.item.company_vat_registered,\r\n\t\t\t\tcompany_city: nextProps.item.company_city,\r\n\t\t\t\tcompany_address: nextProps.item.company_address,\r\n\t\t\t\tcompany_person: nextProps.item.company_person,\r\n\t\t\t\tcompany_email: nextProps.item.company_email,\r\n\t\t\t\tmonthly_fee: nextProps.item.monthly_fee,\r\n\t\t\t\tadditional_info: nextProps.item.additional_info,\r\n\t\t\t\timage: nextProps.item.image,\r\n\t\t\t\tlat: nextProps.item.lat,\r\n\t\t\t\tlng: nextProps.item.lng,\r\n\t\t\t\tvisible_on_map: nextProps.item.visible_on_map,\r\n\t\t\t\tis_paying: nextProps.item.is_paying,\r\n\t\t\t\tcityId: nextProps.item.cityId,\r\n\r\n\t\t\t\tclientId: nextProps.item.clientId ? nextProps.item.clientId : '',\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet currTags = [];\r\n\r\n\t\tif (Object.keys(nextProps.tags).length !== 0 && nextProps.item.tags) {\r\n\t\t\tnextProps.item.tags.map(t => {\r\n\r\n\t\t\t\tcurrTags.push({\r\n\t\t\t\t\tvalue: t.id, 'label': t.name\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\tthis.setState({ tags: currTags });\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonChange = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value });\r\n\t}\r\n\r\n\tonChangeCheckbox = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.checked });\r\n\t}\r\n\r\n\tonChangeSelectAutocompleteItems = (valueLabel) => {\r\n\t\tthis.setState({ 'clientId': valueLabel.value });\r\n\t}\r\n\r\n\tonChangeSelectAutocomplete = (field, valueLabel) => {\r\n\t\tthis.setState({ [field]: valueLabel.value });\r\n\t}\r\n\r\n\tonChangeSelectAutocompleteMulti = (field, values) => {\r\n\t\tthis.setState({ [field]: values });\r\n\t}\r\n\r\n\tvalidate() {\r\n\t\tlet errors = [];\r\n\r\n\t\tif (this.state.name.length === 0) {\r\n\t\t\terrors.push(this.props.translations.messages.errors.invalid_name);\r\n\t\t}\r\n\r\n\t\t// if (!this.state.cityId) {\r\n\t\t// \terrors.push(this.props.translations.messages.errors.invalid_city);\r\n\t\t// }\r\n\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst errors = this.validate();\r\n\t\tif (errors.length > 0) {\r\n\t\t\tthis.props.addErrorMessages(errors);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet tagsIds = this.state.tags && this.state.tags.map(t => t.value) || [];\r\n\r\n\t\tconst post = {\r\n\t\t\tid: this.state.id,\r\n\t\t\tname: this.state.name,\r\n\t\t\tshort_name: this.state.short_name,\r\n\t\t\tcompany_name: this.state.company_name,\r\n\t\t\tcompany_eik: this.state.company_eik,\r\n\t\t\tcompany_vat_registered: this.state.company_vat_registered,\r\n\t\t\tcompany_city: this.state.company_city,\r\n\t\t\tcompany_address: this.state.company_address,\r\n\t\t\tcompany_person: this.state.company_person,\r\n\t\t\tcompany_email: this.state.company_email,\r\n\t\t\tmonthly_fee: this.state.monthly_fee,\r\n\t\t\tadditional_info: this.state.additional_info,\r\n\t\t\tlat: this.state.lat,\r\n\t\t\tlng: this.state.lng,\r\n\t\t\tvisible_on_map: this.state.visible_on_map,\r\n\t\t\tis_paying: this.state.is_paying,\r\n\t\t\tcityId: this.state.cityId,\r\n\t\t\ttagsIds: JSON.stringify(tagsIds),\r\n\r\n\t\t\tclientId: this.state.clientId,\r\n\t\t}\r\n\r\n\t\tconst files = Array.from(document.querySelector('#placeImg').files)\r\n        let formData = new FormData()\r\n        files.forEach((file, i) => {\r\n            formData.append(\"file\", file)\r\n        })\r\n\r\n\t\tObject.keys(post).map(k => {\r\n            formData.append(k, post[k] || \"\")\r\n\t\t})\r\n\r\n\t\tthis.props.addEditPlace(formData)\r\n\t\t.then((post) => {\r\n            // post = post.data;\r\n\t\t\tthis.props.listPlacesByUserRole();\r\n            this.props.addSuccessMessage(\"Changes saved\");\r\n        })\r\n        .catch( (error) => {\r\n\t\t\tconsole.log(\" ERRRORRING \" , error)\r\n            this.props.addErrorMessages(error);\r\n        })\r\n\r\n\t}\r\n\r\n\t// deleteAlergen = (e, id) => {\r\n\t// \te.preventDefault();\r\n\t// \tthis.props.addEditAlergen({ id: id, deleted: true }, this.props.history);\r\n\t// }\r\n\r\n\tcurrLangOnChange = (e) => {\r\n\t\tlet newLang = e.target.value;\r\n\t\tlet newNameValue = this.props.item.translations[newLang] && this.props.item.translations[newLang].name\r\n\t\t\t? this.props.item.translations[newLang].name : \"\";\r\n\r\n\t\tthis.setState({\r\n\t\t\tname: newNameValue,\r\n\t\t\tcurrLang: newLang\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\t// let catItem = this.props.cat;\r\n\r\n\t\tconsole.log(\"STATE \", this.state);\r\n\t\treturn (\r\n\t\t\t<main className=\"main\">\r\n\r\n\t\t\t\t{/* <!-- Breadcrumb--> */}\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.dashboard}</NavLink></li>\r\n\t\t\t\t\t{/* <li className=\"breadcrumb-item\">Меню</li> */}\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL + \"places\"}>{this.props.translations.places.title}</NavLink></li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\">{this.props.translations.places.edit}</li>\r\n\t\t\t\t\t{/* <!-- Breadcrumb Menu--> */}\r\n\t\t\t\t</ol>\r\n\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"animated fadeIn\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\tid=\"controlled-tab-example\"\r\n\t\t\t\t\t\t\t\tactiveKey={this.state.currentTab}\r\n\t\t\t\t\t\t\t\tonSelect={(k) => this.setState({ currentTab: k })}\r\n\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t<Tab style={{ width: '1000px' }} eventKey=\"edit\" title={this.props.translations.places.edit} >\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<AddEditPlaceForm\r\n\t\t\t\t\t\t\t\t\t\t\t\tclients={this.props.clients}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonSubmit={this.onSubmit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChangeSelectAutocompleteItems={this.onChangeSelectAutocompleteItems}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChangeCheckbox={this.onChangeCheckbox}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChangeSelectAutocomplete={this.onChangeSelectAutocomplete}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChangeSelectAutocompleteMulti={this.onChangeSelectAutocompleteMulti}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplace={this.state}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisAdding=\"0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t// deleteAlergen={this.deleteAlergen}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttranslations={this.props.translations}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrLang={this.state.currLang}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrLangOnChange={this.currLangOnChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlanguages={this.props.languages}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcities={this.props.cities}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttags={this.props.tags}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tab>\r\n\r\n\t\t\t\t\t\t\t\t{/* <Tab eventKey=\"ordertypes\" title={this.props.translations.places.ordertypes} >\r\n\t\t\t\t\t\t\t\t\t<OrderTypesTab\r\n\t\t\t\t\t\t\t\t\t\tplace={this.props.item}\r\n\t\t\t\t\t\t\t\t\t\ttranslations={this.props.translations}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Tab> */}\r\n\r\n\t\t\t\t\t\t\t\t{/* <Tab eventKey=\"functionality_modules\" title={this.props.translations.places.functionality_modules} >\r\n\t\t\t\t\t\t\t\t\t<FunctionalityModulesTab\r\n\t\t\t\t\t\t\t\t\t\tplace={this.props.item}\r\n\t\t\t\t\t\t\t\t\t\ttranslations={this.props.translations}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Tab> */}\r\n\t\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</main>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\tlet id = ownProps.match.params.id;\r\n\r\n\tlet item = (state.places.places).find(i => i.id == id);\r\n\tif (!item) item = {\r\n\t\tid: '',\r\n\t\tname: '',\r\n\t\tclientId: '',\r\n\t\ttranslations: {},\r\n\t\ttags: [],\r\n\t};\r\n\treturn {\r\n\t\tclients: state.clients.clients || [],\r\n\t\titem: item,\r\n\t\terrors: [], //state.alergens.errors,\r\n\t\ttranslations: state.lang,\r\n\t\tlanguages: [], //state.languages.languages || {},\r\n\t\tcities: [], //state.places.cities || [],\r\n\t\ttags: [], //state.tags.tags || [],\r\n\r\n\t\tcurrLang: \"bg\",\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, { addEditPlace, listPlacesByUserRole, listClients, addErrorMessages, addSuccessMessage})(EditPlacePage);","import React from 'react'\r\n\r\nconst DeleteClientModal = (props) => (\r\n    <div className=\"modal fade\" id={\"dangerModal\" + props.id} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-danger\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h4 className=\"modal-title\">{props.translations.categories.delete.title}</h4>\r\n                    <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p>{props.translations.clients.delete.confirm} '{props.name}'?</p>\r\n                </div>\r\n                {/* <div className=\"modal-footer\"> */}\r\n                <div className=\"modal-body\">\r\n                    <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\" style={{ float: 'left' }}>{props.translations.common.close}</button>\r\n                    <button className=\"btn btn-danger fright\" type=\"button\" data-dismiss=\"modal\" onClick={(e) => { props.deleteClient(e, props.id) }}>{props.translations.common.delete}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default DeleteClientModal;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL, IMG_PATH } from '../../../constants.js'\r\nimport DeleteClientModal from './DeleteClientModal';\r\nimport Utils from '../../../utils/Utils';\r\nimport moment from 'moment';\r\nimport Auth from '../../../utils/Auth.js';\r\n\r\nconst ListEachClient = (props) => (\r\n    <tr key={props.client.id}>\r\n        <td>\r\n            {/* If not added translation for the defailt language */}\r\n            {props.client.name}\r\n            {/* {props.alergen.translations[props.currLang] && props.alergen.translations[props.currLang].name \r\n\t\t\t? props.alergen.translations[props.currLang].name : props.alergen.name} */}\r\n        </td>\r\n        <td>\r\n            <a href={`https://menu.tabl.bg/${props.client.slug || ''}`} target=\"blank\">{props.client.slug || '-'}</a>\r\n        </td>\r\n        <td>\r\n            {props.client.contract_start_date && moment(props.client.contract_start_date).format('DD-MM-YYYY') || '-'}\r\n        </td>\r\n        {/* <td>\r\n            {Auth.hasAccess('SUPER_ADMIN') ? props.client.monthly_fee : '-'}\r\n        </td>\r\n        <td>\r\n            {Auth.hasAccess('SUPER_ADMIN') ?\r\n                <div className=\"col-md-2 col-form-label\">\r\n                    <label className=\"switch switch-label switch-pill switch-outline-primary-alt\">\r\n                        <input className=\"switch-input\" type=\"checkbox\" name=\"is_paying\" onChange={(e) => window.confirm('Are you sure you want to edit payment method for client: ' + props.client.name + ' ?') ? props.onChangeCheckbox(e) : void (0)} checked={props.client.is_paying} />\r\n                        <span className=\"switch-slider\" data-checked={props.translations.common.yes} data-unchecked={props.translations.common.no}></span>\r\n                    </label>\r\n                </div>\r\n                :\r\n                '-'\r\n            }\r\n        </td> */}\r\n        {/* <td>\r\n            {props.clients.image ? <img style={{ maxHeight: 100 }} src={Utils.getCategoryImagePath(props.alergen.image)} /> : \"\"}\r\n        </td> */}\r\n        <td>\r\n            <NavLink to={ADMIN_URL + 'clients/edit/' + props.client.id}>\r\n                <button className=\"btn btn-pill btn-link\" type=\"button\">\r\n                    <i className=\"fas fa-edit\"></i>\r\n                </button>\r\n            </NavLink>\r\n\r\n            {/* <button className=\"btn btn-pill btn-link\" type=\"button\" data-toggle=\"modal\" data-target={\"#dangerModal\" + props.client.id} >\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button> */}\r\n\r\n            <DeleteClientModal\r\n                id={props.client.id}\r\n                name={props.client.name}\r\n                deleteClient={props.deleteClient}\r\n                translations={props.translations}\r\n            />\r\n\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nexport default ListEachClient;","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"animated fadeIn\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"form-group reservation-list-search col-md-2 col-sm-4 \">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">{props.translations.common.name}</label>\r\n                            <input className={`form-control`} id=\"search_name\" type=\"text\" placeholder=\"\"\r\n                                name=\"search_name\" onChange={props.onChange} value={props.search_name} />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { listClients, addEditClient } from '../actions/clients.actions';\r\nimport ListEachClient from './ListEachClient';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL, ITEMS_PER_PAGE, ITEMS_PAGE_RANGE_DISPLAYED } from '../../../constants.js'\r\nimport Pagination from \"react-js-pagination\";\r\nimport { push } from 'react-router-redux';\r\nimport Filter from './Filter';\r\nimport MessagesContainer from '../../messages/MessagesContainer';\r\nimport { translations } from '../../common/translations';\r\n\r\nclass ListClientsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.activeDefaultLanguage = 'bg'; // TODO add it in db\r\n        this.state = {\r\n            search_name: '',\r\n            search_active: '',\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        // this.props.listClients();\r\n    }\r\n\r\n    deleteClient = (e, id) => {\r\n        e.preventDefault();\r\n        this.props.addEditClient({ id: id, deleted: true });\r\n    }\r\n\r\n    handlePageChange = (page) => {\r\n        this.props.dispatch(push('/admin/clients?page=' + page))\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        this.handlePageChange(1);\r\n    }\r\n\r\n    onChangeCheckbox = (e, id) => {\r\n        // e.preventDefault();\r\n        // this.props.addEditClient({ id: id, is_paying: e.target.checked });\r\n    }\r\n\r\n    render() {\r\n        let clients = this.props.items;\r\n\r\n        if (this.state.search_name.length > 0\r\n            // || this.state.search_active != 0\r\n        ) {\r\n            clients = Object.values(clients).filter(i => {\r\n                return (\r\n                    ((i.name).toLocaleLowerCase().includes((this.state.search_name).toLocaleLowerCase()))\r\n                    // && (this.state.search_active != 0 ? i.active == Boolean(parseInt(this.state.search_active) - 1) : true)\r\n                )\r\n            })\r\n        }\r\n\r\n        const items_count = (clients).length\r\n        const current_page = this.props.page;\r\n        const start_offset = (current_page - 1) * ITEMS_PER_PAGE;\r\n        let start_count = 0;\r\n\r\n        return (\r\n            <main className=\"main\">\r\n\r\n                {/* <!-- Breadcrumb--> */}\r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.dashboard}</NavLink></li>\r\n                    {/* <li className=\"breadcrumb-item\">Меню</li> */}\r\n                    <li className=\"breadcrumb-item active\">{this.props.translations.clients.title}</li>\r\n                    {/* <!-- Breadcrumb Menu--> */}\r\n                    <li className=\"breadcrumb-menu d-md-down-none\">\r\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Button group\">\r\n                            <button onClick={() => { window.localStorage.clear(); window.location.reload() }} className=\"btn btn-default\">Clear Local</button>\r\n                            <NavLink to={ADMIN_URL + `clients/add`} className=\"btn\" >\r\n                                <i className=\"fas fa-plus\"></i> &nbsp; {this.props.translations.clients.add}\r\n                            </NavLink>\r\n                            {/* \r\n                            <!--<a className=\"btn\" href=\"./\">\r\n                                <i className=\"icon-graph\"></i>  Dashboard</a>\r\n                            <a className=\"btn\" href=\"#\">\r\n                                <i className=\"icon-settings\"></i>  Settings</a>\r\n                            --> \r\n                            */}\r\n                        </div>\r\n                    </li>\r\n                </ol>\r\n\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"animated fadeIn\">\r\n                        <div className=\"row\">\r\n\r\n                            <Filter\r\n                                translations={this.props.translations}\r\n                                onChange={this.onChange}\r\n                            />\r\n\r\n                            {/* <!-- /.col--> */}\r\n                            <div className=\"col-lg-12\">\r\n                                <div className=\"card\">\r\n\r\n                                    <div className=\"card-body\">\r\n\r\n                                        <MessagesContainer />\r\n\r\n                                        <table className=\"table table-responsive-sm table-striped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>{this.props.translations.common.name}</th>\r\n                                                    <th>{this.props.translations.common.slug}</th>\r\n                                                    <th>{this.props.translations.clients.contract_start_date}</th>\r\n                                                    {/* <th>{this.props.translations.clients.monthly_fee}</th>\r\n                                                     */}\r\n                                                    {/* <th>{this.props.translations.common.icon}</th> */}\r\n                                                    <th>{this.props.translations.common.action}</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                                {(clients).map((client, index) => {\r\n                                                    if (index >= start_offset && start_count < ITEMS_PER_PAGE) {\r\n                                                        start_count++;\r\n                                                        return <ListEachClient\r\n                                                            key={client.id}\r\n                                                            client={client}\r\n                                                            deleteClient={this.deleteClient}\r\n                                                            // activeDefaultLanguage={this.activeDefaultLanguage}\r\n                                                            translations={this.props.translations}\r\n                                                            currLang={this.props.currLang}\r\n                                                            onChangeCheckbox={(e) => this.onChangeCheckbox(e, client.id)}\r\n                                                        />\r\n                                                    }\r\n                                                })}\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n                                        <Pagination\r\n                                            className=\"pagination\"\r\n                                            itemClass=\"page-item\"\r\n                                            activePage={current_page}\r\n                                            activeClass=\"active\"\r\n                                            linkClass=\"page-link\"\r\n                                            prevPageText=\"<\"\r\n                                            nextPageText=\">\"\r\n                                            firstPageText=\"<<\"\r\n                                            lastPageText=\">>\"\r\n                                            itemsCountPerPage={ITEMS_PER_PAGE}\r\n                                            totalItemsCount={items_count}\r\n                                            pageRangeDisplayed={ITEMS_PAGE_RANGE_DISPLAYED}\r\n                                            onChange={this.handlePageChange}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!-- /.col--> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, dispatch) => {\r\n    return {\r\n        items: state.clients.clients || [],\r\n        page: Number(state.router.location.query.page) || 1,\r\n        translations: state.lang,\r\n        currLang: \"bg\",\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({ addEditClient, listClients }, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListClientsPage);\r\n","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL, PRODUCT_IMG_URL } from '../../../constants.js'\r\nimport DeleteClientModal from './DeleteClientModal';\r\nimport MessagesContainer from '../../messages/MessagesContainer';\r\nimport Utils from '../../../utils/Utils.js';\r\nimport LangDropdown from './../../common/LangDropdown';\r\nimport Select from 'react-select'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass AddEditClientForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n\r\n        let selectedParent;\r\n        let autocompleteItems = [];\r\n        autocompleteItems.push({ 'value': null, 'label': \"Choose client\" })\r\n\r\n        // console.log( \"AUTO \", autocompleteItems, props.clients)\r\n        props.clients.map(cl => {\r\n            if (props.client.clientId == cl.id) {\r\n                selectedParent = { 'value': cl.id, 'label': cl.name };\r\n            }\r\n\r\n            // if(cat.active == 1) {\r\n\r\n            autocompleteItems.push({ 'value': cl.id, 'label': cl.name });\r\n            // } \r\n        });\r\n\r\n        return (\r\n            <form onSubmit={props.onSubmit}>\r\n                <MessagesContainer />\r\n                <div className=\"card-body\">\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">{props.translations.common.name}</label>\r\n                                <input className={`form-control`} id=\"name\" type=\"text\" clientholder={props.translations.common.name} name=\"name\" onChange={props.onChange} value={props.client.name} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"slug\">{props.translations.common.slug}</label>\r\n                                <input className={`form-control`} id=\"slug\" type=\"text\" clientholder={props.translations.common.slug} name=\"slug\" onChange={props.onChange} value={props.client.slug} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"owner_name\">{props.translations.clients.owner_name}</label>\r\n                                <input className={`form-control`} id=\"name\" type=\"text\" clientholder={props.translations.clients.owner_name} name=\"owner_name\" onChange={props.onChange} value={props.client.owner_name} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"address\">{props.translations.clients.address}</label>\r\n                                <input className={`form-control`} id=\"address\" type=\"text\" clientholder={props.translations.common.address} name=\"address\" onChange={props.onChange} value={props.client.address} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <label className=\" col-form-label\">\r\n                                {props.translations.clients.contract_start_date}\r\n                            </label>\r\n\r\n                            <DatePicker\r\n                                className=\"form-control\"\r\n                                selected={props.client.contract_start_date}\r\n                                onChange={date => props.onFieldChange('contract_start_date', date)}\r\n                                dateFormat=\"d-M-Y\"\r\n                                style={{ display: 'block' }}\r\n                            />\r\n                        </div>\r\n\r\n                        {/* <div className=\"col-md-4\">\r\n                            <label className=\" col-form-label\">\r\n                                {props.translations.clients.monthly_fee}\r\n                            </label>\r\n                            <input className={`form-control`} id=\"monthly_fee\" type=\"number\" clientholder={props.translations.clients.monthly_fee} name=\"monthly_fee\" onChange={props.onChange} value={props.client.monthly_fee} />\r\n                        </div>\r\n\r\n                   */}\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <label className=\" col-form-label\">\r\n                                {props.translations.clients.trial_start_date}\r\n                            </label>\r\n\r\n                            <DatePicker\r\n                                className=\"form-control\"\r\n                                selected={props.client.trial_start_date}\r\n                                onChange={date => props.onFieldChange('trial_start_date', date)}\r\n                                dateFormat=\"d-M-Y\"\r\n                                style={{ display: 'block' }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-md-4\">\r\n                            <label className=\" col-form-label\">\r\n                                {props.translations.clients.trial_end_date}\r\n                            </label>\r\n\r\n                            <DatePicker\r\n                                className=\"form-control\"\r\n                                selected={props.client.trial_end_date}\r\n                                onChange={date => props.onFieldChange('trial_end_date', date)}\r\n                                dateFormat=\"d-M-Y\"\r\n                                style={{ display: 'block' }}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"address\">{props.translations.clients.additional_info}</label>\r\n                                <textarea className={`form-control`} id=\"address\" type=\"text\" clientholder={props.translations.clients.additional_info} name=\"additional_info\" onChange={props.onChange}>\r\n                                    {props.client.additional_info}\r\n                                </textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\" row\">\r\n                        <label className=\"col-md-1 col-form-label\">{props.translations.common.active}</label>\r\n                        <div className=\"col-md-11 col-form-label\">\r\n                            <label className=\"switch switch-label switch-pill switch-outline-primary-alt\">\r\n                                <input className=\"switch-input\" type=\"checkbox\" name=\"active\" onChange={props.onChangeCheckbox} checked={props.client.active} />\r\n                                <span className=\"switch-slider\" data-checked={props.translations.common.yes} data-unchecked={props.translations.common.no}></span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"address\">{props.translations.clients.contract_start_date}</label>\r\n                                <input className={`form-control`} id=\"contract_start_date\" type=\"text\" clientholder={props.translations.clients.contract_start_date} name=\"contract_start_date\" onChange={props.onChange} value={props.client.contract_start_date} />\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n                    {/* \r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-sm-12\">\r\n                            <label htmlFor=\"parentId\">{props.translations.common.client}</label>\r\n                            <Select name=\"parentId\" options={autocompleteItems} onChange={props.onChangeSelectAutocompleteItems} value={selectedParent} \r\n                                clientholder={\"Client\"}\r\n                            />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    <hr />\r\n                    <br />\r\n\r\n                    <div className=\"form-actions\">\r\n                        {props.isAdding == '1' ? '' : <button className=\"btn btn-danger mright10\" type=\"button\" data-toggle=\"modal\" data-target={\"#dangerModal\" + props.client.id} >{props.translations.common.delete}</button>}\r\n\r\n\r\n                        <DeleteClientModal\r\n                            id={props.client.id}\r\n                            name={props.client.name}\r\n                            deleteClient={props.deleteClient}\r\n                            translations={props.translations}\r\n                        />\r\n\r\n                        <NavLink to={ADMIN_URL + 'clients'}>\r\n                            <button className=\"btn btn-secondary\" type=\"button\">\r\n                                {props.translations.common.cancel}\r\n                            </button>\r\n                        </NavLink>\r\n\r\n                        <button className=\"fright btn btn-primary\" type=\"submit\">\r\n                            {props.isAdding == '1' ? props.translations.common.add : props.translations.common.save}\r\n                            {/* {props.actionText} */}\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddEditClientForm;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addEditClient, listClients } from '../actions/clients.actions';\r\nimport AddEditClientForm from './AddEditClientForm';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL } from '../../../constants';\r\nimport { addErrorMessages } from '../../messages/messages.actions';\r\n\r\nclass AddClientPage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = { \r\n\t\t\tcurrLang: this.props.currLang,\r\n\t\t\tname: '',\r\n\t\t\tslug: '',\r\n\t\t\towner_name: '',\r\n\t\t\taddress: '',\r\n\t\t\tcontract_start_date: '',\r\n\t\t\ttrial_start_date: '',\r\n\t\t\ttrial_end_date: '',\r\n\t\t\tmonthly_fee: '',\r\n\t\t\tadditional_info: '',\r\n\t\t\tactive: 1,\r\n\t\t}\r\n\t  \r\n\t}\r\n\r\n    componentWillMount() {\r\n        this.props.listClients();\r\n    }\r\n\r\n\tonChange = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\t\t\r\n\tonFieldChange = (fieldName, value) => {\r\n        this.setState({ [fieldName]: value });\r\n\t}\r\n\r\n\tvalidate() {\r\n\t\tlet errors = [];\r\n\r\n\t\tif (this.state.name.length === 0) {\r\n\t\t\terrors.push(this.props.translations.messages.errors.invalid_name);\r\n\t\t}\r\n\t\tif (this.state.slug.length === 0) {\r\n\t\t\terrors.push(this.props.translations.messages.errors.invalid_slug);\r\n\t\t}\r\n\t\treturn errors;\r\n    }\r\n\r\n\tonSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const errors = this.validate();\r\n        if(errors.length > 0) {\r\n            this.props.addErrorMessages(errors);\r\n            return;\r\n\t\t}\r\n\t\t\r\n\t\tconst post = {\r\n\t\t\tname: this.state.name,\r\n\t\t\tslug: this.state.slug,\r\n\t\t\taddress: this.state.address,\r\n\t\t\towner_name: this.state.owner_name,\r\n\t\t\tmonthly_fee: this.state.monthly_fee,\r\n\t\t\tadditional_info: this.state.additional_info,\r\n\t\t\tcontract_start_date: this.state.contract_start_date,\r\n\t\t\ttrial_start_date: this.state.trial_start_date,\r\n\t\t\ttrial_end_date: this.state.trial_end_date,\r\n\t\t\tactive: this.state.active,\r\n\t\t\tverified: 1\r\n\t\t}\r\n\r\n\t\tthis.props.addEditClient(post, this.props.history, this.props.languages[this.state.currLang].id);\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tthis.setState({\r\n\t\t\tname: '',\r\n\t\t});\r\n\t}\r\n\r\n    render() {\r\n\t\t\r\n    \treturn (\r\n\t\t\t<main id=\"clients-page\" className=\"main\">\r\n\r\n\t\t\t\t{/* <!-- Breadcrumb--> */}\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.alergens}</NavLink></li>\r\n\t\t\t\t\t{/* <li className=\"breadcrumb-item\">Меню</li> */}\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL + \"clients\"}>{this.props.translations.clients.title}</NavLink></li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\">{this.props.translations.clients.add}</li>\r\n\t\t\t\t\t{/* <!-- Breadcrumb Menu--> */}\r\n\t\t\t\t\t<li className=\"breadcrumb-menu d-md-down-none\">\r\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Button group\">\r\n                        </div>\r\n                    </li>\r\n\t\t\t\t</ol>\r\n\r\n        \t\t<div className=\"container-fluid\">\r\n           \t\t\t<div className=\"animated fadeIn\">\r\n              \t\t\t<div className=\"row\">\r\n                \r\n\t\t\t\t\t\t\t{/* <!-- /.col--> */}                \r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\r\n\t\t\t\t\t\t\t\t\t<AddEditClientForm\r\n                                        clients={this.props.clients}\r\n\t\t\t\t\t\t\t\t\t\tonSubmit={this.onSubmit}\r\n                                        onChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonFieldChange={this.onFieldChange}\r\n\t\t\t\t\t\t\t\t\t\tonChangeCheckbox={this.onChangeCheckbox}\r\n\t\t\t\t\t\t\t\t\t\tclient={this.state}\r\n\t\t\t\t\t\t\t\t\t\tisAdding=\"1\"\r\n\t\t\t\t\t\t\t\t\t\ttranslations={this.props.translations}\r\n\t\t\t\t\t\t\t\t\t\tcurrLang={this.state.currLang}\r\n\t\t\t\t\t\t\t\t\t\tlanguages={this.props.languages}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t  \t\t</div>\r\n\t\t\t\t  \t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</main>\r\n    \t)\r\n  \t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    // errors: state.categories.errors,\r\n    clients: state.clients.clients || [],\r\n\ttranslations: state.lang,\r\n\tlanguages: state.languages.languages || {},\r\n\tcurrLang: state.settings.settings['default_lang'] && state.settings.settings['default_lang'].value || \"bg\",\r\n});\r\n\r\nexport default connect(mapStateToProps, { addEditClient, addErrorMessages, listClients })(AddClientPage);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { addEditClient, listClients } from '../actions/clients.actions';\r\nimport { addErrorMessages } from '../../messages/messages.actions';\r\n\r\nimport { ADMIN_URL } from '../../../constants';\r\nimport AddEditClientForm from './AddEditClientForm';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport moment from 'moment';\r\n\r\nclass EditClientPage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tcurrLang: this.props.currLang,\r\n\t\t\tid: this.props.item.id,\r\n\t\t\tname: this.props.item.name,\r\n\t\t\towner_name: this.props.item.owner_name,\r\n\t\t\taddress: this.props.item.address,\r\n\t\t\tcontract_start_date: this.props.item.contract_start_date && moment(this.props.item.contract_start_date).toDate() || '',\r\n\t\t\ttrial_start_date: this.props.item.trial_start_date && moment(this.props.item.trial_start_date).toDate() || '',\r\n\t\t\ttrial_end_date: this.props.item.trial_end_date && moment(this.props.item.trial_end_date).toDate() || '',\r\n\t\t\tmonthly_fee: this.props.item.monthly_fee,\r\n\t\t\tadditional_info: this.props.item.additional_info,\r\n\t\t\tactive: this.props.item.active\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n        this.props.listClients();\r\n\t\t// this.props.listClientsByUserRole();\r\n\t}\r\n\t\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (nextProps.item.id) {\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tid: nextProps.match.params.id,\r\n\t\t\t\tname: nextProps.item.name,\r\n\t\t\t\tslug: nextProps.item.slug,\r\n\t\t\t\towner_name: nextProps.item.owner_name,\r\n\t\t\t\taddress: nextProps.item.address,\r\n\t\t\t\tcontract_start_date: nextProps.item.contract_start_date && moment(nextProps.item.contract_start_date).toDate() || '',\r\n\t\t\t\ttrial_start_date: nextProps.item.trial_start_date && moment(nextProps.item.trial_start_date).toDate() || '',\r\n\t\t\t\ttrial_end_date: nextProps.item.trial_end_date && moment(nextProps.item.trial_end_date).toDate() || '',\r\n\t\t\t\tmonthly_fee: nextProps.item.monthly_fee,\r\n\t\t\t\tadditional_info: nextProps.item.additional_info,\r\n\t\t\t\tactive: nextProps.item.active\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tonChange = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value });\r\n\t}\r\n\r\n\tonChangeCheckbox = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.checked });\r\n    }\r\n\r\n\tonFieldChange = (fieldName, value) => {\r\n        this.setState({ [fieldName]: value });\r\n\t}\r\n\r\n\tvalidate() {\r\n\t\tlet errors = [];\r\n\r\n\t\tif (this.state.name.length === 0) {\r\n\t\t\terrors.push(this.props.translations.messages.errors.invalid_name);\r\n\t\t}\r\n\t\tif (this.state.slug.length === 0) {\r\n\t\t\terrors.push(this.props.translations.messages.errors.invalid_slug);\r\n\t\t}\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst errors = this.validate();\r\n\t\tif (errors.length > 0) {\r\n\t\t\tthis.props.addErrorMessages(errors);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst post = {\r\n\t\t\tid: this.state.id,\r\n\t\t\tname: this.state.name,\r\n\t\t\tslug: this.state.slug,\r\n\t\t\taddress: this.state.address,\r\n\t\t\towner_name: this.state.owner_name,\r\n\t\t\tmonthly_fee: this.state.monthly_fee,\r\n\t\t\tadditional_info: this.state.additional_info,\r\n\t\t\tcontract_start_date: this.state.contract_start_date,\r\n\t\t\ttrial_start_date: this.state.trial_start_date,\r\n\t\t\ttrial_end_date: this.state.trial_end_date,\r\n\t\t\tactive: this.state.active,\r\n\t\t}\r\n\r\n\t\tthis.props.addEditClient(post, this.props.history, this.props.languages[this.state.currLang].id);\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t// let catItem = this.props.cat;\r\n\r\n\t\treturn (\r\n\t\t\t<main id=\"clients-page\" className=\"main\">\r\n\r\n\t\t\t\t{/* <!-- Breadcrumb--> */}\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.dashboard}</NavLink></li>\r\n\t\t\t\t\t{/* <li className=\"breadcrumb-item\">Меню</li> */}\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL + \"clients\"}>{this.props.translations.clients.title}</NavLink></li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\">{this.props.translations.clients.edit}</li>\r\n\t\t\t\t\t{/* <!-- Breadcrumb Menu--> */}\r\n\t\t\t\t</ol>\r\n\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"animated fadeIn\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\r\n\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%'}}\r\n\t\t\t\t\t\t\t\t\t\tid=\"controlled-tab-example\"\r\n\t\t\t\t\t\t\t\t\t\tactiveKey={this.state.currentTab}\r\n\t\t\t\t\t\t\t\t\t\tonSelect={(k) => this.setState({ currentTab: k })}\r\n\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Tab eventKey=\"edit\" title={this.props.translations.clients.edit} >\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<AddEditClientForm\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclients={this.props.clients}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonSubmit={this.onSubmit}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonFieldChange={this.onFieldChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChangeCheckbox={this.onChangeCheckbox}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onChangeCheckbox={this.onChangeCheckbox}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclient={this.state}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisAdding=\"0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// deleteAlergen={this.deleteAlergen}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttranslations={this.props.translations}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrLang={this.state.currLang}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrLangOnChange={this.currLangOnChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlanguages={this.props.languages}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tab>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t</Tabs>\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</main>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\tlet id = ownProps.match.params.id;\r\n\r\n\tlet item = (state.clients.clients).find(i => i.id == id);\r\n\tif (!item) item = {\r\n\t\tid: '',\r\n\t\tname: '',\r\n\t\tslug: '',\r\n\t\taddress: '',\r\n\t\towner_name: '',\r\n\t\tmonthly_fee: '',\r\n\t\tadditional_info: '',\r\n\t\tcontract_start_date: '',\r\n\t\ttrial_start_date: '',\r\n\t\ttrial_end_date: '',\r\n\t\tactive: 1\r\n\t};\r\n\treturn {\r\n        clients: state.clients.clients || [], \r\n\t\titem: item,\r\n\t\terrors: state.alergens.errors,\r\n\t\ttranslations: state.lang,\r\n\t\tlanguages: state.languages.languages || {},\r\n\t\tcurrLang: \"bg\",\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, { addEditClient, listClients, addErrorMessages })(EditClientPage);","import axios from 'axios';\r\nimport { LIST_TASKS } from './types';\r\nimport { API_URL, ADMIN_URL } from './../../../constants';\r\nimport { addSuccessMessage, addErrorMessages } from './../../messages/messages.actions';\r\nimport { changeLanguage } from './../../../actions/languagesActions';\r\nimport Auth from './../../../utils/Auth';\r\nimport jwtDecode from 'jwt-decode';\r\nimport moment from 'moment';\r\n\r\nexport const listAllTasks = (date = null, userId = null) => dispatch => {\r\n    let currUser = jwtDecode(Auth.getToken());\r\n\r\n    let query = \"?\";\r\n\r\n    if(date) {\r\n        date = moment(date).format('YYYY-MM-DD')\r\n        query += \"date=\" + date;\r\n    }\r\n   \r\n    if(userId) {\r\n        query += \"&userId=\" + userId;\r\n    }\r\n\r\n    axios\r\n        .get(API_URL + `tasks${query}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LIST_TASKS,\r\n                payload: res && res.data ? res.data : []\r\n            });\r\n        })\r\n        .catch(error => {\r\n            throw (error);\r\n        });\r\n}\r\n\r\nexport const listUserTasks = (checkpointToken = null) => dispatch => {\r\n    let currUser = jwtDecode(Auth.getToken());\r\n\r\n    let query = \"?\";\r\n    \r\n    if(checkpointToken) {\r\n        query += \"token=\" + checkpointToken;\r\n    }\r\n\r\n    axios\r\n        .get(API_URL + `userTasks${query}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LIST_TASKS,\r\n                payload: res && res.data ? res.data : []\r\n            });\r\n        })\r\n        .catch(error => {\r\n            throw (error);\r\n        });\r\n}\r\n\r\nexport const addEditTask = (postData) => dispatch => {\r\n    if (!postData.place_id) {\r\n        postData.place_id = Auth.getUserPlace();\r\n    }\r\n    \r\n    return axios\r\n        .post(API_URL + `tasks`, postData)\r\n}\r\n","import React from 'react'\r\nimport DatePicker from 'react-datepicker';\r\nimport Select from 'react-select';\r\n\r\nconst Filter = (props) => {\r\n\r\n    let usersOptions = [\r\n        { 'value': '', 'label': 'Всички' }\r\n    ];\r\n    Object.values(props.users).map(user => {\r\n\r\n        // if (cat.active == 1 && cat.deleted == 0) {\r\n        //     let dashes = '';\r\n        //     for (let i = 0; i < cat.hierarchyLevel - 1; i++) {\r\n        //         dashes += \"-\";\r\n        //     }\r\n\r\n        usersOptions.push({ 'value': user.id, 'label': user.email });\r\n    });\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"animated fadeIn\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"form-group reservation-list-search col-md-2 col-sm-4 \">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"date\">{props.translations.common.date}</label>\r\n                            <br/>\r\n                            <DatePicker\r\n                                className=\"form-control vertical-center\"\r\n                                selected={props.search_date}\r\n                                onChange={date => props.onFieldChange('search_date', date)}\r\n                                dateFormat=\"d-M-Y\"\r\n                                style={{ display: 'block' }}\r\n                            // onCalendarClose={handleCalendarClose}\r\n                            // onCalendarOpen={handleCalendarOpen}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-2 col-sm-4\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"parentId\">{props.translations.common.user}</label>\r\n                        \r\n                            <Select\r\n                                value={props.search_user}\r\n                                name=\"colors\"\r\n                                options={usersOptions}\r\n                                className=\"basic-multi-select\"\r\n                                classNamePrefix=\"select\"\r\n                                onChange={(valueLabel) => props.onFieldChange('search_user', valueLabel)}\r\n                            // onChange={(values, { action, removedValue }) => props.ingredientsOnChange(values, { action, removedValue }, 'removable')}\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"form-group reservation-list-search col-md-2 col-sm-4 \">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">{props.translations.common.user}</label>\r\n                            <input className={`form-control`} id=\"search_name\" type=\"text\" placeholder=\"\"\r\n                                name=\"search_user\" onChange={props.onChange} value={props.search_user} />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    {/* <div className=\"form-group reservation-list-search col-md-2 col-sm-4 \">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">{props.translations.common.is_paying}</label>\r\n                            <select className=\"form-control\" name=\"search_is_paying\" defaultValue={props.search_is_paying} onChange={props.onChange}>\r\n                                <option key={0} value=\"\">-</option>\r\n                                <option value={1}>{props.translations.common.yes}</option>\r\n                                <option value={2}>{props.translations.common.no}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div> */}\r\n                    \r\n                    <div className=\"form-group reservation-list-search col-md-2 col-sm-4 \">\r\n                        <div className=\"form-group\">\r\n\r\n                            <button className=\"btn btn-info\" onClick={props.filter} style={{marginTop: 28}}>{props.translations.common.filter}</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className=\"form-group reservation-list-search col-md-2 col-sm-4 \">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">{props.translations.common.status}</label>\r\n                            <select className=\"form-control\" name=\"search_active\" defaultValue={props.search_active} onChange={props.onChange}>\r\n                                <option key={0} value=\"\">-</option>\r\n                                <option value={1}>{props.translations.common.inactive}</option>\r\n                                <option value={2}>{props.translations.common.active}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div> */}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL, IMG_PATH } from '../../../constants.js'\r\n\r\nconst ListEachTask = (props) => (\r\n    <tr key={props.task.id}>\r\n        <td>\r\n            {props.task.name}\r\n        </td>\r\n        <td>\r\n            {props.task.description}\r\n        </td>\r\n        <td>\r\n            {props.task.checkpoint && props.task.checkpoint.name || \"-\"}\r\n        </td>\r\n        <td>\r\n            {typeof props.task.users != undefined && props.task.users && props.task.users.length > 0 && props.task.users.map(u => (\r\n                <p key={u.id}>\r\n                    {u.visits && u.visits.length < props.task.times_per_day_of_task_execution ? \r\n                        <button className=\"btn btn-danger\" disabled type=\"submit\">\r\n                            {u.email} - {props.translations.tasks.not_completed} \r\n                            {props.task.times_per_day_of_task_execution > 1 ? \r\n                                <>\r\n                                    ( {u.visits && u.visits.length || 0} / {props.task.times_per_day_of_task_execution})\r\n                                </>\r\n                            :\r\n                                null\r\n                            } \r\n                        </button>\r\n                    :\r\n                        <button className=\" btn btn-success\"  type=\"submit\" onClick={() => props.openVisitDetailsModal(props.task, u)}>\r\n                            {u.email} - {props.translations.tasks.completed} ({u.visits && u.visits.length || 0} / {props.task.times_per_day_of_task_execution})\r\n                            <br/>\r\n                            <span style={{fontSize: 10}}>(кликни за дейтайли)</span>\r\n                        </button>\r\n                    }\r\n                </p>\r\n            )) || \"Няма назначени потребители\"}\r\n        </td>\r\n        <td>\r\n            <NavLink to={ADMIN_URL + `checkpoints/${props.task.checkpointId}/tasks/${props.task.id}/edit`}>\r\n                <button className=\"btn btn-pill btn-link\" type=\"button\">\r\n                    <i className=\"fas fa-edit\" title=\"Промяна на задача\"></i>\r\n                </button>\r\n            </NavLink>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nexport default ListEachTask;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from '@material-ui/styles';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport QrReader from \"react-qr-reader\";\r\nimport { Dialog, Grow } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\n\r\nclass VisitDetailsModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth={'xs'}\r\n                    open={this.props.isOpened}\r\n                    // open={1}\r\n                    onClose={this.props.onClose}\r\n                    aria-labelledby=\"max-width-dialog-title\"\r\n                    TransitionComponent={Grow}\r\n                    // className={classes.modal}\r\n                    data-class=\"dialog-container\"\r\n                >\r\n                        <Fade in={true} timeout={{ enter: 385, exit: 190 }}>\r\n                            <DialogContent style={{ margin: 0 }}>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12 text-center\">\r\n                                        <h4>Детайли:</h4>\r\n                                        <hr/>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <b>Задача:</b>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        {this.props.task.name}\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        <b>Потребител:</b>\r\n                                    </div>\r\n                                    <div className=\"col-md-6\">\r\n                                        {this.props.user.email}\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"col-md-12\">\r\n                                        <hr/>\r\n                                    </div>\r\n                                    {this.props.user.visits && this.props.user.visits.map(v => (\r\n                                        <>\r\n                                            <div className=\"col-md-12\">\r\n                                                <h4 style={{marginTop: 10}}>Посещение</h4>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-md-3\">\r\n                                                <b>Време:</b>\r\n                                            </div>\r\n                                            <div className=\"col-md-9\">\r\n                                                {moment(v.createdAt).format('YYYY-MM-DD HH:mm')}\r\n                                            </div>\r\n                                            <div className=\"col-md-3\">\r\n                                                <b>Коментар:</b>\r\n                                            </div>\r\n                                            <div className=\"col-md-9\">\r\n                                                {v.comment || \"-\"}\r\n                                            </div>\r\n                                        </>\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n\r\n                                {/* <div style={{margin: 10}}>\r\n                                    <textarea name=\"visitComment\" className=\"form-control\" onChange={this.props.onChange} placeholder=\"Коментар към задачата\">\r\n                                        {this.props.visitComment}\r\n                                    </textarea>\r\n                                </div>\r\n                                \r\n                                <div style={{textAlign: \"center\", margin: 10}}>\r\n                                    <button className=\"btn btn-primary \" type=\"submit\" onClick={() => this.props.onSubmitComment()}>\r\n                                        Продължи\r\n                                    </button>\r\n                                </div> */}\r\n\r\n                            </DialogContent>\r\n                        </Fade>\r\n                </Dialog>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        translations: state.lang.translations,\r\n    };\r\n};\r\n\r\nexport default withStyles()(connect(mapStateToProps, {  })(VisitDetailsModal));","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport { listAllTasks, addEditTask } from '../actions/tasks.actions';\r\nimport { listUsers } from '../../../actions/usersActions';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL, ITEMS_PER_PAGE, ITEMS_PAGE_RANGE_DISPLAYED } from '../../../constants.js'\r\nimport Pagination from \"react-js-pagination\";\r\nimport { push } from 'react-router-redux';\r\nimport MessagesContainer from '../../messages/MessagesContainer';\r\nimport Filter from './Filter';\r\nimport ListEachTask from './ListEachTask';\r\nimport VisitDetailsModal from './VisitDetailsModal';\r\nimport moment from 'moment';\r\n\r\nclass ListTasksPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.activeDefaultLanguage = 'bg'; // TODO add it in db\r\n        this.state = {\r\n            search_date: moment().toDate(),\r\n            search_user: '',\r\n            visitDetailsModalOpened: false,\r\n            clickedTask: '',\r\n            clickedUser: '',\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.listAllTasks();\r\n        this.props.listUsers();\r\n    }\r\n\r\n    deleteTask = (e, id) => {\r\n        e.preventDefault();\r\n        this.props.addEditTask({ id: id, deleted: true });\r\n    }\r\n\r\n    handlePageChange = (page) => {\r\n        this.props.dispatch(push('/admin/tasks?page=' + page))\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        this.handlePageChange(1);\r\n    }\r\n\r\n    onFieldChange = (fieldName, value) => {\r\n\t\tthis.setState({ [fieldName]: value });\r\n\t}\r\n\r\n    onChangeCheckbox = (e, id) => {\r\n        e.preventDefault();\r\n        this.props.addEditTask({ id: id, is_paying: e.target.checked });\r\n        this.props.listTasksByUserRole();\r\n    }\r\n\r\n    filter = () => {\r\n        this.props.listAllTasks(this.state.search_date, this.state.search_user && this.state.search_user.value || null);\r\n    }\r\n\r\n    openVisitDetailsModal = (task, user) => {\r\n        this.setState({clickedTask: task, clickedUser: user, visitDetailsModalOpened: true});\r\n        console.log(task, user);\r\n    }\r\n\r\n    render() {\r\n        let tasks = Object.values(this.props.items);\r\n        const items_count = (tasks).length\r\n        const current_page = this.props.page;\r\n        const start_offset = (current_page - 1) * ITEMS_PER_PAGE;\r\n        let start_count = 0;\r\n\r\n        return (\r\n            <main className=\"main\">\r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.dashboard}</NavLink></li>\r\n                    <li className=\"breadcrumb-item active\">{this.props.translations.tasks.title}</li>\r\n                    <li className=\"breadcrumb-menu d-md-down-none\">\r\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Button group\">\r\n                        </div>\r\n                    </li>\r\n                </ol>\r\n\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"animated fadeIn\">\r\n                        <div className=\"row\">\r\n\r\n                            <Filter\r\n                                translations={this.props.translations}\r\n                                onChange={this.onChange}\r\n                                onFieldChange={this.onFieldChange}\r\n                                search_date={this.state.search_date}\r\n                                filter={this.filter}\r\n                                users={this.props.users}\r\n                            />\r\n\r\n                            <div className=\"col-lg-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body\">\r\n                                        <MessagesContainer />\r\n                                        <table className=\"table table-responsive-sm table-striped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>{this.props.translations.common.name}</th>\r\n                                                    <th>{this.props.translations.common.description}</th>\r\n                                                    <th>{this.props.translations.tasks.checkpoint}</th>\r\n                                                    <th>{this.props.translations.common.user}</th>\r\n                                                    <th>{this.props.translations.common.action}</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                                {Object.values(tasks).map((task, index) => {\r\n                                                    if (index >= start_offset && start_count < ITEMS_PER_PAGE) {\r\n                                                        start_count++;\r\n                                                        return <ListEachTask\r\n                                                            key={task.id}\r\n                                                            task={task}\r\n                                                            deleteTask={this.deleteTask}\r\n                                                            onFieldChange={this.onFieldChange}\r\n                                                            openVisitDetailsModal={this.openVisitDetailsModal}\r\n                                                            translations={this.props.translations}\r\n                                                            currLang={this.props.currLang}\r\n                                                        />\r\n                                                    }\r\n                                                })}\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n                                        <VisitDetailsModal\r\n                                            isOpened={this.state.visitDetailsModalOpened}\r\n                                            onClose={() => this.setState({visitDetailsModalOpened: false})}\r\n                                            task={this.state.clickedTask}\r\n                                            user={this.state.clickedUser}\r\n                                        />\r\n\r\n                                        <Pagination\r\n                                            className=\"pagination\"\r\n                                            itemClass=\"page-item\"\r\n                                            activePage={current_page}\r\n                                            activeClass=\"active\"\r\n                                            linkClass=\"page-link\"\r\n                                            prevPageText=\"<\"\r\n                                            nextPageText=\">\"\r\n                                            firstPageText=\"<<\"\r\n                                            lastPageText=\">>\"\r\n                                            itemsCountPerPage={ITEMS_PER_PAGE}\r\n                                            totalItemsCount={items_count}\r\n                                            pageRangeDisplayed={ITEMS_PAGE_RANGE_DISPLAYED}\r\n                                            onChange={this.handlePageChange}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!-- /.col--> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, dispatch) => {\r\n\r\n    return {\r\n        items: state.tasks.tasks || [],\r\n        users: state.users.users || [],\r\n        page: Number(state.router.location.query.page) || 1,\r\n        translations: state.lang,\r\n        currLang: \"bg\",\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({ listAllTasks, addEditTask, listUsers}, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListTasksPage);\r\n","import React from 'react'\r\n\r\nconst DeleteModal = (props) => (\r\n    <div className=\"modal fade\" id={\"dangerModal\" + props.id} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-danger\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h4 className=\"modal-title\">Delete {props.title} ?</h4>\r\n                    <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">×</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p>Are you sure you want to delete '{props.title}'?</p>\r\n                </div>\r\n                {/* <div className=\"modal-footer\"> */}\r\n                <div className=\"modal-body\">\r\n                    <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Close</button>\r\n                    <button className=\"btn btn-danger fright\" type=\"button\" data-dismiss=\"modal\" onClick={(e) => { props.deleteFunc(e, props.id) }}>Delete</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default DeleteModal;","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL, PRODUCT_IMG_URL } from '../../../constants.js'\r\nimport DeleteModal from '../../common/DeleteModal';\r\nimport MessagesContainer from '../../messages/MessagesContainer';\r\nimport Utils from '../../../utils/Utils.js';\r\nimport LangDropdown from './../../common/LangDropdown';\r\nimport Select from 'react-select'\r\n\r\nclass AddEditPlaceForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            uploadedImgName: \"\"\r\n        }\r\n    }\r\n\r\n    addUploadedFileText = e => {\r\n        if (e && e.target && e.target.files && e.target.files[0] && e.target.files[0].name) {\r\n            this.setState({ uploadedImgName: e.target.files[0].name })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n\r\n        let selectedParent;\r\n        let autocompleteItems = [];\r\n        autocompleteItems.push({ 'value': null, 'label': \"Choose client\" })\r\n\r\n        console.log(\"AUTO \", props.place)\r\n        props.clients.map(cl => {\r\n            if (props.place.clientId == cl.id) {\r\n                selectedParent = { 'value': cl.id, 'label': cl.name };\r\n            }\r\n\r\n            // if(cat.active == 1) {\r\n\r\n            autocompleteItems.push({ 'value': cl.id, 'label': cl.name });\r\n            // } \r\n        });\r\n\r\n\r\n        let selectedCity;\r\n        let cityOptions = [];\r\n        cityOptions.push({ 'value': null, 'label': \"Choose city\" })\r\n\r\n        props.cities.map(city => {\r\n            if (props.place.cityId == city.id) {\r\n                selectedCity = { 'value': city.id, 'label': city.name };\r\n            }\r\n\r\n            cityOptions.push({ 'value': city.id, 'label': city.name });\r\n        });\r\n\r\n        let tagsOptions = [];\r\n\r\n        props.tags.map(tag => {\r\n            tagsOptions.push({ 'value': tag.id, 'label': tag.name });\r\n        });\r\n\r\n        let editImage;\r\n        if (props.isAdding == '0' && (props.place.image && props.place.image.length > 0)) {\r\n            editImage = <img src={Utils.getPlaceImagePath(props.place.image)} className=\"editPagesImage\" />\r\n        }\r\n\r\n        return (\r\n            <form onSubmit={props.onSubmit}>\r\n                <MessagesContainer />\r\n                <div className=\"card-body\">\r\n\r\n                    <LangDropdown\r\n                        isDisabled={props.isAdding == 1 ? 1 : \"\"}\r\n                        currLangOnChange={props.currLangOnChange}\r\n                        currLang={props.currLang}\r\n                        languages={props.languages}\r\n                    />\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"form-group col-sm-12\">\r\n                            <label htmlFor=\"parentId\">{props.translations.common.client}</label>\r\n                            <Select name=\"parentId\" options={autocompleteItems} onChange={props.onChangeSelectAutocompleteItems} value={selectedParent}\r\n                                placeholder={\"Client\"}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">{props.translations.invoices.name}</label>\r\n                                <input className={`form-control`} id=\"name\" type=\"text\" placeholder={props.translations.common.name} name=\"name\" onChange={props.onChange} value={props.place.name} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"short_name\">{props.translations.invoices.short_name}</label>\r\n                                <input className={`form-control`} id=\"short_name\" type=\"text\" placeholder={props.translations.common.short_name} name=\"short_name\" onChange={props.onChange} value={props.place.short_name} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"company_name\">{props.translations.invoices.company_name}</label>\r\n                                <input className={`form-control`} type=\"text\" placeholder={props.translations.places.company_name} name=\"company_name\" onChange={props.onChange} value={props.place.company_name} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"company_name\">{props.translations.invoices.company_eik}</label>\r\n                                <input className={`form-control`} type=\"text\" placeholder={props.translations.places.company_eik} name=\"company_eik\" onChange={props.onChange} value={props.place.company_eik} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"company_city\">{props.translations.invoices.company_city}</label>\r\n                                <input className={`form-control`} type=\"text\" name=\"company_city\" onChange={props.onChange} value={props.place.company_city} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"company_address\">{props.translations.invoices.company_address}</label>\r\n                                <input className={`form-control`} type=\"text\" name=\"company_address\" onChange={props.onChange} value={props.place.company_address} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"company_person\">{props.translations.invoices.company_person}</label>\r\n                                <input className={`form-control`} type=\"text\" name=\"company_person\" onChange={props.onChange} value={props.place.company_person} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"company_email\">{props.translations.places.company_email}</label>\r\n                                <input className={`form-control`} type=\"text\" name=\"company_email\" onChange={props.onChange} value={props.place.company_email} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"monthly_fee\">{props.translations.invoices.price}</label>\r\n                                <input className={`form-control`} type=\"text\" name=\"monthly_fee\" onChange={props.onChange} value={props.place.monthly_fee} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-3 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"company_vat_registered\">{props.translations.invoices.company_vat_registered}</label>\r\n\r\n                                <label className=\"switch switch-label switch-pill switch-outline-primary-alt\">\r\n                                    <input className=\"switch-input\" type=\"checkbox\" name=\"company_vat_registered\" onChange={props.onChangeCheckbox} checked={props.place.company_vat_registered} />\r\n                                    <span className=\"switch-slider\" data-checked={props.translations.common.yes} data-unchecked={props.translations.common.no}></span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-3 col-md-3 col-sm-12\">\r\n                            <label>{props.translations.common.is_paying}</label>\r\n\r\n                            <label className=\"switch switch-label switch-pill switch-outline-primary-alt\">\r\n                                <input className=\"switch-input\" type=\"checkbox\" name=\"is_paying\" onChange={props.onChangeCheckbox} checked={props.place.is_paying} />\r\n                                <span className=\"switch-slider\" data-checked={props.translations.common.yes} data-unchecked={props.translations.common.no}></span>\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"additional_info\">{props.translations.places.additional_info}</label>\r\n                                <textarea className={`form-control`} name=\"additional_info\" onChange={props.onChange} value={props.place.additional_info}>\r\n                                </textarea>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"lat\">{props.translations.places.lat}</label>\r\n                                <input className={`form-control`} type=\"text\" name=\"lat\" onChange={props.onChange} value={props.place.lat} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6 col-sm-6\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"lng\">{props.translations.places.lng}</label>\r\n                                <input className={`form-control`} type=\"text\" name=\"lng\" onChange={props.onChange} value={props.place.lng} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group col-sm-6\">\r\n                            <label htmlFor=\"parentId\">{props.translations.places.city}</label>\r\n                            <Select name=\"cityId\" options={cityOptions} onChange={(valueLabel) => props.onChangeSelectAutocomplete('cityId', valueLabel)} value={selectedCity}\r\n                                placeholder={\"City\"}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"visible_on_map\">{props.translations.places.visible_on_map}</label>\r\n\r\n                                <label className=\"switch switch-label switch-pill switch-outline-primary-alt\">\r\n                                    <input className=\"switch-input\" type=\"checkbox\" name=\"visible_on_map\" onChange={props.onChangeCheckbox} checked={props.place.visible_on_map} />\r\n                                    <span className=\"switch-slider\" data-checked={props.translations.common.yes} data-unchecked={props.translations.common.no}></span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group col-sm-12\">\r\n                            <label htmlFor=\"catHierarchyId\">{props.translations.places.tags}</label>\r\n\r\n                            <Select\r\n                                value={props.place.tags}\r\n                                isMulti\r\n                                name=\"colors\"\r\n                                options={tagsOptions}\r\n                                className=\"basic-multi-select\"\r\n                                classNamePrefix=\"select\"\r\n                                onChange={(v) => props.onChangeSelectAutocompleteMulti('tags', v)}\r\n                            // onChange={(values, { action, removedValue }) => props.ingredientsOnChange(values, { action, removedValue }, 'removable')}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group col-sm-12\">\r\n                            <label className=\"col-md-1 col-form-label vertical-center\" htmlFor=\"file-multiple-input\">{props.translations.common.image}</label>\r\n                            <div className=\"col-md-5 col-form-label vertical-center\" style={{ justifyContent: 'center' }}>\r\n                                {/* <input id=\"file-multiple-input\" type=\"file\" name=\"file-multiple-inpuproductisLiquidt\" multiple=\"\"/> */}\r\n                                <input type='file' name='file' id='placeImg' multiple ref=\"image\" style={{ display: 'none' }} onChange={this.addUploadedFileText} />\r\n                                <label for=\"placeImg\" type=\"button\" className=\"btn btn-secondary\" style={{ borderBottomLeftRadius: 0, borderBottomRightRadius: 0, margin: 0 }}>{!props.isAdding && props.place.image && props.place.image.length > 0 ? props.translations.products.replace_image : props.translations.products.upload_image}</label>\r\n                                {editImage}\r\n                                {this.state.uploadedImgName}\r\n\r\n                                {/* {!props.isAdding && props.productImage && props.productImage.length > 0 ?\r\n                                    <button type=\"button\" className=\"btn btn-danger\" onClick={props.removeImage} style={{ borderTopRightRadius: 0, borderTopLeftRadius: 0 }}>{props.translations.products.delete_image}</button>\r\n                                    :\r\n                                    null\r\n                                } */}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <br />\r\n\r\n                    <div className=\"form-actions\">\r\n                        {props.isAdding == '1' ? '' : <button className=\"btn btn-danger mright10\" type=\"button\" data-toggle=\"modal\" data-target={\"#dangerModal\" + props.place.id} >{props.translations.common.delete}</button>}\r\n\r\n                        <DeleteModal\r\n                            id={props.place.id}\r\n                            title={props.place.name}\r\n                            deleteFunc={props.deletePlace}\r\n                            translations={props.translations}\r\n                        />\r\n\r\n                        <NavLink to={ADMIN_URL + 'places'}>\r\n                            <button className=\"btn btn-secondary\" type=\"button\">\r\n                                {props.translations.common.cancel}\r\n                            </button>\r\n                        </NavLink>\r\n\r\n                        <button className=\"fright btn btn-primary\" type=\"submit\">\r\n                            {props.isAdding == '1' ? props.translations.common.add : props.translations.common.save}\r\n                            {/* {props.actionText} */}\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddEditPlaceForm;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { listAllTasks, addEditTask } from '../actions/tasks.actions';\r\n// import { getTags } from './../../tags/actions/tags.actions';\r\nimport { listClients } from './../../clients/actions/clients.actions';\r\nimport AddEditTaskForm from './AddEditTaskForm';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL } from '../../../constants';\r\nimport { addErrorMessages, addSuccessMessage } from '../../messages/messages.actions';\r\n\r\nclass AddTaskPage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = { \r\n\t\t\tcurrLang: this.props.currLang,\r\n\t\t\tname: '',\r\n\t\t\tshort_name: '',\r\n\t\t\tcompany_name: '',\r\n\t\t\tcompany_eik: '',\r\n\t\t\tcompany_vat_registered: '',\r\n\t\t\tcompany_city: '',\r\n\t\t\tcompany_address: '',\r\n\t\t\tcompany_person:'',\r\n\t\t\tcompany_email: '',\r\n\t\t\tmonthly_fee: '',\r\n\t\t\tadditional_info: '',\r\n\t\t\tlat: '',\r\n\t\t\tlng: '',\r\n\t\t\tvisible_on_map: 0,\r\n\t\t\tis_paying: 0,\r\n\t\t\tcityId: 0,\r\n\t\t\ttags: [],\r\n\r\n\t\t\tclientId: '',\r\n\t\t}\r\n\t  \r\n\t}\r\n\r\n    componentWillMount() {\r\n        this.props.listAllTasks();\r\n    }\r\n\r\n\tonChange = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\t\r\n\tonChangeCheckbox = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.checked });\r\n\t}\r\n\r\n    onChangeSelectAutocompleteItems = (valueLabel) => {\r\n        this.setState({ 'clientId': valueLabel.value });\r\n    }\r\n\r\n\tonChangeSelectAutocomplete = (field, valueLabel) => {\r\n\t\tthis.setState({ [field]: valueLabel.value });\r\n\t}\r\n\r\n\tonChangeSelectAutocompleteMulti = (field, values) => {\r\n\t\tthis.setState({ [field]: values });\r\n\t}\r\n\t\t\r\n\tvalidate() {\r\n\t\tlet errors = [];\r\n\r\n\t\tif (this.state.name.length === 0) {\r\n\t\t\terrors.push(this.props.translations.messages.errors.invalid_name);\r\n\t\t}\r\n\t\tif (!this.state.cityId) {\r\n\t\t\terrors.push(this.props.translations.messages.errors.invalid_city);\r\n\t\t}\r\n\t\treturn errors;\r\n    }\r\n\r\n\tonSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const errors = this.validate();\r\n        if(errors.length > 0) {\r\n            this.props.addErrorMessages(errors);\r\n            return;\r\n\t\t}\r\n\t\t\r\n\t\tlet tagsIds = this.state.tags.map(t => t.value)\r\n\r\n\t\tconst post = {\r\n\t\t\tname: this.state.name,\r\n\t\t\tshort_name: this.state.short_name,\r\n\t\t\tcompany_name: this.state.company_name,\r\n\t\t\tcompany_eik: this.state.company_eik,\r\n\t\t\tcompany_vat_registered: this.state.company_vat_registered,\r\n\t\t\tcompany_city: this.state.company_city,\r\n\t\t\tcompany_address: this.state.company_address,\r\n\t\t\tcompany_person: this.state.company_person,\r\n\t\t\tcompany_email: this.state.company_email,\r\n\t\t\tmonthly_fee: this.state.monthly_fee,\r\n\t\t\tadditional_info: this.state.additional_info,\r\n\t\t\tlat: this.state.lat,\r\n\t\t\tlng: this.state.lng,\r\n\t\t\tvisible_on_map: this.state.visible_on_map,\r\n\t\t\tis_paying: this.state.is_paying,\r\n\t\t\tcityId: this.state.cityId,\r\n\t\t\ttagsIds: tagsIds,\r\n\r\n\t\t\tclientId: this.state.clientId,\r\n\t\t}\r\n\r\n\t\tconst files = Array.from(document.querySelector('#taskImg').files)\r\n\t\tconsole.log(\"FILES \", files); \r\n        let formData = new FormData()\r\n        files.forEach((file, i) => {\r\n\t\t\tconsole.log(\"each \", files); \r\n\r\n            formData.append(\"file\", file)\r\n        })\r\n\r\n\t\tObject.keys(post).map(k => {\r\n            formData.append(k, post[k] || \"\")\r\n\t\t})\r\n\r\n\t\tthis.props.addEditTask(formData, this.props.history, this.props.languages[this.state.currLang].id)\r\n\t\t.then((post) => {\r\n            post = post.data;\r\n\t\t\tthis.props.listTasksByUserRole();\r\n\t\t\tthis.props.history.push(\"/admin/tasks/edit/\"+post.id)\r\n            this.props.addSuccessMessage(\"Successfully created task\");\r\n        })\r\n        .catch( (error) => {\r\n            this.props.addErrorMessages(error);\r\n        })\r\n\t}\r\n\r\n\t\r\n\r\n    render() {\r\n\t\t\r\n    \treturn (\r\n\t\t\t<main className=\"main\">\r\n\r\n\t\t\t\t{/* <!-- Breadcrumb--> */}\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.alergens}</NavLink></li>\r\n\t\t\t\t\t{/* <li className=\"breadcrumb-item\">Меню</li> */}\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL + \"tasks\"}>{this.props.translations.tasks.title}</NavLink></li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\">{this.props.translations.tasks.add}</li>\r\n\t\t\t\t\t{/* <!-- Breadcrumb Menu--> */}\r\n\t\t\t\t\t<li className=\"breadcrumb-menu d-md-down-none\">\r\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Button group\">\r\n                            {/* \r\n                            <!--<a className=\"btn\" href=\"./\">\r\n                                <i className=\"icon-graph\"></i>  Dashboard</a>\r\n                            <a className=\"btn\" href=\"#\">\r\n                                <i className=\"icon-settings\"></i>  Settings</a>\r\n                            --> \r\n                            */}\r\n                        </div>\r\n                    </li>\r\n\t\t\t\t</ol>\r\n\r\n        \t\t<div className=\"container-fluid\">\r\n           \t\t\t<div className=\"animated fadeIn\">\r\n              \t\t\t<div className=\"row\">\r\n                \r\n\t\t\t\t\t\t\t{/* <!-- /.col--> */}                \r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\r\n\t\t\t\t\t\t\t\t\t<AddEditTaskForm\r\n                                        clients={this.props.clients}\r\n\t\t\t\t\t\t\t\t\t\tonSubmit={this.onSubmit}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonChangeCheckbox={this.onChangeCheckbox}\r\n                                        onChangeSelectAutocompleteItems={this.onChangeSelectAutocompleteItems}\r\n\t\t\t\t\t\t\t\t\t\tonChangeSelectAutocomplete={this.onChangeSelectAutocomplete}\r\n\t\t\t\t\t\t\t\t\t\tonChangeSelectAutocompleteMulti={this.onChangeSelectAutocompleteMulti}\r\n\t\t\t\t\t\t\t\t\t\ttask={this.state}\r\n\t\t\t\t\t\t\t\t\t\tisAdding=\"1\"\r\n\t\t\t\t\t\t\t\t\t\ttranslations={this.props.translations}\r\n\t\t\t\t\t\t\t\t\t\tcurrLang={this.state.currLang}\r\n\t\t\t\t\t\t\t\t\t\tlanguages={this.props.languages}\r\n\t\t\t\t\t\t\t\t\t\tcities={this.props.cities}\r\n\t\t\t\t\t\t\t\t\t\ttags={this.props.tags}\r\n\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t  \t\t</div>\r\n\t\t\t\t  \t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</main>\r\n    \t)\r\n  \t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    // errors: state.categories.errors,\r\n    tasks: state.tasks.tasks || [],\r\n\ttranslations: state.lang,\r\n\tlanguages: state.languages.languages || {},\r\n\r\n\tcurrLang: state.settings.settings['default_lang'] && state.settings.settings['default_lang'].value || \"bg\",\r\n});\r\n\r\nexport default connect(mapStateToProps, { listAllTasks, addEditTask, addErrorMessages, addSuccessMessage })(AddTaskPage);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { addEditTask, listAllTasks } from '../actions/tasks.actions';\r\nimport { addErrorMessages, addSuccessMessage } from '../../messages/messages.actions';\r\n\r\nimport { ADMIN_URL } from '../../../constants';\r\nimport AddEditTaskForm from './AddEditTaskForm';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\n\r\nclass EditTaskPage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tcurrLang: this.props.currLang,\r\n\t\t\tid: this.props.item.id,\r\n\t\t\tname: this.props.item.name,\r\n\t\t\tshort_name: this.props.item.short_name,\r\n\t\t\tcompany_name: this.props.item.company_name,\r\n\t\t\tcompany_eik: this.props.item.company_eik,\r\n\t\t\tcompany_vat_registered: this.props.item.company_vat_registered,\r\n\t\t\tcompany_city: this.props.item.company_city,\r\n\t\t\tcompany_address: this.props.item.company_address,\r\n\t\t\tcompany_person: this.props.item.company_person,\r\n\t\t\tcompany_email: this.props.item.company_email,\r\n\t\t\tmonthly_fee: this.props.item.monthly_fee,\r\n\t\t\tadditional_info: this.props.item.additional_info,\r\n\t\t\timage: this.props.item.image,\r\n\t\t\tlat: this.props.item.lat,\r\n\t\t\tlng: this.props.item.lng,\r\n\t\t\tvisible_on_map: this.props.item.visible_on_map,\r\n\t\t\tis_paying: this.props.item.is_paying,\r\n\t\t\tcityId: this.props.item.cityId,\r\n\t\t\ttags: [],\r\n\r\n\t\t\tclientId: this.props.item.clientId ? this.props.item.clientId : '',\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.props.listAllTasks();\r\n\t\t// this.props.listTasksByUserRole();\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (nextProps.item.id) {\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tid: nextProps.match.params.id,\r\n\t\t\t\tname: nextProps.item.name,\r\n\t\t\t\tshort_name: nextProps.item.short_name,\r\n\t\t\t\tcompany_name: nextProps.item.company_name,\r\n\t\t\t\tcompany_eik: nextProps.item.company_eik,\r\n\t\t\t\tcompany_vat_registered: nextProps.item.company_vat_registered,\r\n\t\t\t\tcompany_city: nextProps.item.company_city,\r\n\t\t\t\tcompany_address: nextProps.item.company_address,\r\n\t\t\t\tcompany_person: nextProps.item.company_person,\r\n\t\t\t\tcompany_email: nextProps.item.company_email,\r\n\t\t\t\tmonthly_fee: nextProps.item.monthly_fee,\r\n\t\t\t\tadditional_info: nextProps.item.additional_info,\r\n\t\t\t\timage: nextProps.item.image,\r\n\t\t\t\tlat: nextProps.item.lat,\r\n\t\t\t\tlng: nextProps.item.lng,\r\n\t\t\t\tvisible_on_map: nextProps.item.visible_on_map,\r\n\t\t\t\tis_paying: nextProps.item.is_paying,\r\n\t\t\t\tcityId: nextProps.item.cityId,\r\n\r\n\t\t\t\tclientId: nextProps.item.clientId ? nextProps.item.clientId : '',\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet currTags = [];\r\n\r\n\t\tif (Object.keys(nextProps.tags).length !== 0 && nextProps.item.tags) {\r\n\t\t\tnextProps.item.tags.map(t => {\r\n\r\n\t\t\t\tcurrTags.push({\r\n\t\t\t\t\tvalue: t.id, 'label': t.name\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\tthis.setState({ tags: currTags });\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonChange = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value });\r\n\t}\r\n\r\n\tonChangeCheckbox = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.checked });\r\n\t}\r\n\r\n\tonChangeSelectAutocompleteItems = (valueLabel) => {\r\n\t\tthis.setState({ 'clientId': valueLabel.value });\r\n\t}\r\n\r\n\tonChangeSelectAutocomplete = (field, valueLabel) => {\r\n\t\tthis.setState({ [field]: valueLabel.value });\r\n\t}\r\n\r\n\tonChangeSelectAutocompleteMulti = (field, values) => {\r\n\t\tthis.setState({ [field]: values });\r\n\t}\r\n\r\n\tvalidate() {\r\n\t\tlet errors = [];\r\n\r\n\t\tif (this.state.name.length === 0) {\r\n\t\t\terrors.push(this.props.translations.messages.errors.invalid_name);\r\n\t\t}\r\n\r\n\t\tif (!this.state.cityId) {\r\n\t\t\terrors.push(this.props.translations.messages.errors.invalid_city);\r\n\t\t}\r\n\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst errors = this.validate();\r\n\t\tif (errors.length > 0) {\r\n\t\t\tthis.props.addErrorMessages(errors);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet tagsIds = this.state.tags && this.state.tags.map(t => t.value) || [];\r\n\r\n\t\tconst post = {\r\n\t\t\tid: this.state.id,\r\n\t\t\tname: this.state.name,\r\n\t\t\tshort_name: this.state.short_name,\r\n\t\t\tcompany_name: this.state.company_name,\r\n\t\t\tcompany_eik: this.state.company_eik,\r\n\t\t\tcompany_vat_registered: this.state.company_vat_registered,\r\n\t\t\tcompany_city: this.state.company_city,\r\n\t\t\tcompany_address: this.state.company_address,\r\n\t\t\tcompany_person: this.state.company_person,\r\n\t\t\tcompany_email: this.state.company_email,\r\n\t\t\tmonthly_fee: this.state.monthly_fee,\r\n\t\t\tadditional_info: this.state.additional_info,\r\n\t\t\tlat: this.state.lat,\r\n\t\t\tlng: this.state.lng,\r\n\t\t\tvisible_on_map: this.state.visible_on_map,\r\n\t\t\tis_paying: this.state.is_paying,\r\n\t\t\tcityId: this.state.cityId,\r\n\t\t\ttagsIds: JSON.stringify(tagsIds),\r\n\r\n\t\t\tclientId: this.state.clientId,\r\n\t\t}\r\n\r\n\t\tconst files = Array.from(document.querySelector('#taskImg').files)\r\n        let formData = new FormData()\r\n        files.forEach((file, i) => {\r\n            formData.append(\"file\", file)\r\n        })\r\n\r\n\t\tObject.keys(post).map(k => {\r\n            formData.append(k, post[k] || \"\")\r\n\t\t})\r\n\r\n\t\tthis.props.addEditTask(formData)\r\n\t\t.then((post) => {\r\n            // post = post.data;\r\n\t\t\tthis.props.listTasksByUserRole();\r\n            this.props.addSuccessMessage(\"Changes saved\");\r\n        })\r\n        .catch( (error) => {\r\n\t\t\tconsole.log(\" ERRRORRING \" , error)\r\n            this.props.addErrorMessages(error);\r\n        })\r\n\r\n\t}\r\n\r\n\t// deleteAlergen = (e, id) => {\r\n\t// \te.preventDefault();\r\n\t// \tthis.props.addEditAlergen({ id: id, deleted: true }, this.props.history);\r\n\t// }\r\n\r\n\tcurrLangOnChange = (e) => {\r\n\t\tlet newLang = e.target.value;\r\n\t\tlet newNameValue = this.props.item.translations[newLang] && this.props.item.translations[newLang].name\r\n\t\t\t? this.props.item.translations[newLang].name : \"\";\r\n\r\n\t\tthis.setState({\r\n\t\t\tname: newNameValue,\r\n\t\t\tcurrLang: newLang\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\t// let catItem = this.props.cat;\r\n\r\n\t\tconsole.log(\"STATE \", this.state);\r\n\t\treturn (\r\n\t\t\t<main className=\"main\">\r\n\r\n\t\t\t\t{/* <!-- Breadcrumb--> */}\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.dashboard}</NavLink></li>\r\n\t\t\t\t\t{/* <li className=\"breadcrumb-item\">Меню</li> */}\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL + \"tasks\"}>{this.props.translations.tasks.title}</NavLink></li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\">{this.props.translations.tasks.edit}</li>\r\n\t\t\t\t\t{/* <!-- Breadcrumb Menu--> */}\r\n\t\t\t\t</ol>\r\n\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"animated fadeIn\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\tid=\"controlled-tab-example\"\r\n\t\t\t\t\t\t\t\tactiveKey={this.state.currentTab}\r\n\t\t\t\t\t\t\t\tonSelect={(k) => this.setState({ currentTab: k })}\r\n\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t<Tab style={{ width: '1000px' }} eventKey=\"edit\" title={this.props.translations.tasks.edit} >\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<AddEditTaskForm\r\n\t\t\t\t\t\t\t\t\t\t\t\tclients={this.props.clients}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonSubmit={this.onSubmit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChangeSelectAutocompleteItems={this.onChangeSelectAutocompleteItems}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChangeCheckbox={this.onChangeCheckbox}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChangeSelectAutocomplete={this.onChangeSelectAutocomplete}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChangeSelectAutocompleteMulti={this.onChangeSelectAutocompleteMulti}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttask={this.state}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisAdding=\"0\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t// deleteAlergen={this.deleteAlergen}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttranslations={this.props.translations}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrLang={this.state.currLang}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrLangOnChange={this.currLangOnChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlanguages={this.props.languages}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcities={this.props.cities}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttags={this.props.tags}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tab>\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</main>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\tlet id = ownProps.match.params.id;\r\n\r\n\tlet item = (state.tasks.tasks).find(i => i.id == id);\r\n\tif (!item) item = {\r\n\t\tid: '',\r\n\t\tname: '',\r\n\t\tclientId: '',\r\n\t\ttranslations: {},\r\n\t\ttags: [],\r\n\t};\r\n\treturn {\r\n\t\ttasks: state.tasks.tasks || [],\r\n\t\titem: item,\r\n\t\terrors: state.alergens.errors,\r\n\t\ttranslations: state.lang,\r\n\t\tlanguages: state.languages.languages || {},\r\n\r\n\t\tcurrLang: \"bg\",\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, { addEditTask, listAllTasks })(EditTaskPage);","import axios from 'axios';\r\nimport { LIST_CHECKPOINTS } from './types';\r\nimport { API_URL, ADMIN_URL } from './../../../constants'\r\nimport { addErrorMessages, addSuccessMessage } from './../../messages/messages.actions';\r\nimport { history } from './../../../store';\r\nimport Auth from './../../../utils/Auth';\r\nimport { showLoading, hideLoading } from './../../common/loading/loading.actions';\r\n\r\nexport const listCheckpoints = (place_id = 0) => dispatch => {\r\n    let getParam = '';\r\n    if (place_id == 0) {\r\n        place_id = Auth.getUserPlace();\r\n        getParam += \"?place_id=\" + place_id;\r\n    }\r\n\r\n    axios\r\n        .get(API_URL + 'checkpoints' + getParam)\r\n        .then(res =>\r\n            dispatch({\r\n                type: LIST_CHECKPOINTS,\r\n                payload: res && res.data || []\r\n            })\r\n        ).catch(error => {\r\n            console.log('erroring ', error)\r\n            // throw(error);\r\n        });\r\n}\r\n\r\n\r\nexport const addEditCheckpoint = (postData) => dispatch => {\r\n    if (!postData.place_id) {\r\n        postData.place_id = Auth.getUserPlace();\r\n    }\r\n    \r\n    return axios\r\n        .post(API_URL + `checkpoints?host=${window.location.origin}`, postData)\r\n        // .then(post => {\r\n        //     post = post.data;\r\n\r\n        //     dispatch(addSuccessMessage())\r\n        // }\r\n        // )\r\n        // .catch(function (error) {\r\n        //     dispatch(addErrorMessages(error.response.data.error.errors));\r\n        // });\r\n}\r\n\r\n\r\nexport const addCheckpoint = (historyy, postData, imageData) => dispatch => {\r\n    if (!postData.place_id) {\r\n        postData.place_id = Auth.getUserPlace();\r\n    }\r\n    axios\r\n        .post(API_URL + `tables?host=${window.location.origin}`, postData)\r\n        .then(post => {\r\n            post = post.data;\r\n            dispatch(addImage(imageData, post.id));\r\n\r\n            dispatch(addSuccessMessage())\r\n        }\r\n        )\r\n        .catch(function (error) {\r\n            dispatch(addErrorMessages(error.response.data.error.errors));\r\n        });\r\n\r\n\r\n\r\n    // fetch(API_URL + 'tables', {\r\n    //     method: 'POST',\r\n    //     headers: {\r\n    //         'content-type': 'application/json'\r\n    //     },\r\n    //     body: JSON.stringify(postData)\r\n    // })\r\n    // .then(res => res.json())\r\n    // .then(function(post) {\r\n    //     // if (post.error) {\r\n    //     //     dispatch({\r\n    //     //         type: ADD_EDIT_TABLE_ERROR,\r\n    //     //         payload: post.error.errors\r\n    //     //     })\r\n    //     // } else {\r\n\r\n    //         // history.push(ADMIN_URL + 'tables');\r\n    //     // }\r\n    // })\r\n    // .catch(function(e) {\r\n    //     dispatch(addErrorMessages(e.response.data.error.errors));\r\n    // });\r\n}\r\n\r\nexport const bulkAddCheckpoints = (history, data) => dispatch => {\r\n\r\n    dispatch(showLoading());\r\n\r\n    axios\r\n        .post(API_URL + `tables/bulk_create?host=${window.location.origin}`, data, { 'Content-Type': 'multipart/form-data' })\r\n        .then(\r\n            function (post) {\r\n                dispatch(listCheckpoints());\r\n                dispatch(hideLoading());\r\n\r\n                history.push(ADMIN_URL + 'tables');\r\n            }\r\n        )\r\n        .catch(function (error) {\r\n            dispatch(addErrorMessages(error.response.data.error.errors));\r\n        });\r\n\r\n}\r\n\r\nexport const editCheckpoint = (id, postData, history = null, imageData = null) => dispatch => {\r\n    if (!postData.place_id) {\r\n        postData.place_id = Auth.getUserPlace();\r\n    }\r\n\r\n    axios\r\n        .put(API_URL + 'tables/' + id, postData)\r\n        .then(post => {\r\n            post = post.data;\r\n\r\n            if(imageData) {\r\n                dispatch(addImage(imageData, post.id));\r\n            }\r\n\r\n            // dispatch(addSuccessMessage())\r\n            dispatch(listCheckpoints());\r\n        })\r\n        .catch(function (error) {\r\n            dispatch(addErrorMessages(error.response.data.error.errors));\r\n        });\r\n}\r\n\r\n// api/tables/:id/upload\r\n\r\nexport const addImage = (file, tableId) => dispatch => {\r\n    axios\r\n        .post(API_URL + `tables/${tableId}/upload`, file)\r\n        .then(res => {\r\n\r\n            // dispatch(addSuccessMessage())\r\n            history.push(ADMIN_URL + 'tables');\r\n        }\r\n        )\r\n        .catch(function (error) {\r\n            dispatch(addErrorMessages(error.response.data.error.errors));\r\n        });\r\n\r\n\r\n    // fetch(API_URL + `tables/${tableId}/upload`, {\r\n    //     method: 'POST',\r\n    //     body: file //{\"files\": file, \"productId\": productId}\r\n    // })\r\n    // .then(res => res.json())\r\n    // .then(function(res) {\r\n    //     // history.push(ADMIN_URL + 'products');\r\n    //     history.push(ADMIN_URL + 'tables');                \r\n\r\n\r\n    //     // history.push(ADMIN_URL + 'products');\r\n    //     //TODO toastr: Msg za uspeshno/neuspeshno kachvane na snimka\r\n    // });\r\n\r\n}\r\n\r\n\r\nexport const removeCheckpoint = (id, history) => dispatch => {\r\n    axios\r\n        .put(API_URL + 'tables/' + id, { deleted: true })\r\n        .then(res => {\r\n            if (history) {\r\n                // Deleting from /edit\r\n                history.push(ADMIN_URL + \"tables\")\r\n            } else {\r\n                // Deleting from /list\r\n                dispatch(listCheckpoints())\r\n                dispatch(addSuccessMessage('Success deleting table'))\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            dispatch(addErrorMessages(error.response.data.error.errors));\r\n        });\r\n\r\n\r\n\r\n    // fetch(API_URL + 'tables/'+id, {\r\n    //     method: 'PUT',\r\n    //     headers: {\r\n    //         'content-type': 'application/json'\r\n    //     },\r\n    //     body: JSON.stringify({deleted:true})\r\n    // })\r\n    // .then(res => res.json())\r\n    // .then(\r\n    //     function(res) {\r\n    //         if (history) {\r\n    //             // Deleting from /edit\r\n    //             history.push(ADMIN_URL + \"tables\")\r\n    //         } else { \r\n    //             // Deleting from /list\r\n    //             dispatch(listTables())\r\n    //         }\r\n    //     }\r\n    // )\r\n    // .catch(function(e) {\r\n    // });\r\n}\r\n","import { SET_SOUND_ACTIVATION, CHANGE_ORDER_STYLE_TYPE, SET_SNACKBAR_TEXT, OPEN_CONFIRM_MODAL, CLOSE_CONFIRM_MODAL } from './types';\r\n\r\nexport const setSoundActivation = (value) => dispatch => {\r\n    dispatch({\r\n        type: SET_SOUND_ACTIVATION,\r\n        payload: value\r\n    })\r\n}\r\n\r\nexport const changeOrdersStyleType = () => dispatch => {\r\n    dispatch({\r\n        type: CHANGE_ORDER_STYLE_TYPE,\r\n    })\r\n}\r\n\r\nexport const setSnackbarText = (v) => dispatch => {\r\n    dispatch({\r\n        type: SET_SNACKBAR_TEXT,\r\n        payload: v\r\n    })\r\n}\r\n\r\nexport const openConfirmModal = (text, callbackSuccess, callbackFail) => dispatch => {\r\n    let obj = {};\r\n    obj.text = text;\r\n    obj.callbackSuccess = callbackSuccess;\r\n    obj.callbackFail = callbackFail;\r\n    dispatch({\r\n        type: OPEN_CONFIRM_MODAL,\r\n        payload: obj\r\n    });\r\n}\r\n\r\nexport const closeConfirmModal = () => dispatch => {\r\n    dispatch({\r\n        type: CLOSE_CONFIRM_MODAL\r\n    });\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL } from '../../../../constants.js'\r\nimport DeleteModal from './../../../common/DeleteModal';\r\nimport Utils from '../../../../utils/Utils';\r\nimport moment from 'moment';\r\n\r\nconst ListEachTaskForUser = (props) => (\r\n    <tr key={props.task.id}>\r\n        <td>\r\n            {props.task.name}\r\n        </td>\r\n        <td>\r\n            {props.task.description}\r\n        </td>\r\n        <td>\r\n            {props.task.rotation_start_date && moment(props.task.rotation_start_date).format(\"D-M-Y\") || \"\"}\r\n        </td>\r\n        <td>\r\n            {props.task.rotation_days_count}\r\n        </td>\r\n        <td>\r\n            {props.task.times_per_day_of_task_execution}\r\n        </td>\r\n\r\n        <td>\r\n            <NavLink to={ADMIN_URL + `checkpoints/${props.checkpointId}/tasks/${props.task.id}/edit`}>\r\n                <button className=\"btn btn-pill btn-link\" type=\"button\">\r\n                    <i className=\"fas fa-edit\" title=\"Промяна\"></i>\r\n                </button>\r\n            </NavLink>\r\n\r\n            <button className=\"btn btn-pill btn-link\" type=\"button\" data-toggle=\"modal\" data-target={\"#dangerModal\" + props.task.id} >\r\n                <i className=\"fas fa-trash\" title=\"Изтриване на задача\"></i>\r\n            </button>\r\n\r\n            <DeleteModal\r\n                id={props.task.id}\r\n                title={props.task.name}\r\n                deleteFunc={props.deleteCheckpoint}\r\n            />\r\n\r\n        </td>\r\n    </tr >\r\n)\r\n\r\nexport default ListEachTaskForUser;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { push } from 'react-router-redux';\r\nimport { addErrorMessages, addSuccessMessage } from './../../../messages/messages.actions';\r\nimport { listCheckpoints, addEditCheckpoint } from '../../../checkpoints/actions/checkpoints.actions';\r\nimport { listAllTasks, listUserTasks } from './../../../tasks/actions/tasks.actions';\r\nimport { openConfirmModal } from './../../../../actions/adminActions';\r\nimport { ADMIN_URL, ITEMS_PER_PAGE, ITEMS_PAGE_RANGE_DISPLAYED, ADMIN_QR_CODE_DATA } from '../../../../constants.js'\r\nimport ListEachTaskForUser from './ListEachTaskForUser';\r\nimport Pagination from \"react-js-pagination\";\r\nimport MessageContainer from './../../../messages/MessagesContainer';\r\nimport ReactExport from \"react-export-excel\";\r\nimport QRCodeStyling from \"qr-code-styling\";\r\n\r\nclass ListCheckpointTasksForUserPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.listUserTasks(this.props.token);\r\n        this.props.listCheckpoints();\r\n    }\r\n\r\n    deleteTask = (e, id) => {\r\n        e.preventDefault();\r\n        const post = {\r\n\t\t\tid: id,\r\n\t\t\tdeleted: 1,\r\n\t\t}\r\n\r\n\t\tthis.props.addEditTask(post)\r\n\t\t.then(resp => {\r\n            this.props.listCheckpoints();\r\n\t\t\tthis.props.addSuccessMessage(\"Успешно изтрихте задача\")\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tthis.props.addErrorMessages(error.response.data.error.errors);\r\n\t\t})\r\n    }\r\n\r\n    handlePageChange = (page) => {\r\n        this.props.dispatch(push('/admin/checkpoints/' + this.props.checkpointId + '/tasks?page=' + page))\r\n    }\r\n\r\n    render() {\r\n        let itemsList = this.props.tasksForCheckpoint;\r\n\r\n        const items_count = Object.keys(itemsList).length\r\n        const current_page = this.props.page;\r\n        const start_offset = (current_page - 1) * ITEMS_PER_PAGE;\r\n        let start_count = 0;\r\n\r\n        return (\r\n            <main className=\"main\">\r\n\r\n                {/* <!-- Breadcrumb--> */}\r\n                <ol className=\"breadcrumb\">\r\n                    {/* <li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.dashboard}</NavLink></li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL + \"checkpoints\"}>{this.props.translations.checkpoints.title}</NavLink></li>\r\n                    <li className=\"breadcrumb-item active\">{this.props.checkpoint && this.props.checkpoint.name || \"\"}</li>\r\n                    <li className=\"breadcrumb-item active\">{this.props.translations.checkpoints.tasks_for_checkpoint}</li> */}\r\n                    \r\n                    \r\n                   \r\n                </ol>\r\n\r\n\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"animated fadeIn\">\r\n                        <div className=\"row\">\r\n\r\n                            {/* <!-- /.col--> */}\r\n                            <div className=\"col-lg-12\">\r\n                                <div className=\"card\">\r\n\r\n                                    <MessageContainer />\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <table className=\"table table-responsive-sm table-striped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>{this.props.translations.common.name}</th>\r\n                                                    <th>{this.props.translations.tasks.description}</th>\r\n                                                    <th>{this.props.translations.tasks.rotation_start_date}</th>\r\n                                                    <th>{this.props.translations.tasks.rotation_days_count}</th>\r\n                                                    <th>{this.props.translations.tasks.times_per_day_of_task_execution}</th>\r\n                                                    <th>{this.props.translations.common.action}</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                                {Object.values(itemsList).map((item, index) => {\r\n                                                    if (index >= start_offset && start_count < ITEMS_PER_PAGE) {\r\n                                                        start_count++;\r\n\r\n                                                        return <ListEachTaskForUser\r\n                                                            key={item.id}\r\n                                                            checkpointId={this.props.checkpointId}\r\n                                                            task={item}\r\n                                                            deleteTask={this.deleteTask}\r\n                                                            translations={this.props.translations}\r\n                                                            // onChangeCheckboxIsForReservation={this.onChangeCheckboxIsForReservation}\r\n                                                        // activeDefaultLanguage={this.activeDefaultLanguage}\r\n                                                        />\r\n                                                    }\r\n                                                })}\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n                                        <Pagination\r\n                                            className=\"pagination\"\r\n                                            itemClass=\"page-item\"\r\n                                            activePage={current_page}\r\n                                            activeClass=\"active\"\r\n                                            linkClass=\"page-link\"\r\n                                            prevPageText=\"<\"\r\n                                            nextPageText=\">\"\r\n                                            firstPageText=\"<<\"\r\n                                            lastPageText=\">>\"\r\n                                            itemsCountPerPage={ITEMS_PER_PAGE}\r\n                                            totalItemsCount={items_count}\r\n                                            pageRangeDisplayed={ITEMS_PAGE_RANGE_DISPLAYED}\r\n                                            onChange={this.handlePageChange}\r\n                                        />\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let token = ownProps.match.params.token;\r\n\r\n    return {\r\n        token: token,\r\n        // userTasks: \r\n        // checkpointId: checkpointId,\r\n        // checkpoint: state.checkpoints.checkpoints[checkpointId] || null,\r\n        tasksForCheckpoint: [],\r\n        page: Number(state.router.location.query.page) || 1,\r\n        translations: state.lang\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({ listCheckpoints, addEditCheckpoint, openConfirmModal, addErrorMessages, addSuccessMessage, listUserTasks }, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListCheckpointTasksForUserPage);\r\n","import axios from 'axios';\r\nimport { LIST_TASKS } from './types';\r\nimport { API_URL, ADMIN_URL } from './../../../constants';\r\nimport { addSuccessMessage, addErrorMessages } from './../../messages/messages.actions';\r\nimport { changeLanguage } from './../../../actions/languagesActions';\r\nimport Auth from './../../../utils/Auth';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nexport const createVisit = (post) => dispatch => {\r\n    let currUser = jwtDecode(Auth.getToken());\r\n\r\n    let query = \"?\";\r\n    \r\n    return axios.post(API_URL + `visits${query}`, post)\r\n}\r\n","export\r\n    const styles = theme => ({\r\n        backdrop: {\r\n            zIndex: 2,\r\n            color: '#fff',\r\n            position: 'absolute !important', //backdrop not on the full screen\r\n        },\r\n        modal: {\r\n            '& .MuiPaper-root': {\r\n                width: '100% !important',\r\n            },\r\n            '& .MuiDialogContent-root': {\r\n                paddingTop: 5,\r\n                paddingBottom: 0,\r\n            }\r\n        },\r\n        modalTitle: {\r\n            backgroundColor: \"rgb(203,65,2)\",\r\n            zIndex: 1,\r\n        },\r\n        textFieldContainer: {\r\n            display: 'block',\r\n            margin: '15px 0',\r\n            '&:nth-of-type(1)': {\r\n                marginTop: 10,\r\n            },\r\n            '&:last-child': {\r\n                marginBottom: 0,\r\n            },\r\n            '& .MuiFormLabel-root:not(.MuiInputLabel-root)': {\r\n                fontWeight: 'bold'\r\n            }\r\n        },\r\n        textField: {\r\n            width: '100%',\r\n            '& label.Mui-error': {\r\n                color: 'rgba(0, 0, 0, 0.54)'\r\n            },\r\n            '& label.Mui-focused': {\r\n                color: 'rgba(254, 105, 2, 0.7)',\r\n            },\r\n            '& .MuiInput-underline:after': {\r\n                // borderBottomColor: 'rgb(254, 105, 2)',\r\n                borderBottomColor: 'rgb(117 117 117)',\r\n            },\r\n            '& .MuiInput-underline.Mui-error:after': {\r\n                borderBottomColor: '#f44336',\r\n            },\r\n        },\r\n        promocodeAppliedSuccess: {\r\n            '& .MuiInput-input': {\r\n                fontWeight: 'bold',\r\n                color: 'green'\r\n            }\r\n        },\r\n        promocodeAppliedFail: {\r\n            '& .MuiInput-input': {\r\n                fontWeight: 'bold',\r\n                color: 'red'\r\n            }\r\n        },\r\n\r\n        errorContainer: {\r\n            color: '#ff0c00f0',\r\n            textAlign: 'center',\r\n            fontWeight: 'bold',\r\n            borderBottom: '1px solid #ff0c00f0',\r\n            marginTop: 17,\r\n            marginBottom: 5,\r\n        },\r\n        orderCheckbox: {\r\n            margin: 0,\r\n            color: 'rgb(254, 105, 2)',\r\n            '&.Mui-checked': {\r\n                color: 'rgb(254, 105, 2)',\r\n            },\r\n        },\r\n        orderRadio: {\r\n            margin: 0,\r\n            color: 'rgb(254, 105, 2)',\r\n            '&.Mui-checked': {\r\n                color: 'rgb(254, 105, 2)',\r\n            },\r\n        },\r\n        promoCodeBtn: {\r\n            color: 'rgba(0, 0, 0, 0.54)',\r\n            float: 'right',\r\n            borderRadius: 0,\r\n            padding: '10px 0',\r\n            display: 'flex',\r\n            '&:hover': {\r\n                backgroundColor: 'transparent'\r\n            }\r\n        },\r\n        applyPromoCodeBtn: {\r\n            textAlign: 'center',\r\n            width: '100%',\r\n            borderRadius: 0,\r\n            borderBottom: '1px solid rgba(0, 0, 0, 0.42)',\r\n        },\r\n        buttonsRow: {\r\n            marginBottom: 0,\r\n        },\r\n        paymentMethodContainer: {\r\n            marginTop: 30,\r\n            marginBottom: '10px !important'\r\n        },\r\n        cutleryOptionContainer: {\r\n            marginBottom: '10px !important'\r\n        },\r\n        orderLabel: {\r\n            '&.Mui-focused': {\r\n                // color: 'rgb(254, 105, 2, 0.7)',\r\n                color: 'rgba(0, 0, 0, 0.54)',\r\n            }\r\n        },\r\n        promoCodeRow: {\r\n            marginTop: 10,\r\n            marginBottom: 5,\r\n            '@media screen and (max-width: 345px)': {\r\n                marginTop: 25,\r\n            }\r\n        },\r\n        preorderAddressContainer: {\r\n            marginTop: 10,\r\n        },\r\n        preorderAddress: {\r\n            marginTop: 5,\r\n            borderRadius: 5,\r\n            backgroundColor: '#e6e6e6',\r\n            padding: '5px 11px',\r\n            display: 'grid',\r\n            'grid-template-columns': '70% 30%',\r\n        },\r\n        preorderAddressText: {\r\n            placeSelf: 'center',\r\n            textAlign: 'center',\r\n            padding: 5,\r\n        },\r\n        preorderAddressNavigateBtn: {\r\n            width: '100%',\r\n            placeSelf: 'center',\r\n            verticalAlign: 'bottom',\r\n            borderLeft: '1px solid #ccc',\r\n            textAlign: 'center',\r\n        },\r\n        preorderAddressNavigateIcon: {\r\n            fontSize: 30,\r\n            color: '#0064ac',\r\n        },\r\n        orderTimeOptionsContainer: {\r\n            display: 'grid',\r\n            gridTemplateColumns: '47% 47%',\r\n            columnGap: '6%',\r\n        },\r\n\r\n        orderDisabledContainer: {\r\n            background: 'gray',\r\n            width: '95%',\r\n            background: 'gray',\r\n            margin: '0 auto',\r\n            textAlign: 'center',\r\n            marginTop: 20,\r\n            // background: 'repeating-linear-gradient(45deg, #606dbc, #606dbc 10px, #465298 10px, #465298 20px)',\r\n            backgroundColor: '#ff0c00f0',\r\n            padding: 5,\r\n            color: 'white',\r\n            borderRadius: 5\r\n        },\r\n        isMultipleOptionsModalContainer: {\r\n            margin: '40px 20px 45px 20px',\r\n            display: 'grid',\r\n            'grid-column-gap': 15,\r\n            'grid-row-gap': 30,\r\n            'grid-template-columns': '1fr 1fr',\r\n            // 'grid-template-columns': '50% 50%',\r\n            'place-self': 'center',\r\n            textAlign: 'center',\r\n            padding: 0,\r\n            '@media screen and (max-width: 475px)': {\r\n                'grid-template-columns': 'none',\r\n                '& > *:first-child': {\r\n                    marginBottom: 40,\r\n                },\r\n                margin: '20px 15px 25px 15px',\r\n                'grid-row-gap': 20,\r\n            }\r\n        },\r\n        // modalTypesBtnsBorderBottom: {\r\n        //     'border-bottom': '1px solid #ff5200 !important',\r\n        // },\r\n        modalTypesBtns: {\r\n            display: 'grid',\r\n            // 'grid-column': '1 / 1',\r\n            width: '100%',\r\n            // height: '100%',\r\n            // 'grid-template-rows': '50% 50%',\r\n            'place-self': 'center',\r\n            textAlign: 'center',\r\n            color: '#575757',\r\n            borderRadius: 0,\r\n            borderBottom: '1px solid #ff7600',\r\n            backgroundColor: '#f9f9f9',\r\n            minWidth: 180,\r\n            '@media screen and (max-width: 475px)': {\r\n                minWidth: '80%',\r\n            },\r\n\r\n            'border': '1px solid #ebebeb',\r\n\r\n            // 'border': '1px solid #ff5200',\r\n            'border-top-right-radius': 7,\r\n            'border-top-left-radius': 7,\r\n\r\n            paddingBottom: 0,\r\n            paddingLeft: 0,\r\n            paddingRight: 0,\r\n            borderBottom: 'none',\r\n        },\r\n        typeText: {\r\n            paddingLeft: 11,\r\n            paddingRight: 11,\r\n            paddingBottom: 5,\r\n        },\r\n        modalTypesTexts: {\r\n            width: '100%',\r\n            color: 'white',\r\n            fontSize: 11,\r\n            textAlign: 'center',\r\n            backgroundColor: '#ff5e00',\r\n\r\n            position: 'absolute',\r\n            bottom: -20,\r\n            width: '100%',\r\n            border: '1px solid #ebebeb',\r\n            marginLeft: -1,\r\n        },\r\n\r\n        // activeLastModalTypesBtn: {\r\n        //     '@media screen and (min-width: 475px)': {\r\n        //         gridColumn: 'span 2',\r\n        //         // marginTop: 35,\r\n        //         width: '90%'\r\n        //     },\r\n        //     // marginTop: 40,\r\n        // },\r\n        modalTypesIcons: {\r\n            fontSize: 42,\r\n            color: '#ff7600',\r\n        },\r\n        priceOrderContainer: {\r\n            '& p': {\r\n                display: 'grid',\r\n                gridTemplateColumns: '70% 30%',\r\n                'border-bottom': '1px dashed #ccc',\r\n                '& span:last-child': {\r\n                    textAlign: 'right'\r\n                }\r\n            },\r\n            '@media screen and (max-width: 350px)': {\r\n                marginTop: 40\r\n            }\r\n        },\r\n\r\n        formButtons: {\r\n            display: 'contents',\r\n            padding: '3px 8px',\r\n            fontSize: '12px !important'\r\n        },\r\n\r\n        changePaymentInstrumentButton: {\r\n            width: '100%',\r\n            background: '#e7e7e7',\r\n            marginBottom: 10,\r\n        }\r\n\r\n\r\n    });\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from '@material-ui/styles';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport QrReader from \"react-qr-reader\";\r\nimport { styles } from './styles';\r\nimport { Dialog, Grow } from \"@material-ui/core\";\r\n\r\nclass ScanModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            scanDelay: 500,\r\n            scanLegacyMode: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    getQrReader = () => {\r\n        var scanner = \"\";\r\n\r\n        scanner = <QrReader ref=\"qrReader1\"\r\n            delay={this.state.scanDelay}\r\n            onError={this.props.handleScanError}\r\n            onScan={this.props.handleScan}\r\n            style={{ width: \"100%\" }}\r\n        //legacyMode={scanLegacyMode}\r\n        />\r\n\r\n        return scanner;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth={'xs'}\r\n                    open={this.props.isOpened}\r\n                    // open={1}\r\n                    onClose={this.props.onClose}\r\n                    aria-labelledby=\"max-width-dialog-title\"\r\n                    TransitionComponent={Grow}\r\n                    // className={classes.modal}\r\n                    data-class=\"dialog-container\"\r\n                >\r\n                    <React.Fragment>\r\n                        <Fade in={true} timeout={{ enter: 385, exit: 190 }}>\r\n                            <DialogContentText style={{ margin: 0 }}>\r\n\r\n                                {this.getQrReader()}\r\n\r\n                            </DialogContentText>\r\n                        </Fade>\r\n                    </React.Fragment >\r\n                </Dialog>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        translations: state.lang.translations,\r\n    };\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, {  })(ScanModal));","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from '@material-ui/styles';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport QrReader from \"react-qr-reader\";\r\nimport { styles } from './styles';\r\nimport { Dialog, Grow } from \"@material-ui/core\";\r\n\r\nclass CommentModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    maxWidth={'xs'}\r\n                    open={this.props.isOpened}\r\n                    // open={1}\r\n                    onClose={this.props.onClose}\r\n                    aria-labelledby=\"max-width-dialog-title\"\r\n                    TransitionComponent={Grow}\r\n                    // className={classes.modal}\r\n                    data-class=\"dialog-container\"\r\n                >\r\n                    <React.Fragment>\r\n                        <Fade in={true} timeout={{ enter: 385, exit: 190 }}>\r\n                            <DialogContentText style={{ margin: 0 }}>\r\n                                <div style={{margin: 10}}>\r\n                                    <textarea name=\"visitComment\" className=\"form-control\" onChange={this.props.onChange} placeholder=\"Коментар към задачата\">\r\n                                        {this.props.visitComment}\r\n                                    </textarea>\r\n                                </div>\r\n                                \r\n                                <div style={{textAlign: \"center\", margin: 10}}>\r\n                                    <button className=\"btn btn-primary \" type=\"submit\" onClick={() => this.props.onSubmitComment()}>\r\n                                        Продължи\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </DialogContentText>\r\n                        </Fade>\r\n                    </React.Fragment >\r\n                </Dialog>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\r\n    return {\r\n        translations: state.lang.translations,\r\n    };\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, {  })(CommentModal));","import React, { useRef } from 'react'\r\n\r\nconst ListEachUserTaskBox = (props) => {\r\n    const componentRef = useRef();\r\n    const getBoxBackground = (task) => {\r\n        // let status, bill_wanted;\r\n        // if (orderStatus) {\r\n        //     status = orderStatus;\r\n        // } else {\r\n        //     status = order.status;\r\n        //     bill_wanted = order.bill_wanted;\r\n        // }\r\n\r\n        // if (status == \"rejected\") {\r\n        //     return 'repeating-linear-gradient(  45deg,  #ddd,  #cfcfcf 50px,  #ddd 50px,  #cfcfcf 50px)';\r\n        // }\r\n\r\n        // if (status == 'cooked_spot' || status == 'cooked_delivery' || status == 'cooked_preorder' || status == 'cooked_room') {\r\n        //     return '#fff4cc';\r\n        // }\r\n\r\n        // if (status == 'served_spot' || status == 'on_the_way_delivery') {\r\n        //     return '#ccfffd';\r\n        // }\r\n\r\n        // if (status == 'paid') {\r\n        //     return '#cbffdd'\r\n        // }\r\n\r\n        // if (bill_wanted) {\r\n        //     return '#ff6a6a';\r\n        // }\r\n\r\n        return 'white';\r\n        // return key % 2 != 0 ? 'white' : '#f2f2f2';\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"col-sm-6 col-md-4 col-lg-4\" style={{ padding: '0 7px' }}>\r\n            <div className=\"card\" style={{ borderRadius: 11 }}>\r\n                <div className=\"card-body p-0 \" style={{\r\n                    background: getBoxBackground(props.task), borderRadius: 11,\r\n                }}>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\" style={{ padding: '5px 5px 15px 5px' }} >\r\n                            <div style={{ textAlign: 'center' }}>\r\n                                {props.task.name ? <React.Fragment>{props.task.name} <br /></React.Fragment> : null}\r\n                                {/* {props.order.client_phone ? <React.Fragment><a href={\"tel:\" + props.order.client_phone.split(' ').join('')} >{props.order.client_phone}</a><br /></React.Fragment> : ''} */}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* <div className=\"col-md-6 col-sm-12\" style={{ display: 'grid', gridTemplateColumns: '55% 45%', padding: '5px 5px 0 5px' }} > */}\r\n\r\n                            \r\n                            {/* <div style={{ textAlign: 'center' }}> */}\r\n                                {/* <span style={{ color: 'rgb(83, 83, 83)' }}>{props.translations.orders.order_date_short} #{props.task.id * 1}</span>\r\n                                <br />\r\n\r\n                                <p>                                \r\n                                </p> */}\r\n                            {/* </div> */}\r\n\r\n                            <div className=\"col-md-6 col-sm-12\"  style={{ textAlign: 'center' }}>\r\n                                <b>Описание: </b>\r\n                                <br />\r\n                                {props.task.description ? <React.Fragment>{props.task.description} <br /></React.Fragment> : \"-\"}\r\n                                {/* {props.order.client_phone ? <React.Fragment><a href={\"tel:\" + props.order.client_phone.split(' ').join('')} >{props.order.client_phone}</a><br /></React.Fragment> : ''} */}\r\n\r\n                            </div>\r\n\r\n                            <div className=\"col-md-6 col-sm-12\"  style={{ textAlign: 'center' }}>\r\n                                <b>Локация: </b>\r\n                                <br />\r\n                                {props.task.checkpoint ? <React.Fragment>{props.task.checkpoint.name} <br /></React.Fragment> : null}\r\n                                {/* {props.order.client_phone ? <React.Fragment><a href={\"tel:\" + props.order.client_phone.split(' ').join('')} >{props.order.client_phone}</a><br /></React.Fragment> : ''} */}\r\n\r\n                            </div>\r\n\r\n                        {/* </div> */}\r\n                    </div>\r\n                    \r\n\r\n                    \r\n\r\n\r\n                    <br />\r\n\r\n                    {props.task.times_per_day_of_task_execution == 1 ?\r\n                        <>\r\n                            {props.task.completed == false? \r\n                                <button className=\" btn btn-primary\" type=\"submit\" onClick={() => props.onCompleteTask(props.task.id)} style={{width: \"100%\"}}>\r\n                                    {1 == 1 ? props.translations.tasks.complete_tasks : props.translations.tasks.completed}\r\n                                </button>\r\n                            :\r\n                                <button className=\" btn btn-success\" disabled type=\"submit\" style={{width: \"100%\"}}>\r\n                                    {props.translations.tasks.completed}\r\n                                </button>\r\n                            }\r\n                        </>\r\n                    :\r\n                        <>\r\n                            {props.task.visits && props.task.visits.length < props.task.times_per_day_of_task_execution ? \r\n                                <button className=\"btn btn-primary\" type=\"submit\" onClick={() => props.onCompleteTask(props.task.id)} style={{width: \"100%\"}}>\r\n                                    {props.translations.tasks.complete_tasks} ( {props.task.visits.length} / {props.task.times_per_day_of_task_execution})\r\n                                </button>\r\n                            :\r\n                                <button className=\" btn btn-success\" disabled type=\"submit\" style={{width: \"100%\"}}>\r\n                                    {props.translations.tasks.completed} ({props.task.visits && props.task.visits.length || 0} / {props.task.times_per_day_of_task_execution})\r\n                                </button>\r\n                            }\r\n                        </>\r\n                    }\r\n                  \r\n\r\n                    {/* <div style={{ textAlign: 'center' }}>\r\n                        <p style={{ fontSize: 15, border: '1px solid #9c9c9c', padding: 2, 'border-radius': 5, width: 'fit-content', margin: '0 auto' }}><b>{props.order.total_price ? 'Общо: ' + props.order.total_price : null}&nbsp;{props.translations.common.currency}</b></p>\r\n                    </div>\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        {props.order.discount_price && props.order.discount_price != 0 ?\r\n                            <div style={{ textDecoration: props.order.promocode && props.order.promocode.ignore_other_discounts ? 'line-through' : 'none' }}>Отстъпка: {props.order.discount_price} {props.translations.common.currency} {props.order.discount_type == 'percent' && props.order.discount_value ? <span>({props.order.discount_value} %)</span> : null}</div>\r\n                            :\r\n                            null\r\n                        }\r\n                        {props.order.promocode && props.order.promocode.discount_value && props.order.promocode.discount_type ?\r\n                            <div>Отстъпка Промокод: {props.order.promocode.discount_value} {props.order.promocode.discount_type == 'percent' ? '%' : props.translations.common.currency}</div>\r\n                            :\r\n                            null\r\n                        }\r\n\r\n                        {props.order.delivery_price && props.order.delivery_price != 0 ?\r\n                            <div>Доставка: {props.order.delivery_price} {props.translations.common.currency}</div>\r\n                            :\r\n                            null\r\n                        }\r\n\r\n                        {countAdditionalPriceCalculated > 0 ?\r\n                            <React.Fragment>\r\n                                /{(props.translations && props.translations.common && props.translations.common.included ? props.translations.common.included : '')} {countAdditionalPriceCalculated} {(props.translations && props.translations.common && props.translations.common.box ? props.translations.common.box.toLowerCase() : '')}/\r\n                            </React.Fragment>\r\n                            :\r\n                            ''\r\n                        }\r\n                    </div> */}\r\n\r\n\r\n                    {/* <div className=\"progress progress-xs mt-2\">\r\n                        <div className=\"progress-bar bg-success\" role=\"progressbar\"\r\n                            // style={{ width: '25%' }}\r\n                            aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                    </div> */}\r\n\r\n                    {/* {props.order.status == 'served_spot' || (props.order.bill_wanted && props.order.status != 'paid') ?\r\n                        <button type=\"submit\" className=\"btn btn-sm btn-success\" onClick={() => { props.updateStatus(props.order.id, \"paid\", props.order) }} style={{ display: 'block', margin: '0 auto' }}>\r\n                            <i className=\"fa fa-dot-circle-o\"></i> {props.translations.common.paid}\r\n                        </button>\r\n                        :\r\n                        null\r\n                    } */}\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default ListEachUserTaskBox;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { push } from 'react-router-redux';\r\nimport { addErrorMessages, addSuccessMessage } from './../../../messages/messages.actions';\r\nimport { listCheckpoints, addEditCheckpoint } from '../../../checkpoints/actions/checkpoints.actions';\r\nimport { listAllTasks, listUserTasks } from './../../../tasks/actions/tasks.actions';\r\nimport { createVisit } from './../../../visits/actions/visits.actions';\r\nimport { openConfirmModal } from './../../../../actions/adminActions';\r\nimport { ADMIN_URL, ITEMS_PER_PAGE, ITEMS_PAGE_RANGE_DISPLAYED, ADMIN_QR_CODE_DATA } from '../../../../constants.js'\r\nimport ListEachUserTask from './ListEachUserTask';\r\nimport Pagination from \"react-js-pagination\";\r\nimport MessageContainer from './../../../messages/MessagesContainer';\r\nimport ScanModal from './ScanModal';\r\nimport CommentModal from './CommentModal';\r\nimport Auth from '../../../../utils/Auth';\r\nimport ListEachUserTaskBox from './ListEachUserTaskBox';\r\n\r\nclass ListUserTasksPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            scanned: false,\r\n            scanModalOpened: false,\r\n            taskIdToComplete: null,\r\n            commentModalOpened: false,\r\n            visitComment: \"\"\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.listUserTasks();\r\n        this.props.listCheckpoints();\r\n    }\r\n\r\n    onChange = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handlePageChange = (page) => {\r\n        this.props.dispatch(push('/admin/checkpoints/' + this.props.checkpointId + '/tasks?page=' + page))\r\n    }\r\n\r\n    onCompleteTask = (taskId) => {\r\n        console.log(taskId)\r\n        this.setState({\r\n            commentModalOpened: true,\r\n            taskIdToComplete: taskId\r\n        });\r\n    }\r\n\r\n    onSubmitComment = () => {\r\n        this.setState({\r\n            scanModalOpened: true,\r\n            commentModalOpened: false,\r\n        });\r\n    }\r\n\r\n    handleScan = (scannedToken) => {\r\n        if (scannedToken) {\r\n            if (this.state.scanned == false) {\r\n                this.setState({ scanned: true });\r\n\r\n                let post = {\r\n                    token: scannedToken,\r\n                    taskId: this.state.taskIdToComplete,\r\n                    comment: this.state.visitComment\r\n                }\r\n\r\n                this.props\r\n                    .createVisit(post)\r\n                    .then((data) => {\r\n                        console.log(data);\r\n                        this.setState({ scanModalOpened: false, commentModalOpened: false, scanned: false, visitComment: \"\" });\r\n                        this.props.listUserTasks();\r\n                        this.props.addSuccessMessage(\"Успешно изпълнихте задачата\")\r\n                    })\r\n                    .catch(err => {\r\n                        this.props.addErrorMessages(err)\r\n                        this.setState({ scanModalOpened: false, commentModalOpened: false, scanned: false });\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleScanError = (err) => {\r\n        console.error(err);\r\n    }\r\n    \r\n    render() {\r\n        let itemsList = this.props.tasks;\r\n\r\n        const items_count = Object.keys(itemsList).length\r\n        const current_page = this.props.page;\r\n        const start_offset = (current_page - 1) * ITEMS_PER_PAGE;\r\n        let start_count = 0;\r\n\r\n        return (\r\n            <main className=\"main\">\r\n                <ol className=\"breadcrumb\"></ol>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"animated fadeIn\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-12\">\r\n                                <div className=\"card\">\r\n                                    <MessageContainer />\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            {Object.values(itemsList).map((item, index) => {\r\n                                                if (index >= start_offset && start_count < ITEMS_PER_PAGE) {\r\n                                                    start_count++;\r\n                                                    return <ListEachUserTaskBox\r\n                                                        key={item.id}\r\n                                                        onCompleteTask={this.onCompleteTask}\r\n                                                        task={item}\r\n                                                        deleteTask={this.deleteTask}\r\n                                                        translations={this.props.translations}\r\n                                                    />\r\n                                                }\r\n                                            })}\r\n                                        </div>\r\n                                        \r\n                                        <ScanModal\r\n                                            isOpened={this.state.scanModalOpened}\r\n                                            onClose={() => this.setState({scanModalOpened: false})}\r\n                                            onError={this.props.onError}\r\n                                            handleScanError={this.handleScanError}\r\n                                            handleScan={this.handleScan}\r\n                                        />\r\n\r\n                                        <CommentModal\r\n                                            isOpened={this.state.commentModalOpened}\r\n                                            onClose={() => this.setState({commentModalOpened: false})}\r\n                                            onSubmitComment={this.onSubmitComment}\r\n                                            onChange={this.onChange}\r\n                                            visitComment={this.state.visitComment}\r\n                                        />\r\n\r\n                                        <Pagination\r\n                                            className=\"pagination\"\r\n                                            itemClass=\"page-item\"\r\n                                            activePage={current_page}\r\n                                            activeClass=\"active\"\r\n                                            linkClass=\"page-link\"\r\n                                            prevPageText=\"<\"\r\n                                            nextPageText=\">\"\r\n                                            firstPageText=\"<<\"\r\n                                            lastPageText=\">>\"\r\n                                            itemsCountPerPage={ITEMS_PER_PAGE}\r\n                                            totalItemsCount={items_count}\r\n                                            pageRangeDisplayed={ITEMS_PAGE_RANGE_DISPLAYED}\r\n                                            onChange={this.handlePageChange}\r\n                                        />\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let token = ownProps.match.params.token;\r\n\r\n    return {\r\n        tasks: state.tasks.tasks || [],\r\n        // userTasks: \r\n        // checkpointId: checkpointId,\r\n        // checkpoint: state.checkpoints.checkpoints[checkpointId] || null,\r\n        tasksForCheckpoint: [],\r\n        page: Number(state.router.location.query.page) || 1,\r\n        translations: state.lang\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({ listCheckpoints, addEditCheckpoint, openConfirmModal, addErrorMessages, addSuccessMessage, listUserTasks, createVisit }, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListUserTasksPage);\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL } from '../../../constants.js'\r\nimport Auth from '../../../utils/Auth';\r\nimport DeleteCheckpointModal from './../../common/DeleteModal';\r\nimport Utils from '../../../utils/Utils';\r\n\r\nfunction copy(checkpointId) {\r\n    var copyText = document.querySelector(\"#checkpoint_\" + checkpointId);\r\n    copyText.select();\r\n    document.execCommand(\"copy\");\r\n}\r\n\r\nfunction fallbackCopyTextToClipboard(text) {\r\n    var textArea = document.createElement(\"textarea\");\r\n    textArea.value = window.location.origin + '/t/' + text;\r\n\r\n    // Avoid scrolling to bottom\r\n    textArea.style.top = \"0\";\r\n    textArea.style.left = \"0\";\r\n    textArea.style.position = \"fixed\";\r\n\r\n    document.body.appendChild(textArea);\r\n    textArea.focus();\r\n    textArea.select();\r\n\r\n    document.execCommand('copy');\r\n    document.body.removeChild(textArea);\r\n}\r\n\r\nconst ListEachCheckpoint = (props) => (\r\n    <tr key={props.checkpoint.id}>\r\n        <td>\r\n            {/* If not added translation for the defailt language */}\r\n            {props.checkpoint.name}\r\n            {/* {Auth.hasAccess(\"SUPER_ADMIN\") ?\r\n                <React.Fragment>\r\n                    <br />\r\n                    <input type=\"text\" id={\"checkpoint_\" + props.checkpoint.id} value={props.checkpoint.checkpoint_token} onClick={() => copy(props.checkpoint.id)} title=\"Copy token\" readOnly/>\r\n\r\n                    <button className=\"btn btn-pill btn-link\" type=\"button\" onClick={() => fallbackCopyTextToClipboard(props.checkpoint.checkpoint_token)} title=\"Copy full link\" style={{\r\n                        border: '1px solid',\r\n                        'marginLeft': 13,\r\n                        'verticalAlign': 'initial',\r\n                        'borderRadius': 3,\r\n                    }}>\r\n                        <i className=\"fas fa-copy\"></i>\r\n                    </button>\r\n\r\n                </React.Fragment>\r\n                :\r\n                null\r\n            } */}\r\n        </td>\r\n        {/* <td>\r\n            {props.checkpoint.link}\r\n        </td> */}\r\n\r\n        <td>\r\n            <NavLink to={ADMIN_URL + 'checkpoints/edit/' + props.checkpoint.id}>\r\n                <button className=\"btn btn-pill btn-link\" type=\"button\">\r\n                    <i className=\"fas fa-edit\" title=\"Промяна\"></i>\r\n                </button>\r\n            </NavLink>\r\n\r\n            <NavLink to={ADMIN_URL + 'checkpoints/' + props.checkpoint.id + '/tasks'}>\r\n                <button className=\"btn btn-pill btn-link\" type=\"button\">\r\n                    <i className=\"fas fa-list\" rel=\"tooltip\" title=\"Задачи за локацията\"></i> \r\n                </button>\r\n            </NavLink>\r\n\r\n            <button className=\"btn btn-pill btn-link\" type=\"button\" data-toggle=\"modal\" data-target={\"#dangerModal\" + props.checkpoint.id} >\r\n                <i className=\"fas fa-trash\" title=\"Изтриване на локацията\"></i>\r\n            </button>\r\n\r\n            <DeleteCheckpointModal\r\n                id={props.checkpoint.id}\r\n                title={props.checkpoint.name}\r\n                deleteFunc={props.deleteCheckpoint}\r\n            />\r\n\r\n        </td>\r\n    </tr >\r\n)\r\n\r\nexport default ListEachCheckpoint;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { listCheckpoints, addEditCheckpoint } from '../actions/checkpoints.actions';\r\nimport ListEachCheckpoint from './ListEachCheckpoint';\r\nimport Pagination from \"react-js-pagination\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { push } from 'react-router-redux';\r\nimport { ADMIN_URL, ITEMS_PER_PAGE, ITEMS_PAGE_RANGE_DISPLAYED, ADMIN_QR_CODE_DATA, SCAN_URL } from '../../../constants.js'\r\nimport { bindActionCreators } from 'redux'\r\nimport MessageContainer from './../../messages/MessagesContainer';\r\nimport ReactExport from \"react-export-excel\";\r\nimport Utils from './../../../utils/Utils';\r\nimport QRCodeStyling from \"qr-code-styling\";\r\nimport { openConfirmModal } from './../../../actions/adminActions';\r\nimport { addErrorMessages, addSuccessMessage } from './../../messages/messages.actions';\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\nconst checkpointQRCode = new QRCodeStyling(ADMIN_QR_CODE_DATA);\r\n\r\nclass ListCheckpointsPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.activeDefaultLanguage = 'bg'; // TODO add it in db\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.listCheckpoints();\r\n    }\r\n\r\n    deleteCheckpoint = (e, id) => {\r\n        e.preventDefault();\r\n        const post = {\r\n\t\t\tid: id,\r\n\t\t\tdeleted: 1,\r\n\t\t}\r\n\r\n\t\tthis.props.addEditCheckpoint(post)\r\n\t\t.then(resp => {\r\n            this.props.listCheckpoints();\r\n\t\t\tthis.props.addSuccessMessage(\"Успешно изтрихте локация\")\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tthis.props.addErrorMessages(error.response.data.error.errors);\r\n\t\t})\r\n    }\r\n\r\n    handlePageChange = (page) => {\r\n        this.props.dispatch(push('/admin/checkpoints?page=' + page))\r\n    }\r\n\r\n    onChangeCheckboxIsForReservation = (e, id) => {\r\n        const post = {\r\n            id: id,\r\n            is_for_reservation: e.target.checked,\r\n        }\r\n        this.props.editCheckpoint(id, post);\r\n    }\r\n\r\n    downloadAll = async () => {\r\n        const timer = ms => new Promise(res => setTimeout(res, ms))\r\n\r\n        for (let i = 0; i < Object.keys(this.props.checkpoints).length; i++) {\r\n            await timer(500); // then the created Promise can be awaited\r\n\r\n            checkpointQRCode.update({\r\n                data: SCAN_URL + Object.values(this.props.checkpoints)[i].token\r\n            });\r\n\r\n            checkpointQRCode.download({\r\n                extension: 'png',\r\n                name: Object.values(this.props.checkpoints)[i].name\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let checkpointsList = this.props.checkpoints;\r\n\r\n        const items_count = Object.keys(checkpointsList).length\r\n        const current_page = this.props.page;\r\n        const start_offset = (current_page - 1) * ITEMS_PER_PAGE;\r\n        let start_count = 0;\r\n\r\n        // console.log('items_count', items_count)\r\n        // console.log('current_page', current_page)\r\n        // console.log('start_offset', start_offset)\r\n        // console.log('checkpointsList', checkpointsList)\r\n\r\n        // return (\r\n        // )\r\n        // console.log('this.props.checkpoints', this.props.checkpoints)\r\n\r\n        let exportDataSet = []\r\n        Object.values(this.props.checkpoints).map(t =>\r\n            exportDataSet.push({ url: t.url, checkpoint_num: t.checkpoint_num })\r\n        )\r\n\r\n\r\n        // console.log('exportDataSet', exportDataSet)\r\n        return (\r\n            <main className=\"main\">\r\n\r\n                {/* <!-- Breadcrumb--> */}\r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.dashboard}</NavLink></li>\r\n                    <li className=\"breadcrumb-item active\">{this.props.translations.checkpoints.title}</li>\r\n                    <li className=\"breadcrumb-menu d-md-down-none\">\r\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Button group\">\r\n                            <button className=\"btn\" type=\"button\" onClick={() =>\r\n                                this.props.openConfirmModal(\"WARNING: This will download all QR codes as images. Are you sure you want to continue? / We advise you to edit the browser settings and allow autosave / ВНИМАНИЕ: Това действие ще свали множество файлове - всички QR кодове на масите. Сигурни ли сте че искате да продължите ? Ако да, ви съветваме първо да промените настройките на браузъра и да позволите автоматично сваляне! \",\r\n                                    () => this.downloadAll(),\r\n                                    () => void (0))}>\r\n                                <i className=\"fas fa-download\"></i> &nbsp; {this.props.translations.common.download}\r\n                            </button>\r\n                            {/* {Utils.hasFunctionalityModule('reservations') ?\r\n                                <NavLink to={ADMIN_URL + `checkpointGroups`} className=\"btn\" >\r\n                                    <i className=\"nav-icon icon-settings\"></i> &nbsp; {this.props.translations.checkpoint_groups.title}\r\n                                </NavLink>\r\n                                :\r\n                                null\r\n                            } */}\r\n                            <NavLink to={ADMIN_URL + `checkpoints/add`} className=\"btn\" >\r\n                                <i className=\"fas fa-plus\"></i> &nbsp; {this.props.translations.checkpoints.add}\r\n                            </NavLink>\r\n                            {/* <NavLink to={ADMIN_URL + `checkpoints/add-bulk`} className=\"btn\" >\r\n                                <i className=\"fas fa-plus\"></i> &nbsp; {this.props.translations.common.add_bulk}\r\n                            </NavLink> */}\r\n\r\n\r\n\r\n                            {/* \r\n                            <!--<a className=\"btn\" href=\"./\">\r\n                                <i className=\"icon-graph\"></i>  Dashboard</a>\r\n                            <a className=\"btn\" href=\"#\">\r\n                                <i className=\"icon-settings\"></i>  Settings</a>\r\n                            --> \r\n                            */}\r\n\r\n                            {/* <ExcelFile element={<button type=\"button\" className=\"btn btn-primary\" style={{ color: 'black' }}>Export</button>}>\r\n                                <ExcelSheet data={exportDataSet} name=\"Data\">\r\n                                    <ExcelColumn label=\"Url\" value=\"url\" />\r\n                                    <ExcelColumn label=\"Checkpoint number\" value=\"checkpoint_num\" />\r\n                                </ExcelSheet>\r\n                            </ExcelFile> */}\r\n\r\n                        </div>\r\n                    </li>\r\n                </ol>\r\n\r\n\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"animated fadeIn\">\r\n                        <div className=\"row\">\r\n\r\n                            {/* <!-- /.col--> */}\r\n                            <div className=\"col-lg-12\">\r\n                                <div className=\"card\">\r\n\r\n                                    <MessageContainer />\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <table className=\"table table-responsive-sm table-striped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>{this.props.translations.common.name}</th>\r\n                                                    {/* <th>{this.props.translations.common.link}</th> */}\r\n                                                    <th>{this.props.translations.common.action}</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                                {Object.values(checkpointsList).map((checkpoint, index) => {\r\n                                                    if (index >= start_offset && start_count < ITEMS_PER_PAGE) {\r\n                                                        start_count++;\r\n\r\n                                                        return <ListEachCheckpoint\r\n                                                            key={checkpoint.id}\r\n                                                            checkpoint={checkpoint}\r\n                                                            deleteCheckpoint={this.deleteCheckpoint}\r\n                                                            translations={this.props.translations}\r\n                                                            onChangeCheckboxIsForReservation={this.onChangeCheckboxIsForReservation}\r\n                                                        // activeDefaultLanguage={this.activeDefaultLanguage}\r\n                                                        />\r\n                                                    }\r\n                                                })}\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n                                        <Pagination\r\n                                            className=\"pagination\"\r\n                                            itemClass=\"page-item\"\r\n                                            activePage={current_page}\r\n                                            activeClass=\"active\"\r\n                                            linkClass=\"page-link\"\r\n                                            prevPageText=\"<\"\r\n                                            nextPageText=\">\"\r\n                                            firstPageText=\"<<\"\r\n                                            lastPageText=\">>\"\r\n                                            itemsCountPerPage={ITEMS_PER_PAGE}\r\n                                            totalItemsCount={items_count}\r\n                                            pageRangeDisplayed={ITEMS_PAGE_RANGE_DISPLAYED}\r\n                                            onChange={this.handlePageChange}\r\n                                        />\r\n\r\n                                        {/* <ul className=\"pagination\">\r\n                                            <li className=\"page-item\">\r\n                                                <a className=\"page-link\" href=\"#\">Prev</a>\r\n                                            </li>\r\n                                            <li className=\"page-item active\">\r\n                                                <a className=\"page-link\" href=\"#\">1</a>\r\n                                            </li>\r\n                                            <li className=\"page-item\">\r\n                                                <a className=\"page-link\" href=\"#\">2</a>\r\n                                            </li>\r\n                                            <li className=\"page-item\">\r\n                                                <a className=\"page-link\" href=\"#\">3</a>\r\n                                            </li>\r\n                                            <li className=\"page-item\">\r\n                                                <a className=\"page-link\" href=\"#\">4</a>\r\n                                            </li>\r\n                                            <li className=\"page-item\">\r\n                                                <a className=\"page-link\" href=\"#\">Next</a>\r\n                                            </li>\r\n                                        </ul> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* <!-- /.col--> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    checkpoints: state.checkpoints.checkpoints,\r\n    page: Number(state.router.location.query.page) || 1,\r\n    translations: state.lang\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({ listCheckpoints, addEditCheckpoint, openConfirmModal, addErrorMessages, addSuccessMessage }, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListCheckpointsPage);\r\n","import React, { Component, createRef } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL } from '../../../constants.js'\r\nimport DeleteCheckpointModal from './../../common/DeleteModal';\r\nimport QRCode from 'qrcode.react';\r\nimport { Link } from 'react-router-dom';\r\nimport MessagesContainer from './../../messages/MessagesContainer';\r\nimport { SCAN_URL } from './../../../constants';\r\nimport Utils from './../../../utils/Utils';\r\nimport Select from 'react-select'\r\n// import QRCodeStyling from \"qr-code-styling\";\r\n// import tablLogo from './../../images/tabl-transparent.png';\r\n// import tablLogoWhite from './../../images/tabl-transparent-white.png';\r\n\r\n// let md5 = require('md5');\r\n\r\n// const qrCd = new QRCodeStyling({\r\n//     width: 350,\r\n//     height: 350,\r\n//     // data: 'https://tabl.bg/img/tabl-transparent.png',\r\n//     // image: tablLogo,\r\n//     image: tablLogoWhite,\r\n//     cornersDotOptions: {\r\n//         color: \"#f66201\"\r\n//     },\r\n//     dotsOptions: {\r\n//         //color: \"#4267b2\",\r\n//         type: \"square\"\r\n//         //'rounded' 'dots' 'classy' 'classy-rounded' 'square' 'extra-rounded'\r\n//     },\r\n//     imageOptions: {\r\n//         crossOrigin: \"anonymous\",\r\n//         // margin: 20\r\n//     }\r\n// });\r\n\r\nclass AddEditCheckpointForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.ref = React.createRef();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.isAdding == 0) {\r\n            this.props.checkpointQRCode.append(this.ref.current);\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(){\r\n        if (this.props.isAdding == 0) {\r\n            this.props.checkpointQRCode.append(this.ref.current);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n        //     const downloadQR = () => { // will implement soon}\r\n        // <div>\r\n\r\n        //   <a onClick={downloadQR}> Download QR </a>\r\n        // </div>\r\n        // console.log(md5('message'));\r\n\r\n        // let checkpointToken = md5(md5(props.checkpointNum));\r\n        let checkpointToken = \"\";\r\n        if (props.isAdding == 0) {\r\n            checkpointToken = SCAN_URL + props.checkpoint.token;\r\n            this.props.checkpointQRCode.update({\r\n                data: checkpointToken\r\n            });\r\n\r\n            console.log(\"UPDATING \", checkpointToken, props.token)\r\n        }\r\n        // qrCd.data = checkpointToken;\r\n        // if (this.props.isAdding == 0) {\r\n        //     this.props.checkpointQRCode.update({\r\n        //         data: token\r\n        //     });\r\n        // }\r\n\r\n        let generateQRbtn = props.isAdding == 0 ?\r\n            (\r\n                <button className=\"btn btn-default\" onClick={props.generateNewQrCode}>{props.translations.checkpoints.generate_qr}</button>\r\n            )\r\n            : null\r\n\r\n        // const onDownloadClick = (e) => {\r\n        //     e.preventDefault()\r\n        //     qrCd.download({\r\n        //         extension: 'png'\r\n        //     });\r\n        // };\r\n\r\n        console.log(\"ADD \", props)\r\n\r\n        return (\r\n\r\n            <form>\r\n                <div className=\"card-body\">\r\n                    <MessagesContainer />\r\n\r\n                    {/* <div ref={ref} /> */}\r\n\r\n                    {/* <qrCd /> */}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">{props.translations.common.name}</label>\r\n                                <input className={`form-control`} id=\"name\" type=\"text\" title={\"latin\"} placeholder={props.translations.common.name} name=\"name\" onChange={props.onChange} value={props.checkpoint.name} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {(props.token != '') ?\r\n                        <>\r\n                            <div\r\n                                id=\"checkpoint-qr-code2\"\r\n                                ref={this.ref}\r\n                            />\r\n                            {/* <QRCode\r\n                                id=\"checkpoint-qr-code\"\r\n                                value={checkpointToken}\r\n                                size={250}\r\n                                level={\"H\"}\r\n                                includeMargin={true}\r\n                            // style={{display: 'none'}}\r\n                            /> */}\r\n                        </>\r\n                        :\r\n                        null\r\n                    }\r\n                    \r\n                    {generateQRbtn}\r\n\r\n\r\n                    {(props.checkpointNum != '' && props.isAdding == 0) ?\r\n                        <a onClick={props.downloadQr} className=\"btn btn-default\"> Download QR </a>\r\n                        // <button onClick={e => onDownloadClick(e)}>Download</button>\r\n                        :\r\n                        ''\r\n                    }\r\n\r\n                    <div className=\"row\">\r\n{/* \r\n                        <label className=\"col-md-1 col-form-label\">{props.translations.common.active}</label>\r\n                        <div className=\"col-md-11 col-form-label\">\r\n                            <label className=\"switch switch-label switch-pill switch-outline-primary-alt\">\r\n                                <input className=\"switch-input\" type=\"checkbox\" name=\"active\" onChange={props.onChangeCheckbox} checked={props.checkpointActive} />\r\n                                <span className=\"switch-slider\" data-checked={props.translations.common.yes} data-unchecked={props.translations.common.no}></span>\r\n                            </label>\r\n                        </div> */}\r\n\r\n                        {/* <label className=\"col-md-1 col-form-label\">{props.translations.common.place_in_url}</label>\r\n                        <div className=\"col-md-11 col-form-label\">\r\n                            <label className=\"switch switch-label switch-pill switch-outline-primary-alt\">\r\n                                <input className=\"switch-input\" type=\"checkbox\" name=\"place_in_url\" onChange={props.onChangeCheckbox} checked={props.placeInUrl} disabled={props.isAdding == 0} />\r\n                                < span className=\"switch-slider\" data-checked={props.translations.common.yes} data-unchecked={props.translations.common.no}></span>\r\n                            </label>\r\n                        </div> */}\r\n\r\n                        \r\n                    </div>\r\n\r\n\r\n                    <hr />\r\n                    <br />\r\n\r\n                    <div className=\"form-actions\">\r\n                        {props.isAdding == 1 ? '' : <button className=\"btn btn-danger mright10\" type=\"button\" data-toggle=\"modal\" data-target={\"#dangerModal\" + props.checkpointId} > {props.translations.common.delete}</button>}\r\n\r\n                        <DeleteCheckpointModal\r\n                            checkpointId={props.checkpointId}\r\n                            checkpointNum={props.checkpointNum}\r\n                            deleteCheckpoint={props.deleteCheckpoint}\r\n                            translations={props.translations}\r\n                        />\r\n\r\n                        <NavLink to={ADMIN_URL + 'checkpoints'}>\r\n                            <button className=\"btn btn-secondary\" type=\"button\">\r\n                                {props.translations.common.cancel}\r\n                            </button>\r\n                        </NavLink>\r\n\r\n                        <button className=\"fright btn btn-primary\" type=\"submit\" onClick={props.onSubmit}>\r\n                            {props.isAdding == 1 ? props.translations.common.add : props.translations.common.save}\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddEditCheckpointForm;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addEditCheckpoint } from '../actions/checkpoints.actions';\r\nimport AddEditCheckpointForm from './AddEditCheckpointForm';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL, API_TOKEN } from '../../../constants';\r\nimport { addErrorMessages, addSuccessMessage } from './../../messages/messages.actions';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Utils from '../../../utils/Utils';\r\nimport Auth from './../../../utils/Auth';\r\n\r\n// let md5 = require('md5');\r\n\r\nclass AddCheckpointPage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tname: '',\r\n\t\t\tcurrentDate: + new Date(),\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonChange = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value })\r\n\t}\r\n\r\n\tonChangeCheckbox = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.checked });\r\n\t}\r\n\r\n\tonChangeSelectAutocomplete = (fieldName, valueLabel) => {\r\n\t\tthis.setState({ [fieldName]: valueLabel });\r\n\t}\r\n\r\n\tonFieldChange = (fieldName, value) => {\r\n\t\tthis.setState({ [fieldName]: value });\r\n\t}\r\n\r\n\tvalidate() {\r\n\t\tlet errors = [];\r\n\r\n\t\tif (this.state.name.length == 0) {\r\n\t\t\terrors.push(this.props.translations.messages.errors.invalid_name);\r\n\t\t}\r\n\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tvar errors = this.validate()\r\n\t\tif(errors.length > 0)  {\r\n\t\t\tthis.props.addErrorMessages(errors); return\r\n\t\t}\r\n\r\n\t\tthis.props.addEditCheckpoint({\r\n\t\t\tname: this.state.name,\r\n\t\t})\r\n\t\t.then(resp => {\r\n\t\t\tthis.props.history.push(\"/admin/checkpoints\")\r\n\t\t\tthis.props.addSuccessMessage(\"Успешно създаване на локация\")\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tthis.props.addErrorMessages(error.response.data.error.errors);\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<main className=\"main\">\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.dashboard}</NavLink></li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL + \"checkpoints\"}>{this.props.translations.checkpoints.title}</NavLink></li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\">{this.props.translations.checkpoints.add}</li>\r\n\t\t\t\t\t<li className=\"breadcrumb-menu d-md-down-none\">\r\n\t\t\t\t\t\t<div className=\"btn-group\" role=\"group\" aria-label=\"Button group\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ol>\r\n\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"animated fadeIn\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<AddEditCheckpointForm\r\n\t\t\t\t\t\t\t\t\t\tonSubmit={this.onSubmit}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint={this.state}\r\n\t\t\t\t\t\t\t\t\t\tcurrentDate={this.state.currentDate}\r\n\t\t\t\t\t\t\t\t\t\tisAdding={1}\r\n\t\t\t\t\t\t\t\t\t\ttranslations={this.props.translations}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\ttranslations: state.lang,\r\n\t\tclients: state.clients.clients,\r\n\t\tplaces: state.places.places,\r\n\t}\r\n};\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, { addEditCheckpoint, addErrorMessages, addSuccessMessage })(AddCheckpointPage));","import React, { Component } from 'react'\r\nimport AddEditCheckpointForm from './AddEditCheckpointForm';\r\nimport { addEditCheckpoint, removeCheckpoint, listCheckpoints } from '../actions/checkpoints.actions';\r\n// import { listRestaurantHalls } from '../restaurantHalls/actions/restaurantHalls.actions';\r\nimport { addErrorMessages, addSuccessMessage } from './../../messages/messages.actions';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL, ADMIN_QR_CODE_DATA } from '../../../constants';\r\nimport Utils from './../../../utils/Utils';\r\nimport Auth from './../../../utils/Auth';\r\nimport QRCodeStyling from \"qr-code-styling\";\r\n\r\nlet md5 = require('md5');\r\n\r\nconst checkpointQRCode = new QRCodeStyling(ADMIN_QR_CODE_DATA);\r\n\r\nclass EditCheckpointPage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tid: this.props.match.params.id,\r\n\t\t\tname: this.props.checkpoint.name ? this.props.checkpoint.name : \"\",\r\n\t\t\ttoken: this.props.checkpoint.token ? this.props.checkpoint.token : \"\",\r\n\t\t\t// checkpoint_num: this.props.checkpoint.checkpoint_num ? this.props.checkpoint.checkpoint_num : '',\r\n\t\t\t// checkpoint_token: this.props.checkpoint.checkpoint_token ? this.props.checkpoint.checkpoint_token : '',\r\n\t\t\t// qr_code_image: this.props.checkpoint.qr_code_image ? this.props.checkpoint.qr_code_image : '',\r\n\t\t\t// active: this.props.checkpoint.active ? this.props.checkpoint.active : 0,\r\n\t\t\t// place_in_url: this.props.checkpoint.place_in_url ? this.props.checkpoint.place_in_url : 0,\r\n\t\t\t// currentDate: + new Date(),\r\n\t\t\t// checkpointOrdertypes: [],\r\n\t\t\t// checkpointOrdertype: '',\r\n\t\t\t// checkpointOrdertypeValue: '',\r\n\r\n\t\t\t// reservation_min_people: '',\r\n\t\t\t// reservation_max_people: '',\r\n\t\t\t// restaurantHallId: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tid: nextProps.match.params.id,\r\n\t\t\tname: nextProps.checkpoint.name ? nextProps.checkpoint.name : '',\r\n\t\t\ttoken: nextProps.checkpoint.token ? nextProps.checkpoint.token : '',\r\n\t\t\t// checkpoint_num: nextProps.checkpoint.checkpoint_num ? nextProps.checkpoint.checkpoint_num : '',\r\n\t\t\t// checkpoint_token: nextProps.checkpoint.checkpoint_token ? nextProps.checkpoint.checkpoint_token : '',\r\n\t\t\t// qr_code_image: nextProps.checkpoint.qr_code_image ? nextProps.checkpoint.qr_code_image : '',\r\n\t\t\t// active: nextProps.checkpoint.active ? nextProps.checkpoint.active : 0,\r\n\t\t\t// place_in_url: nextProps.checkpoint.place_in_url ? nextProps.checkpoint.place_in_url : 0,\r\n\t\t\t// checkpointOrdertype: checkpointOrdertype,\r\n\t\t\t// checkpointOrdertypeValue: checkpointOrdertype && checkpointOrdertype[0] && checkpointOrdertype[0] || \"\",\r\n\t\t\t// reservation_min_people: nextProps.checkpoint.reservation_min_people ? nextProps.checkpoint.reservation_min_people : '',\r\n\t\t\t// reservation_max_people: nextProps.checkpoint.reservation_max_people ? nextProps.checkpoint.reservation_max_people : '',\r\n\t\t\t// restaurantHallId: nextProps.checkpoint.restaurantHallId ? nextProps.checkpoint.restaurantHallId : '',\r\n\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.props.listCheckpoints();\r\n\t}\r\n\r\n\tonChange = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value })\r\n\t}\r\n\r\n\tonChangeCheckbox = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.checked });\r\n\t}\r\n\r\n\tonChangeSelectAutocomplete = (fieldName, valueLabel) => {\r\n\t\tthis.setState({ [fieldName]: valueLabel });\r\n\t}\r\n\r\n\tonFieldChange = (fieldName, value) => {\r\n\t\tthis.setState({ [fieldName]: value });\r\n\t}\r\n\r\n\tvalidate() {\r\n\t\tlet errors = [];\r\n\r\n\t\tif (this.state.name.length == 0) {\r\n\t\t\terrors.push(this.props.translations.messages.errors.invalid_name);\r\n\t\t}\r\n\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\t// const { places, clients } = this.props;\r\n\r\n\t\t// const errors = this.validate();\r\n\t\t// if (errors.length > 0) {\r\n\t\t// \tthis.props.addErrorMessages(errors);\r\n\t\t// \treturn;\r\n\t\t// }\r\n\r\n\t\t// let currClient = '';\r\n\t\t// let currPlace = '';\r\n\r\n\t\t// if (places) {\r\n\t\t// \tcurrPlace = places.find(p => p.id == Auth.getUserPlace());\r\n\r\n\t\t// \tif (currPlace && Object.values(currPlace).length > 0 && currPlace.clientId) {\r\n\t\t// \t\tcurrClient = clients.find(c => c.id == currPlace.clientId)\r\n\t\t// \t}\r\n\t\t// }\r\n\r\n\t\t// let currClientSlug = '';\r\n\t\t// if (currClient && Object.keys(currClient).length > 0 && currClient.slug) {\r\n\t\t// \tcurrClientSlug = currClient.slug;\r\n\t\t// }\r\n\r\n\t\t// const post = {\r\n\t\t// \tid: this.state.id,\r\n\t\t// \tcheckpoint_num: this.state.checkpoint_num,\r\n\r\n\t\t// \t// checkpoint_token: this.state.checkpoint_token, //  md5(md5(this.state.checkpoint_num + (this.state.currentDate))),\r\n\t\t// \tqr_code_image: this.state.qr_code_image,\r\n\t\t// \tactive: this.state.active,\r\n\t\t// \tplace_in_url: this.state.place_in_url,\r\n\t\t// \tplace_url: this.state.place_in_url ? '/' + currClientSlug : '',\r\n\t\t// \tcheckpointOrdertypes: [this.state.checkpointOrdertypeValue.value],\r\n\t\t// \treservation_min_people: this.state.reservation_min_people || 0,\r\n\t\t// \treservation_max_people: this.state.reservation_max_people || 0,\r\n\t\t// \trestaurantHallId: this.state.restaurantHallId || null\r\n\t\t// }\r\n\r\n\t\t// var canvas = document.getElementById('checkpoint-qr-code');\r\n\t\t// let formData = new FormData()\r\n\r\n\t\t// if (canvas) {\r\n\t\t// \tvar img = canvas.toDataURL(\"image/png\");\r\n\r\n\t\t// \tif (img) {\r\n\t\t// \t\t// Image append\r\n\t\t// \t\tformData.append(\"file\", img)\r\n\t\t// \t}\r\n\t\t// }\r\n\r\n\t\tconst post = {\r\n\t\t\tid: this.state.id,\r\n\t\t\tname: this.state.name,\r\n\t\t}\r\n\r\n\t\tthis.props.addEditCheckpoint(post)\r\n\t\t.then(resp => {\r\n\t\t\tthis.props.history.push(\"/admin/checkpoints\")\r\n\t\t\tthis.props.addSuccessMessage(\"Успешно редактиране на локация\")\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tthis.props.addErrorMessages(error.response.data.error.errors);\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tdeleteCheckpoint = (e, id) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.removeCheckpoint(id, this.props.history);\r\n\t}\r\n\r\n\tgenerateNewQrCode = (e) => {\r\n\t\te.preventDefault();\r\n\t\tlet formData = new FormData()\r\n\r\n\t\tthis.props.addEditCheckpoint({ id: this.state.id, token: \"token_to_be_changed\" })\r\n\t\t.then(resp => {\r\n\t\t\t// this.props.history.push(\"/admin/checkpoints\")\r\n\t\t\tthis.props.addSuccessMessage(\"Успешно редактиране на локация\")\r\n\t\t\tthis.props.listCheckpoints();\r\n\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tthis.props.addErrorMessages(error.response.data.error.errors);\r\n\t\t})\r\n\t\t// this.props.editCheckpoint(this.state.id, { token: \"token_to_be_changed\" }, this.props.history, formData);\r\n\r\n\t\t// let newToken = Utils.generateCheckpointToken(this.state.checkpoint_num);\r\n\r\n\t\t// this.setState({\r\n\t\t// \tcheckpoint_token: newToken\r\n\t\t// })\r\n\t\t// console.log(\"NEW\", newToken)\r\n\t}\r\n\r\n\tdownloadQR = () => {\r\n\t\tcheckpointQRCode.download({\r\n\t\t\textension: 'png',\r\n\t\t\tname: this.state.name\r\n\t\t});\r\n\t\t\r\n\r\n\t\t// const canvas = document.querySelector(\"#checkpoint-qr-code2 canvas\");\r\n\t\t// const pngUrl = canvas\r\n\t\t// \t.toDataURL(\"image/png\")\r\n\t\t// \t.replace(\"image/png\", \"image/octet-stream\");\r\n\t\t// let downloadLink = document.createElement(\"a\");\r\n\t\t// downloadLink.href = pngUrl;\r\n\t\t// downloadLink.download = \"Checkpoint\" + this.state.checkpoint_num + \".png\";\r\n\t\t// document.body.appendChild(downloadLink);\r\n\t\t// downloadLink.click();\r\n\t\t// document.body.removeChild(downloadLink);\r\n\t};\r\n\r\n\trender() {\r\n\r\n\t\t// const findNextCheckpoint = () => {\r\n\t\t// \tif (this.props.checkpoint && this.props.checkpoints && this.props.checkpoint.checkpoints) {\r\n\t\t// \t\tlet checkpoint = this.props.checkpoint;\r\n\t\t// \t\tlet checkpoints = this.props.checkpoints.checkpoints;\r\n\t\t// \t\tconsole.log(`checkpoint`, checkpoint)\r\n\t\t// \t\tconsole.log(`checkpoints`, checkpoints)\r\n\t\t// \t\tconsole.log(`checkpoint.id`, checkpoint.id)\r\n\t\t// \t\tlet index = Object.values(checkpoints.checkpoints).findIndex(t => t.id == checkpoint.id)\r\n\t\t// \t\tconsole.log(`index`, index)\r\n\t\t// \t\tlet nextCheckpoint = Object.values(checkpoints.checkpoints)[index + 1].id\r\n\t\t// \t\tconsole.log(`nextCheckpoint`, nextCheckpoint)\r\n\t\t// \t\t// return nextCheckpoint;\r\n\t\t// \t}\r\n\t\t// }\r\n\r\n\t\tconsole.log(\"STATE \", this.state);\r\n\t\treturn (\r\n\t\t\t<main className=\"main\">\r\n\r\n\t\t\t\t{/* <!-- Breadcrumb--> */}\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.dashboard}</NavLink></li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL + \"checkpoints\"}>{this.props.translations.checkpoints.title}</NavLink></li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\">{this.props.translations.checkpoints.edit}</li>\r\n\t\t\t\t\t{/* <li className=\"breadcrumb-menu d-md-down-none\">\r\n\t\t\t\t\t\t<div className=\"btn-group\" role=\"group\" aria-label=\"Button group\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</li> */}\r\n\t\t\t\t\t<li className=\"breadcrumb-menu d-md-down-none\">\r\n\t\t\t\t\t\t<div className=\"btn-group\" role=\"group\" aria-label=\"Button group\">\r\n\t\t\t\t\t\t\t{/* <button onClick={() => Utils.navigateTo(ADMIN_URL + `checkpoints/edit/` + findNextCheckpoint())}> */}\r\n\t\t\t\t\t\t\t{/* <button onClick={() => console.log(findNextCheckpoint())}>\r\n\t\t\t\t\t\t\t\t{this.props.translations.common.next}&nbsp;<i className=\"fas fa-arrow-right\"></i>\r\n\t\t\t\t\t\t\t</button> */}\r\n\t\t\t\t\t\t\t{/* <NavLink to={ADMIN_URL + `checkpoints/edit/` + findNextCheckpoint()} className=\"btn\" >\r\n\t\t\t\t\t\t\t\t{this.props.translations.common.next}&nbsp;<i className=\"fas fa-arrow-right\"></i>\r\n\t\t\t\t\t\t\t</NavLink> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t</ol>\r\n\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"animated fadeIn\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t\t\t{/* <!-- /.col--> */}\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\r\n\t\t\t\t\t\t\t\t\t<AddEditCheckpointForm\r\n\t\t\t\t\t\t\t\t\t\tonSubmit={this.onSubmit}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonChangeCheckbox={this.onChangeCheckbox}\r\n\t\t\t\t\t\t\t\t\t\t// onChangeSelectAutocomplete={this.onChangeSelectAutocomplete}\r\n\t\t\t\t\t\t\t\t\t\tonFieldChange={this.onFieldChange}\r\n\t\t\t\t\t\t\t\t\t\tcheckpoint={this.state}\r\n\t\t\t\t\t\t\t\t\t\t// restaurantHalls={this.props.restaurantHalls}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// checkpointId={this.state.id}\r\n\t\t\t\t\t\t\t\t\t\t// checkpointNum={this.state.checkpoint_num}\r\n\t\t\t\t\t\t\t\t\t\t// checkpointToken={this.state.checkpoint_token}\r\n\t\t\t\t\t\t\t\t\t\tqrCodeImage={this.state.qr_code_image}\r\n\t\t\t\t\t\t\t\t\t\t// checkpointActive={this.state.active}\r\n\t\t\t\t\t\t\t\t\t\tplaceInUrl={this.state.place_in_url}\r\n\t\t\t\t\t\t\t\t\t\tcurrentDate={this.state.currentDate}\r\n\t\t\t\t\t\t\t\t\t\t// checkpointOrdertypeValue={this.state.checkpointOrdertypeValue}\r\n\r\n\t\t\t\t\t\t\t\t\t\tdeleteCheckpoint={this.deleteCheckpoint}\r\n\t\t\t\t\t\t\t\t\t\tactionText=\"Запази\"\r\n\t\t\t\t\t\t\t\t\t\tisAdding={0}\r\n\t\t\t\t\t\t\t\t\t\t// nameError={this.props.errors.find(error => error.path === 'name') ? this.props.errors.find(error => error.path === 'name') : \"\"}\r\n\t\t\t\t\t\t\t\t\t\ttranslations={this.props.translations}\r\n\t\t\t\t\t\t\t\t\t\tgenerateNewQrCode={this.generateNewQrCode}\r\n\t\t\t\t\t\t\t\t\t\tdownloadQr={this.downloadQR}\r\n\t\t\t\t\t\t\t\t\t\tcurrPlaceOrderTypes={this.props.currPlaceOrderTypes}\r\n\r\n\t\t\t\t\t\t\t\t\t\tcheckpointQRCode={checkpointQRCode}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</main>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\tlet checkpointId = ownProps.match.params.id;\r\n\r\n\tlet orderTypes = [];\r\n\r\n\tif (state.places.places) {\r\n\t\tlet currPlace = state.places.places.find(p => p.id == Auth.getUserPlace());\r\n\t\tif (currPlace) {\r\n\t\t\torderTypes = currPlace.ordertypes;\r\n\t\t}\r\n\t}\r\n\r\n\tlet checkpoint = state.checkpoints.checkpoints[checkpointId];\r\n\tif (!checkpoint) checkpoint = {\r\n\t\tid: '',\r\n\t\tcheckpoint_num: '',\r\n\t\tqr_code_image: '',\r\n\t\tactive: '',\r\n\t\tplace_in_url: '',\r\n\t\tcheckpoint_token: '',\r\n\t\tordertypes: [],\r\n\t};\r\n\treturn {\r\n\t\tcheckpoint: checkpoint,\r\n\t\tcheckpoints: state.checkpoints,\r\n\t\tcurrPlaceOrderTypes: orderTypes,\r\n\t\t// restaurantHalls: state.restaurantHalls.restaurantHalls || [],\r\n\t\terrors: state.checkpoints.errors,\r\n\t\ttranslations: state.lang,\r\n\r\n\t\tclients: state.clients.clients,\r\n\t\tplaces: state.places.places,\r\n\t}\r\n\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, { listCheckpoints, addEditCheckpoint, removeCheckpoint, addErrorMessages, addSuccessMessage })(EditCheckpointPage);","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL } from '../../../../constants.js'\r\nimport DeleteModal from './../../../common/DeleteModal';\r\nimport Utils from '../../../../utils/Utils';\r\nimport moment from 'moment';\r\n\r\nconst ListEachTaskForCheckpoint = (props) => (\r\n    <tr key={props.task.id}>\r\n        <td>\r\n            {props.task.name}\r\n        </td>\r\n        <td>\r\n            {props.task.description}\r\n        </td>\r\n        <td>\r\n            {props.task.rotation_start_date && moment(props.task.rotation_start_date).format(\"D-M-Y\") || \"\"}\r\n        </td>\r\n        <td>\r\n            {props.task.rotation_days_count}\r\n        </td>\r\n        <td>\r\n            {props.task.times_per_day_of_task_execution}\r\n        </td>\r\n\r\n        <td>\r\n            <NavLink to={ADMIN_URL + `checkpoints/${props.checkpointId}/tasks/${props.task.id}/edit`}>\r\n                <button className=\"btn btn-pill btn-link\" type=\"button\">\r\n                    <i className=\"fas fa-edit\" title=\"Промяна\"></i>\r\n                </button>\r\n            </NavLink>\r\n\r\n            <button className=\"btn btn-pill btn-link\" type=\"button\" data-toggle=\"modal\" data-target={\"#dangerModal\" + props.task.id} >\r\n                <i className=\"fas fa-trash\" title=\"Изтриване на задача\"></i>\r\n            </button>\r\n\r\n            <DeleteModal\r\n                id={props.task.id}\r\n                title={props.task.name}\r\n                deleteFunc={props.deleteTask}\r\n            />\r\n\r\n        </td>\r\n    </tr >\r\n)\r\n\r\nexport default ListEachTaskForCheckpoint;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { push } from 'react-router-redux';\r\nimport { addErrorMessages, addSuccessMessage } from './../../../messages/messages.actions';\r\nimport { listCheckpoints, addEditCheckpoint } from '../../actions/checkpoints.actions';\r\nimport { listAllTasks, addEditTask } from './../../../tasks/actions/tasks.actions';\r\nimport { openConfirmModal } from './../../../../actions/adminActions';\r\nimport { ADMIN_URL, ITEMS_PER_PAGE, ITEMS_PAGE_RANGE_DISPLAYED, ADMIN_QR_CODE_DATA } from '../../../../constants.js'\r\nimport ListEachTaskForCheckpoint from './ListEachTaskForCheckpoint';\r\nimport Pagination from \"react-js-pagination\";\r\nimport MessageContainer from './../../../messages/MessagesContainer';\r\nimport ReactExport from \"react-export-excel\";\r\nimport QRCodeStyling from \"qr-code-styling\";\r\n\r\nclass ListCheckpointTasksPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.listAllTasks();\r\n        this.props.listCheckpoints();\r\n    }\r\n\r\n    deleteTask = (e, id) => {\r\n        e.preventDefault();\r\n        const post = {\r\n\t\t\tid: id,\r\n\t\t\tdeleted: 1,\r\n\t\t}\r\n\r\n\t\tthis.props.addEditTask(post)\r\n\t\t.then(resp => {\r\n            this.props.listAllTasks();\r\n\t\t\tthis.props.addSuccessMessage(\"Успешно изтрихте задача\")\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tthis.props.addErrorMessages(error.response.data.error.errors);\r\n\t\t})\r\n    }\r\n\r\n    handlePageChange = (page) => {\r\n        this.props.dispatch(push('/admin/checkpoints/' + this.props.checkpointId + '/tasks?page=' + page))\r\n    }\r\n\r\n    render() {\r\n        let itemsList = this.props.tasksForCheckpoint;\r\n\r\n        const items_count = Object.keys(itemsList).length\r\n        const current_page = this.props.page;\r\n        const start_offset = (current_page - 1) * ITEMS_PER_PAGE;\r\n        let start_count = 0;\r\n\r\n        return (\r\n            <main className=\"main\">\r\n\r\n                {/* <!-- Breadcrumb--> */}\r\n                <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.dashboard}</NavLink></li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL + \"checkpoints\"}>{this.props.translations.checkpoints.title}</NavLink></li>\r\n                    <li className=\"breadcrumb-item active\">{this.props.checkpoint && this.props.checkpoint.name || \"\"}</li>\r\n                    <li className=\"breadcrumb-item active\">{this.props.translations.checkpoints.tasks_for_checkpoint}</li>\r\n                    \r\n                    \r\n                    <li className=\"breadcrumb-menu d-md-down-none\">\r\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Button group\">\r\n                            \r\n                            <NavLink to={ADMIN_URL + `checkpoints/${this.props.checkpointId}/tasks/add`} className=\"btn\" >\r\n                                <i className=\"fas fa-plus\"></i> &nbsp; {this.props.translations.checkpoints.add_task}\r\n                            </NavLink>\r\n                            {/* <NavLink to={ADMIN_URL + `checkpoints/add-bulk`} className=\"btn\" >\r\n                                <i className=\"fas fa-plus\"></i> &nbsp; {this.props.translations.common.add_bulk}\r\n                            </NavLink> */}\r\n\r\n                        </div>\r\n                    </li>\r\n                </ol>\r\n\r\n\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"animated fadeIn\">\r\n                        <div className=\"row\">\r\n\r\n                            {/* <!-- /.col--> */}\r\n                            <div className=\"col-lg-12\">\r\n                                <div className=\"card\">\r\n\r\n                                    <MessageContainer />\r\n\r\n                                    <div className=\"card-body\">\r\n                                        <table className=\"table table-responsive-sm table-striped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>{this.props.translations.common.name}</th>\r\n                                                    <th>{this.props.translations.tasks.description}</th>\r\n                                                    <th>{this.props.translations.tasks.rotation_start_date}</th>\r\n                                                    <th>{this.props.translations.tasks.rotation_days_count}</th>\r\n                                                    <th>{this.props.translations.tasks.times_per_day_of_task_execution}</th>\r\n                                                    <th>{this.props.translations.common.action}</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                                {Object.values(itemsList).map((item, index) => {\r\n                                                    if (index >= start_offset && start_count < ITEMS_PER_PAGE) {\r\n                                                        start_count++;\r\n\r\n                                                        return <ListEachTaskForCheckpoint\r\n                                                            key={item.id}\r\n                                                            checkpointId={this.props.checkpointId}\r\n                                                            task={item}\r\n                                                            deleteTask={this.deleteTask}\r\n                                                            translations={this.props.translations}\r\n                                                            // onChangeCheckboxIsForReservation={this.onChangeCheckboxIsForReservation}\r\n                                                        // activeDefaultLanguage={this.activeDefaultLanguage}\r\n                                                        />\r\n                                                    }\r\n                                                })}\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n                                        <Pagination\r\n                                            className=\"pagination\"\r\n                                            itemClass=\"page-item\"\r\n                                            activePage={current_page}\r\n                                            activeClass=\"active\"\r\n                                            linkClass=\"page-link\"\r\n                                            prevPageText=\"<\"\r\n                                            nextPageText=\">\"\r\n                                            firstPageText=\"<<\"\r\n                                            lastPageText=\">>\"\r\n                                            itemsCountPerPage={ITEMS_PER_PAGE}\r\n                                            totalItemsCount={items_count}\r\n                                            pageRangeDisplayed={ITEMS_PAGE_RANGE_DISPLAYED}\r\n                                            onChange={this.handlePageChange}\r\n                                        />\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\tlet checkpointId = ownProps.match.params.id;\r\n    let tasksForCheckpoint = Object.values(state.tasks.tasks).filter(t => t.checkpointId == checkpointId);\r\n\r\n    return {\r\n        checkpointId: checkpointId,\r\n        checkpoint: state.checkpoints.checkpoints[checkpointId] || null,\r\n        tasksForCheckpoint: tasksForCheckpoint,\r\n        page: Number(state.router.location.query.page) || 1,\r\n        translations: state.lang\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        dispatch,\r\n        ...bindActionCreators({ listCheckpoints, addEditCheckpoint, openConfirmModal, addErrorMessages, addSuccessMessage, listAllTasks, addEditTask}, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListCheckpointTasksPage);\r\n","import React, { Component, createRef } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport DeleteCheckpointModal from './../../../common/DeleteModal';\r\nimport MessagesContainer from './../../../messages/MessagesContainer';\r\nimport { SCAN_URL, ADMIN_URL} from './../../../../constants';\r\nimport Select from 'react-select'\r\nimport DatePicker from 'react-datepicker';\r\n\r\nclass AddEditCheckpointTaskForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n       \r\n    }\r\n\r\n    componentWillReceiveProps(){\r\n        \r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n       \r\n        let usersOptions = [];\r\n        // autocompleteCats.push({ 'value': null, 'label': \"Основна категория (категория родител)\" })\r\n        Object.values(props.users).map(user => {\r\n\r\n            // if (cat.active == 1 && cat.deleted == 0) {\r\n            //     let dashes = '';\r\n            //     for (let i = 0; i < cat.hierarchyLevel - 1; i++) {\r\n            //         dashes += \"-\";\r\n            //     }\r\n\r\n            usersOptions.push({ 'value': user.id, 'label': user.email });\r\n        });\r\n\r\n        return (\r\n\r\n            <form>\r\n                <div className=\"card-body\">\r\n                    <MessagesContainer />\r\n\r\n                    {/* <div ref={ref} /> */}\r\n\r\n                    {/* <qrCd /> */}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">{props.translations.common.name}</label>\r\n                                <input className={`form-control`} id=\"name\" type=\"text\" title={\"latin\"} placeholder={props.translations.common.name} name=\"name\" onChange={props.onChange} value={props.task.name} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">{props.translations.common.description}</label>\r\n                                <input className={`form-control`} id=\"description\" type=\"text\" title={\"latin\"} placeholder={props.translations.tasks.description} name=\"description\" onChange={props.onChange} value={props.task.description} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-4\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">{props.translations.tasks.rotation_start_date}</label>\r\n                                <br/>\r\n                                <DatePicker\r\n                                            className=\"form-control vertical-center\"\r\n                                            selected={props.task.rotation_start_date}\r\n                                            onChange={date => props.onFieldChange('rotation_start_date', date)}\r\n                                            dateFormat=\"d-M-Y\"\r\n                                            style={{ display: 'block' }}\r\n                                        // onCalendarClose={handleCalendarClose}\r\n                                        // onCalendarOpen={handleCalendarOpen}\r\n                                        />\r\n                                {/* <input className={`form-control`} id=\"rotation_start_date\" type=\"text\" placeholder={props.translations.tasks.rotation_start_date} name=\"name\" onChange={props.onChange} value={props.task.rotation_start_date} /> */}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-4\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">{props.translations.tasks.rotation_days_count}</label>\r\n                                <input className={`form-control`} id=\"name\" type=\"text\" title={\"latin\"} placeholder={props.translations.common.rotation_days_count} name=\"rotation_days_count\" onChange={props.onChange} value={props.task.rotation_days_count} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-4\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\">{props.translations.tasks.times_per_day_of_task_execution}</label>\r\n                                <input className={`form-control`} id=\"times_per_day_of_task_execution\" type=\"text\" placeholder={props.translations.tasks.times_per_day_of_task_execution} name=\"times_per_day_of_task_execution\" onChange={props.onChange} value={props.task.times_per_day_of_task_execution} />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"parentId\">{props.translations.tasks.users}</label>\r\n                                {/* <Select name=\"parentId\" options={autocompleteUsers}\r\n                                    onChange={props.onChangeSelectAutocomplete} //value={selectedParent}\r\n                                    placeholder={props.translations.tasks.users}\r\n                                /> */}\r\n\r\n                                <Select\r\n                                    value={props.task.users}\r\n                                    isMulti\r\n                                    name=\"colors\"\r\n                                    options={usersOptions}\r\n                                    className=\"basic-multi-select\"\r\n                                    classNamePrefix=\"select\"\r\n                                    onChange={(valueLabel) => props.onChangeSelectAutocomplete('users', valueLabel)}\r\n                                // onChange={(values, { action, removedValue }) => props.ingredientsOnChange(values, { action, removedValue }, 'removable')}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <br />\r\n\r\n                    <div className=\"form-actions\">\r\n                        {props.isAdding == 1 ? '' : <button className=\"btn btn-danger mright10\" type=\"button\" data-toggle=\"modal\" data-target={\"#dangerModal\" + props.checkpointId} > {props.translations.common.delete}</button>}\r\n                        \r\n                        <DeleteCheckpointModal\r\n                            checkpointId={props.checkpointId}\r\n                            checkpointNum={props.checkpointNum}\r\n                            deleteCheckpoint={props.deleteCheckpoint}\r\n                            translations={props.translations}\r\n                        />\r\n                         \r\n                        <NavLink to={ADMIN_URL + 'checkpoints'}>\r\n                            <button className=\"btn btn-secondary\" type=\"button\">\r\n                                {props.translations.common.cancel}\r\n                            </button>\r\n                        </NavLink>\r\n\r\n                        <button className=\"fright btn btn-primary\" type=\"submit\" onClick={props.onSubmit}>\r\n                            {props.isAdding == 1 ? props.translations.common.add : props.translations.common.save}\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddEditCheckpointTaskForm;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addEditCheckpoint, listCheckpoints} from '../../actions/checkpoints.actions';\r\nimport { addErrorMessages, addSuccessMessage } from './../../../messages/messages.actions';\r\nimport { addEditTask } from './../../../tasks/actions/tasks.actions';\r\nimport { listUsers } from './../../../../actions/usersActions';\r\nimport { ADMIN_URL, API_TOKEN } from '../../../../constants';\r\nimport AddEditCheckpointTaskForm from './AddEditCheckpointTaskForm';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\n// import Utils from '../../../utils/Utils';\r\n// import Auth from './../../../utils/Auth';\r\n\r\n// let md5 = require('md5');\r\n\r\nclass AddCheckpointTaskPage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tname: '',\r\n            description: \"\",\r\n            rotation_start_date: moment().toDate(),\r\n            rotation_days_count: 1,\r\n            times_per_day_of_task_execution: 1,\r\n            users: []\r\n\t\t}\r\n\r\n\t}\r\n\r\n    componentWillMount() {\r\n        this.props.listCheckpoints();\r\n        this.props.listUsers();\r\n    }\r\n\r\n\tonChange = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value })\r\n\t}\r\n\r\n\tonChangeCheckbox = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.checked });\r\n\t}\r\n\r\n\tonChangeSelectAutocomplete = (fieldName, valueLabel) => {\r\n\t\tthis.setState({ [fieldName]: valueLabel });\r\n\t}\r\n\r\n\tonFieldChange = (fieldName, value) => {\r\n\t\tthis.setState({ [fieldName]: value });\r\n\t}\r\n\r\n\tvalidate() {\r\n\t\tlet errors = [];\r\n\r\n\t\tif (this.state.name.length == 0) {\r\n\t\t\terrors.push(this.props.translations.messages.errors.invalid_name);\r\n\t\t}\r\n\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n        let users = this.state.users.map(u => u.value)\r\n\r\n\t\tconst post = {\r\n\t\t\tname: this.state.name,\r\n\t\t\tdescription: this.state.description,\r\n            rotation_start_date: this.state.rotation_start_date,\r\n            rotation_days_count: this.state.rotation_days_count,\r\n            times_per_day_of_task_execution: this.state.times_per_day_of_task_execution,\r\n            checkpointId: this.props.checkpointId,\r\n            usersIds: users\r\n\t\t}\r\n\r\n\t\tthis.props.addEditTask(post)\r\n\t\t.then(resp => {\r\n\t\t\tthis.props.history.push(`/admin/checkpoints/${this.props.checkpointId}/tasks`)\r\n\t\t\tthis.props.addSuccessMessage(\"Успешно създаване на задача за локация\")\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tthis.props.addErrorMessages(error.response.data.error.errors);\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n        console.log(this.state)\r\n\t\treturn (\r\n\t\t\t<main className=\"main\">\r\n\r\n\t\t\t\t{/* <!-- Breadcrumb--> */}\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.dashboard}</NavLink></li>\r\n\t\t\t\t\t{/* <li className=\"breadcrumb-item\">Меню</li> */}\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL + \"checkpoints\"}>{this.props.translations.checkpoints.title}</NavLink></li>\r\n                    <li className=\"breadcrumb-item active\">{this.props.checkpoint && this.props.checkpoint.name || \"\"}</li>\r\n                    <li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL + `checkpoints/${this.props.checkpointId}/tasks`}>{this.props.translations.checkpoints.tasks_for_checkpoint}</NavLink></li>\r\n\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\">{this.props.translations.checkpoints.add_task}</li>\r\n\t\t\t\t</ol>\r\n\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"animated fadeIn\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t\t\t{/* <!-- /.col--> */}\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\r\n\t\t\t\t\t\t\t\t\t<AddEditCheckpointTaskForm\r\n\t\t\t\t\t\t\t\t\t\tonSubmit={this.onSubmit}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonChangeCheckbox={this.onChangeCheckbox}\r\n\t\t\t\t\t\t\t\t\t\tonChangeSelectAutocomplete={this.onChangeSelectAutocomplete}\r\n\t\t\t\t\t\t\t\t\t\tonFieldChange={this.onFieldChange}\r\n\t\t\t\t\t\t\t\t\t\ttask={this.state}\r\n                                        users={this.props.users}\r\n\t\t\t\t\t\t\t\t\t\tcurrentDate={this.state.currentDate}\r\n\t\t\t\t\t\t\t\t\t\tactionText=\"Добави\"\r\n\t\t\t\t\t\t\t\t\t\tisAdding={1}\r\n\t\t\t\t\t\t\t\t\t\ttranslations={this.props.translations}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</main>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let checkpointId = ownProps.match.params.id\r\n\r\n\treturn {\r\n        checkpointId: checkpointId,\r\n        checkpoint: state.checkpoints.checkpoints[checkpointId] || null,\r\n        users: state.users.users || [],\r\n        translations: state.lang,\r\n\t\tclients: state.clients.clients,\r\n\t\tplaces: state.places.places,\r\n\t}\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch, ownProps) => {\r\n// \treturn {\r\n// \t\taddCheckpoint: (data, imageData) => dispatch(addCheckpoint(ownProps.history, data, imageData)),\r\n// \t\taddErrorMessages: (msgs) => dispatch(addErrorMessages(msgs))\r\n// \t}\r\n// }\r\n\r\nexport default withRouter(connect(mapStateToProps, { addEditCheckpoint, listCheckpoints, addErrorMessages, addSuccessMessage, addEditTask, listUsers })(AddCheckpointTaskPage));","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addEditCheckpoint, listCheckpoints} from '../../actions/checkpoints.actions';\r\nimport { addErrorMessages, addSuccessMessage } from '../../../messages/messages.actions';\r\nimport { addEditTask, listAllTasks } from '../../../tasks/actions/tasks.actions';\r\nimport { listUsers } from '../../../../actions/usersActions';\r\nimport { ADMIN_URL, API_TOKEN } from '../../../../constants';\r\nimport AddEditCheckpointTaskForm from './AddEditCheckpointTaskForm';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\n// import Utils from '../../../utils/Utils';\r\n// import Auth from './../../../utils/Auth';\r\n\r\n// let md5 = require('md5');\r\n\r\nclass EditCheckpointTaskPage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tname: '',\r\n            description: \"\",\r\n            rotation_start_date: \"\",\r\n            rotation_days_count: \"\",\r\n            times_per_day_of_task_execution: \"\",\r\n            users: []\r\n\t\t}\r\n\r\n\t}\r\n\r\n    componentWillMount() {\r\n        this.props.listCheckpoints();\r\n        this.props.listUsers();\r\n        this.props.listAllTasks();\r\n    }\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tlet taskUsers = [];\r\n\t\tif (nextProps.task.users.length > 0) {\r\n\t\t\tnextProps.task.users.map(u => {\r\n\t\t\t\ttaskUsers.push({ value: parseInt(u.id), label: u.email })\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tid: nextProps.match.params.taskId,\r\n\t\t\tname: nextProps.task.name ? nextProps.task.name : '',\r\n            description: nextProps.task.ndescriptioname ? nextProps.task.description : '',\r\n\t\t\trotation_start_date: nextProps.task.rotation_start_date && moment(nextProps.task.rotation_start_date).toDate() || \"\",\r\n\t\t\trotation_days_count: nextProps.task.rotation_days_count ? nextProps.task.rotation_days_count : '',\r\n            times_per_day_of_task_execution: nextProps.task.times_per_day_of_task_execution ? nextProps.task.times_per_day_of_task_execution : '',\r\n            users: taskUsers\r\n\t\t});\r\n\r\n\t\tconsole.log(\"NEXT \", nextProps)\r\n\t}\r\n\r\n\tonChange = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.value })\r\n\t}\r\n\r\n\tonChangeCheckbox = (e) => {\r\n\t\tthis.setState({ [e.target.name]: e.target.checked });\r\n\t}\r\n\r\n\tonChangeSelectAutocomplete = (fieldName, valueLabel) => {\r\n\t\tthis.setState({ [fieldName]: valueLabel });\r\n\t}\r\n\r\n\tonFieldChange = (fieldName, value) => {\r\n\t\tthis.setState({ [fieldName]: value });\r\n\t}\r\n\r\n\tvalidate() {\r\n\t\tlet errors = [];\r\n\r\n\t\tif (this.state.name.length == 0) {\r\n\t\t\terrors.push(this.props.translations.messages.errors.invalid_name);\r\n\t\t}\r\n\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tvar errors = this.validate()\r\n\t\tif(errors.length > 0)  {\r\n\t\t\tthis.props.addErrorMessages(errors); return\r\n\t\t}\r\n\r\n        let users = this.state.users.map(u => u.value)\r\n\r\n\t\tconst post = {\r\n\t\t\tid: this.state.id,\r\n\t\t\tname: this.state.name,\r\n\t\t\tdescription: this.state.description,\r\n            rotation_start_date: this.state.rotation_start_date,\r\n            rotation_days_count: this.state.rotation_days_count,\r\n            times_per_day_of_task_execution: this.state.times_per_day_of_task_execution,\r\n            checkpointId: this.props.checkpointId,\r\n            usersIds: users\r\n\t\t}\r\n\r\n\t\tthis.props.addEditTask(post)\r\n\t\t.then(resp => {\r\n\t\t\tthis.props.history.push(`/admin/checkpoints/${this.props.checkpointId}/tasks`)\r\n\t\t\tthis.props.addSuccessMessage(\"Успешно създаване на задача за локация\")\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tthis.props.addErrorMessages(error.response.data.error.errors);\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<main className=\"main\">\r\n\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL}>{this.props.translations.common.dashboard}</NavLink></li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL + \"checkpoints\"}>{this.props.translations.checkpoints.title}</NavLink></li>\r\n                    <li className=\"breadcrumb-item active\">{this.props.checkpoint && this.props.checkpoint.name || \"\"}</li>\r\n                    <li className=\"breadcrumb-item\"><NavLink to={ADMIN_URL + `checkpoints/${this.props.checkpointId}/tasks`}>{this.props.translations.checkpoints.tasks_for_checkpoint}</NavLink></li>\r\n\t\t\t\t\t<li className=\"breadcrumb-item active\">{this.props.translations.checkpoints.add_task}</li>\r\n\t\t\t\t</ol>\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"animated fadeIn\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t\t\t<AddEditCheckpointTaskForm\r\n\t\t\t\t\t\t\t\t\t\tonSubmit={this.onSubmit}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonChangeSelectAutocomplete={this.onChangeSelectAutocomplete}\r\n\t\t\t\t\t\t\t\t\t\tonFieldChange={this.onFieldChange}\r\n\t\t\t\t\t\t\t\t\t\ttask={this.state}\r\n                                        users={this.props.users}\r\n\t\t\t\t\t\t\t\t\t\tcurrentDate={this.state.currentDate}\r\n\t\t\t\t\t\t\t\t\t\tisAdding={0}\r\n\t\t\t\t\t\t\t\t\t\ttranslations={this.props.translations}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let checkpointId = ownProps.match.params.id\r\n    let taskId = ownProps.match.params.taskId\r\n\r\n    let task = state.tasks.tasks[taskId];\r\n\r\n\tif (!task) task = {\r\n\t\tid: taskId,\r\n\t\tname: '',\r\n        description: \"\",\r\n        rotation_start_date: \"\",\r\n        rotation_days_count: \"\",\r\n        times_per_day_of_task_execution: \"\",\r\n        users: []\r\n\t};\r\n\r\n\treturn {\r\n\t\ttask: task,\r\n        checkpointId: checkpointId,\r\n        checkpoint: state.checkpoints.checkpoints[checkpointId] || null,\r\n        users: state.users.users || [],\r\n        translations: state.lang,\r\n\t\tplaces: state.places.places,\r\n\t}\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, { listCheckpoints, addErrorMessages, addSuccessMessage, addEditTask, listUsers, listAllTasks })(EditCheckpointTaskPage));","import React from 'react';\r\nimport { Switch, Route, Router, BrowserRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { history } from './store'\r\n\r\n//SUPER ADMIN\r\n//PLACES\r\nimport SetCurrPlacePage from './components/places/components/SetCurrPlacePage';\r\n\r\n// Users\r\nimport ListUsersPage from './components/users/ListUsersPage';\r\nimport ListRegisteredUsersPage from './components/users/registered/ListRegisteredUsersPage';\r\nimport AddUserPage from './components/users/AddUserPage';\r\nimport EditUserPage from './components/users/EditUserPage';\r\n// Orders\r\n// import ListAllOrdersPage from './components/orders/ListAllOrdersPage';\r\n\r\nimport LoginPage from './components/login/Login';\r\nimport PrivateRoute from './utils/PrivateRoute';\r\n\r\n// PLACES\r\nimport ListPlacesPage from './components/places/components/ListPlacesPage';\r\nimport AddPlacePage from './components/places/components/AddPlacePage';\r\nimport EditPlacePage from './components/places/components/EditPlacePage';\r\n\r\n// CLIENTS\r\nimport ListClientsPage from './components/clients/components/ListClientsPage';\r\nimport AddClientPage from './components/clients/components/AddClientPage';\r\nimport EditClientPage from './components/clients/components/EditClientPage';\r\n\r\nimport ListTasksPage from './components/tasks/components/ListTasksPage';\r\nimport AddTaskPage from './components/tasks/components/AddTaskPage';\r\nimport EditTaskPage from './components/tasks/components/EditTaskPage';\r\n\r\nimport ListCheckpointTasksForUserPage from './components/tasks/components/scan/ListCheckpointTasksForUserPage';\r\nimport ListUserTasksPage from './components/tasks/components/userTasks/ListUserTasksPage';\r\n\r\n// Checkpoints\r\nimport ListCheckpointsPage from './components/checkpoints/components/ListCheckpointsPage';\r\nimport AddCheckpointPage from './components/checkpoints/components/AddCheckpointPage';\r\nimport EditCheckpointPage from './components/checkpoints/components/EditCheckpointPage';\r\nimport ListCheckpointTasks from './components/checkpoints/components/tasks/ListCheckpointTasks';\r\nimport AddCheckpointTaskPage from './components/checkpoints/components/tasks/AddCheckpointTask';\r\nimport EditCheckpointTaskPage from './components/checkpoints/components/tasks/EditCheckpointTaskPage';\r\n\r\nconst MyRouter = (props) => (\r\n    <Router history={history}>\r\n        <Switch>\r\n            <Route exact path='/admin/login' component={LoginPage} />\r\n\r\n            <PrivateRoute exact path='/my-tasks' component={ListUserTasksPage} />\r\n            <PrivateRoute exact path='/tasks/t/:token' component={ListCheckpointTasksForUserPage} />\r\n\r\n            <PrivateRoute exact path='/admin/tasks' component={ListTasksPage} />\r\n            <PrivateRoute exact path='/admin/tasks/add' component={AddTaskPage} />\r\n            <PrivateRoute exact path='/admin/tasks/edit/:id' component={EditTaskPage} />\r\n\r\n            <PrivateRoute exact path='/admin/checkpoints' component={ListCheckpointsPage} />\r\n            <PrivateRoute exact path='/admin/checkpoints/add' component={AddCheckpointPage} />\r\n            <PrivateRoute exact path='/admin/checkpoints/edit/:id' component={EditCheckpointPage} />\r\n            <PrivateRoute exact path='/admin/checkpoints/:id/tasks' component={ListCheckpointTasks} />\r\n            <PrivateRoute exact path='/admin/checkpoints/:id/tasks/add' component={AddCheckpointTaskPage} />\r\n            <PrivateRoute exact path='/admin/checkpoints/:id/tasks/:taskId/edit' component={EditCheckpointTaskPage} />\r\n\r\n\r\n            {/* SUPER_ADMIN */}\r\n            {/* PLACES */}\r\n            <PrivateRoute exact path='/admin/places/current' component={SetCurrPlacePage} />\r\n            <PrivateRoute exact path='/admin/places' component={ListPlacesPage} />\r\n            <PrivateRoute exact path='/admin/places/add' component={AddPlacePage} />\r\n            <PrivateRoute exact path='/admin/places/edit/:id' component={EditPlacePage} />\r\n\r\n            {/* CLIENTS */}\r\n            <PrivateRoute exact path='/admin/clients' component={ListClientsPage} />\r\n            <PrivateRoute exact path='/admin/clients/add' component={AddClientPage} />\r\n            <PrivateRoute exact path='/admin/clients/edit/:id' component={EditClientPage} />\r\n\r\n            {/* Users */}\r\n            <PrivateRoute exact path='/admin/users' component={ListUsersPage} />\r\n            <PrivateRoute exact path='/admin/users/registered' component={ListRegisteredUsersPage} />\r\n            <PrivateRoute exact path='/admin/users/add' component={AddUserPage} />\r\n            <PrivateRoute exact path='/admin/users/edit/:id' component={EditUserPage} />\r\n    \r\n        </Switch>\r\n    </Router>\r\n)\r\n\r\nconst mapStateToProps = (state, dispatch) => {\r\n    return {\r\n        userRole: state.auth.user.role || null,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(MyRouter);\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass LoadingScreen extends Component {\r\n\trender() {\r\n\t\treturn (\r\n            <React.Fragment>\r\n            {/* {this.props.isLoading ?  */}\r\n                {/* <div class=\"spinner-border text-primary\" role=\"status\">\r\n                    <span class=\"sr-only\">Loading...</span>\r\n                </div> */}\r\n\r\n                <div className=\"loader-page-container\" style={{display: this.props.isLoading ? 'block':'none'}}></div>\r\n                <div className=\"loader loader-page\" style={{visibility: this.props.isLoading ? 'visible' : 'hidden'}}></div>\r\n\r\n\r\n                {/* <div >\r\n\r\n                </div>\r\n                <div className=\"loader\" style={{ display: 'inline-block', verticalAlign: 'text-bottom', visibility: 'visible' }}></div> */}\r\n            {/* : */}\r\n                {/* null */}\r\n            {/* } */}\r\n            </React.Fragment>\r\n           \r\n        )\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = (state, dispatch) => {\r\n    return {\r\n\t\tisLoading: state.loading.isLoading || false,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(LoadingScreen);\r\n","// history.js\r\nimport { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory()","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Close } from '@material-ui/icons';\r\nimport { Slide } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    close: {\r\n        padding: theme.spacing(0.5),\r\n    },\r\n}));\r\n\r\nexport default function ConsecutiveSnackbars(props) {\r\n    const transitionComponent = (props) => <Slide {...props} direction=\"down\" />;\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Snackbar\r\n                // key={messageInfo ? messageInfo.key : undefined}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                open={props.snackbarText || false}\r\n                autoHideDuration={10000} //10 sec\r\n                onClose={() => props.setSnackbarText(false)}\r\n                onExited={() => props.setSnackbarText(false)}\r\n                message={props.snackbarText}\r\n                // TransitionComponent={transitionComponent}\r\n                action={\r\n                    <React.Fragment>\r\n                        <Button color=\"secondary\" size=\"small\" onClick={props.snackbarActionCallback}>\r\n                            <b>{props.snackbarActionText}</b>\r\n                        </Button>\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            // className={classes.close}\r\n                            onClick={() => props.setSnackbarText(false)}\r\n                        >\r\n                            <Close />\r\n                        </IconButton>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { closeConfirmModal } from './../../actions/adminActions';\r\n\r\n\r\nclass ConfirmModal extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    open={this.props.openConfirmModal}\r\n                    onClose={() => { this.props.confirmModalCallbackFail(); this.props.closeConfirmModal() }}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    {/* <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle> */}\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            {this.props.confirmModalText}\r\n                            {/* Let Google help apps determine location. This means sending anonymous location data to\r\n                            Google, even when no apps are running. */}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => { this.props.confirmModalCallbackFail(); this.props.closeConfirmModal() }} color=\"primary\">\r\n                            Не\r\n                        </Button>\r\n                        <Button onClick={() => { this.props.confirmModalCallbackSuccess(); this.props.closeConfirmModal() }} color=\"primary\" autoFocus>\r\n                            Да\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, dispatch) => {\r\n    return {\r\n        openConfirmModal: state.admin.openConfirmModal || false,\r\n        confirmModalText: state.admin.confirmModalText || '',\r\n        confirmModalCallbackSuccess: state.admin.confirmModalCallbackSuccess || void (0),\r\n        confirmModalCallbackFail: state.admin.confirmModalCallbackFail || void (0),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { closeConfirmModal })(ConfirmModal);\r\n\r\n","import React, { Component } from 'react';\r\nimport { SETTINGS_IMG_URL, ADMIN_URL } from '../constants.js'\r\nimport Auth from '../utils/Auth';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { setLanguage } from 'react-redux-multilang'\r\nimport history from './../history';\r\nimport { changeLanguage } from './../actions/languagesActions';\r\nimport LoadingScreen from './common/loading/LoadingScreen';\r\nimport Utils from '../utils/Utils.js';\r\nimport SnackbarNotifications from './common/SnackbarNotifications';\r\nimport { setSnackbarText, openConfirmModal } from './../actions/adminActions'\r\nimport { Button, IconButton, Slide, Snackbar } from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nimport ConfirmModal from './common/ConfirmModal.js';\r\nimport adminImg from './../images/admin.png'; // Tell webpack this JS file uses this image.\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rerender: false,\r\n      timerCheckForceRefresh: '',\r\n      timeoutRefreshPage: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  componentWillUnmount() {\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.settings) {\r\n      // Logo\r\n      if (nextProps.settings.logo && nextProps.settings.logo.value) {\r\n        this.logoSrc = nextProps.settings.logo.value\r\n        if (this.logoSrc.indexOf(\"http\") !== -1) {\r\n          this.logoSrc = this.logoSrc;\r\n        } else {\r\n          this.logoSrc = SETTINGS_IMG_URL + this.logoSrc;\r\n        }\r\n      } else if (nextProps.settings.tabl_logo) {\r\n        this.logoSrc = nextProps.settings.tabl_logo.value\r\n      }\r\n\r\n      if (nextProps.settings.tabl_short_logo && nextProps.settings.tabl_short_logo.value) {\r\n        // Short logo\r\n        this.shortLogoSrc = nextProps.settings.tabl_short_logo.value;\r\n        if (this.shortLogoSrc.indexOf(\"http\") !== -1) {\r\n          this.shortLogoSrc = this.shortLogoSrc;\r\n        } else {\r\n          this.shortLogoSrc = SETTINGS_IMG_URL + this.shortLogoSrc;\r\n        }\r\n      } else if (nextProps.settings.tabl_logo) {\r\n        this.shortLogoSrc = nextProps.settings.tabl_logo.value\r\n      }\r\n\r\n      // Set favicon\r\n      let favicon = document.querySelector('link.favicon');\r\n      if (favicon) {\r\n        favicon.setAttribute('href', this.shortLogoSrc);\r\n      }\r\n    }\r\n  }\r\n\r\n  mySetLang = (l) => {\r\n    this.props.setLang(l);\r\n    // this.setState({ });\r\n    // this.props.listCategories();\r\n    // this.forceUpdate();\r\n\r\n\r\n    // store.dispatch({\r\n    //     type: 'SET_REDUX_LANGUAGE',\r\n    //     code: 'ru'\r\n    // })\r\n    // this.props.setLanguage(l);\r\n  }\r\n\r\n  reqFullScreen() {\r\n    var docElm = document.documentElement;\r\n    if (docElm) {\r\n      if (docElm.requestFullscreen) {\r\n        docElm.requestFullscreen();\r\n      } else if (docElm.msRequestFullscreen) {\r\n        docElm.msRequestFullscreen();\r\n      } else if (docElm.mozRequestFullScreen) {\r\n        docElm.mozRequestFullScreen();\r\n      } else if (docElm.webkitRequestFullScreen) {\r\n        docElm.webkitRequestFullScreen();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Used for raspberry with display\r\n  stopFullScreen() {\r\n    if (document.fullscreenElement) {\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n      }\r\n      else if (document.msExitFullscreen) {\r\n        document.msExitFullscreen();\r\n      }\r\n      else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen();\r\n      }\r\n      else if (document.webkitCancelFullScreen) {\r\n        document.webkitCancelFullScreen();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { places, clients } = this.props;\r\n\r\n    let currPlace = '';\r\n    let currClient = '';\r\n    let currPlaceName = '';\r\n    if (places) {\r\n      currPlace = places.find(p => p.id == Auth.getUserPlace());\r\n      currPlaceName = currPlace ? currPlace.name : \"-\";\r\n\r\n      if (currPlace && Object.values(currPlace).length > 0 && currPlace.clientId) {\r\n        currClient = clients.find(c => c.id == currPlace.clientId)\r\n      }\r\n    }\r\n\r\n    let currClientSlug = '';\r\n    if (currClient && Object.keys(currClient).length > 0 && currClient.slug) {\r\n      currClientSlug = currClient.slug;\r\n    }\r\n\r\n\r\n\r\n\r\n    const transitionComponent = (props) => <Slide {...props} direction=\"down\" />;\r\n\r\n\r\n    // let loggedUser = Auth.getToken() ?\r\n    //   <a className=\"nav-link\" data-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n    //     <img className=\"img-avatar\" src={ADMIN_URL + \"img/avatars/admin.png\"} alt=\"user\" />\r\n    //     {/* <img className=\"img-avatar\" src={this.logoSrc} alt=\"admin@bootstrapmaster.com\"/> */}\r\n    //   </a>\r\n    //   : '';\r\n    return (\r\n      <header className=\"app-header navbar\">\r\n        <LoadingScreen />\r\n        <ConfirmModal />\r\n\r\n        <button className=\"navbar-toggler sidebar-toggler d-lg-none mr-auto\" type=\"button\" data-toggle=\"sidebar-show\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n\r\n        <a className=\"navbar-brand logo-holder \" href=\"javascript:void(0)\">\r\n          {/* <img className=\"navbar-brand-full admin-logo\" src={IMG_PATH+\"img/brand/logo.svg\"} width=\"89\" height=\"25\" alt=\"CoreUI Logo\"/>\r\n        <img className=\"navbar-brand-minimized\" src={IMG_PATH+\"img/brand/sygnet.svg\"} width=\"30\" height=\"30\" alt=\"CoreUI Logo\"/> */}\r\n\r\n          {/* <img className=\"navbar-brand-full admin-logo\" src={'https://tabl.bg/img/tabl-transparent.png'} alt=\"TabL Logo\" /> */}\r\n          <h2 className=\"navbar-brand-full admin-logo\" style={{fontSize: \"3.75rem\", marginLeft: 33, maxHeight: 70 }}>HCS</h2>\r\n          {/* <img className=\"navbar-brand-full admin-logo\" src={this.logoSrc} alt=\"TabL Logo\"/> */}\r\n          {/* <img className=\"navbar-brand-minimized admin-logo\" src={'https://tabl.bg/img/tabl-transparent.png'}  alt=\"TabL Logo\" /> */}\r\n        </a>\r\n\r\n\r\n        <SnackbarNotifications\r\n          snackbarText={this.props.snackbarText}\r\n          setSnackbarText={this.props.setSnackbarText}\r\n          snackbarActionCallback={this.props.snackbarActionCallback}\r\n          snackbarActionText={this.props.snackbarActionText}\r\n        />\r\n\r\n        < ul className=\"nav navbar-nav ml-auto\" >\r\n\r\n          {Auth.hasAccess(\"SUPER_ADMIN\") && this.props.places.length > 1 ?\r\n            <li className=\"nav-item place-header\">\r\n              <NavLink to={ADMIN_URL + `places/current`} className=\"nav-link\">\r\n                <span className=\"badge badge-secondary fsize-13\" style={{ position: 'initial' }}>{currPlaceName}</span>\r\n              </NavLink>\r\n            </li>\r\n            :\r\n            null\r\n          }\r\n\r\n          &nbsp;\r\n\r\n          <li >\r\n            {/* <button className=\"btn\" style={localStorage.getItem('default_lang') == 'ro' ? { background: '#d8d8d8' } : { marginRight: 5 }} onClick={() => this.props.changeLanguage('ro')}>RO</button> */}\r\n            <button className=\"btn\" style={localStorage.getItem('default_lang') == 'en' ? { background: '#d8d8d8' } : { marginRight: 5 }} onClick={() => this.props.changeLanguage('en')}>EN</button>\r\n            <button className=\"btn\" style={!localStorage.getItem('default_lang') || localStorage.getItem('default_lang') == 'bg' ? { background: '#d8d8d8' } : { marginRight: 5 }} onClick={() => this.props.changeLanguage('bg')}>BG</button>\r\n          </li>\r\n\r\n\r\n          {\r\n            Auth.getToken() ?\r\n              <li className=\"nav-item dropdown show dropdownicons-black\" style={{ paddingRight: 10 }}>\r\n                <a className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                  <img\r\n                    // src=\"img/avatars/6.jpg\"\r\n                    src={adminImg}\r\n                    className=\"img-avatar\" alt=\"user\" />\r\n                </a>\r\n\r\n                <div className=\"dropdown-menu dropdown-menu-right \" style={{ maxHeight: '90vh', overflowY: 'scroll' }}>\r\n\r\n                  <div className=\"dropdown-header text-center\">\r\n                    <strong>{Auth.getToken() ? Auth.getDecodedUser().email : null} - {Auth.getToken() ? this.props.translations.roles[Auth.getDecodedUser().role] : null} - <i className=\"fas fa-lock c-pointer\" title={'Изход'} onClick={this.props.logoutAction}></i>\r\n                    </strong>\r\n                  </div>\r\n\r\n                  <div className=\"dropdown-header text-center\">\r\n                    <strong>Профил</strong>\r\n                  </div>\r\n\r\n\r\n                  <button className=\"dropdown-item c-pointer\" onClick={this.props.logoutAction}>\r\n                    <i className=\"fas fa-lock\"></i> Изход\r\n                  </button>\r\n\r\n                </div>\r\n              </li>\r\n              :\r\n              null\r\n          }\r\n\r\n        </ul >\r\n      \r\n      </header >\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n  return {\r\n    clients: state.clients.clients,\r\n    places: state.places.places,\r\n    translations: state.lang,\r\n    snackbarText: state.admin.snackbarText,\r\n    snackbarActionCallback: state.admin.snackbarActionCallback,\r\n    snackbarActionText: state.admin.snackbarActionText,\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, { changeLanguage, setSnackbarText, openConfirmModal })(Header);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_URL } from '../constants.js'\r\nimport Auth from './../utils/Auth';\r\n\r\nimport Cookies from 'universal-cookie';\r\nimport Utils from '../utils/Utils';\r\nimport { FaUserAlt, FaLocationArrow, FaTasks, FaBuilding } from \"react-icons/fa\";\r\n\r\nconst cookies = new Cookies();\r\n\r\n\r\n\r\nclass SideBar extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { settings } = this.props;\r\n\r\n\t\tlet currPlace = this.props.places.find(p => p.id == Auth.getUserPlace());\r\n\t\tlet currPlaceName = currPlace ? currPlace.name : \"-\";\r\n\r\n\t\tconst currPlaceOrderTypes = currPlace ? currPlace.ordertypes : []\r\n\t\t// console.log('currPlaceOrderTypes', currPlaceOrderTypes)\r\n\t\t// if(cookies.get('tabl_place') != placeId) { // on refresh - if place is different - clear cart\r\n\r\n\t\t// console.log('currPlace', currPlace)\r\n\t\treturn (\r\n\t\t\t<div className=\"sidebar\">\r\n\t\t\t\t<nav className=\"sidebar-nav\">\r\n\t\t\t\t\t<ul className=\"nav\">\r\n\t\t\t\t\t\t<li className=\"divider\"></li>\r\n\r\n\t\t\t\t\t\t{Auth.hasAccess(\"USER\") ?\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<NavLink to={`/my-tasks`} className=\"nav-link\">\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"nav-icon \"><FaTasks/></i> {this.props.translations.sidemenu.my_tasks}</NavLink>\r\n\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{Auth.hasAccessCustom(['PLACE_ADMIN', 'CLIENT_ADMIN', 'SUPER_ADMIN']) ?\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\r\n\t\t\t\t\t\t\t\t<li className=\"divider\"></li>\r\n\t\t\t\t\t\t\t\t<li className=\"nav-title\">\r\n\t\t\t\t\t\t\t\t\t{this.props.translations.sidemenu.admin}\r\n\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<NavLink to={ADMIN_URL + `tasks`} className=\"nav-link\">\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"nav-icon \"><FaTasks/></i> {this.props.translations.sidemenu.tasks}</NavLink>\r\n\r\n\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<NavLink to={ADMIN_URL + `checkpoints`} className=\"nav-link\">\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"nav-icon\"><FaLocationArrow/></i> {this.props.translations.sidemenu.checkpoints}</NavLink>\r\n\r\n\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t{Auth.hasAccess(\"CLIENT_ADMIN\") && this.props.places.length > 1 ?\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<NavLink to={ADMIN_URL + `places/current`} className=\"nav-link\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"nav-icon \"><FaBuilding/></i>  {this.props.translations.sidemenu.current_place} <span className=\"badge badge-secondary current-place-sidebar\">{currPlaceName}</span>\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t{Auth.hasAccess(\"PLACE_ADMIN\") ?\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<NavLink to={ADMIN_URL + `users`} className=\"nav-link\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"nav-icon \"><FaUserAlt/></i>   {this.props.translations.sidemenu.users} \r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t{Auth.hasAccess(\"SUPER_ADMIN\") ?\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<li className=\"divider\"></li>\r\n\t\t\t\t\t\t\t\t<li className=\"nav-title\">\r\n\t\t\t\t\t\t\t\t\t{this.props.translations.sidemenu.super_admin}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<NavLink to={ADMIN_URL + `places`} className=\"nav-link\">\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"nav-icon\"><FaBuilding/></i>  {this.props.translations.sidemenu.places}\r\n\t\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</nav>\r\n\t\t\t\t<button className=\"sidebar-minimizer brand-minimizer\" type=\"button\"></button>\r\n\t\t\t</div >\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n\treturn {\r\n\t\ttranslations: state.lang,\r\n\t\tuserRole: state.auth.user.role || \"\",\r\n\t\tplaces: state.places.places || []\r\n\t}\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(SideBar);","import React, { Component } from 'react'\r\nimport Auth from '../utils/Auth';\r\nimport { ADMIN_VERSION } from '../constants'\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    let loginMargin = Auth.getToken() ? {} : { margin: '0' };\r\n    // color: 'pink'\r\n    return (\r\n      <footer className=\"app-footer\" style={loginMargin}>\r\n        <div>\r\n          <span>&copy; 2021 All rights reserved.</span>\r\n        </div>\r\n        <div className=\"ml-auto\">\r\n          <span></span>\r\n          {/* <a href=\"https://tabl.bg/aboutus\" target=\"_blank\"> */}\r\n            {/* TabL.BG - v{ADMIN_VERSION} */}\r\n          {/* </a> */}\r\n          <span></span>\r\n          {/* <a href=\"https://coreui.io\" target=\"_blank\">CoreUI</a> */}\r\n        </div>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport MyRouter from \"./MyRouter\";\r\nimport Header from './components/Header';\r\nimport SideBar from './components/SideBar';\r\nimport Footer from './components/Footer';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faEnvelope, faKey } from '@fortawesome/free-solid-svg-icons';\r\nimport Auth from './utils/Auth';\r\nimport {logout} from './actions/authActions'\r\n\r\nlibrary.add(faEnvelope, faKey);\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n\r\n    let sideBar = Auth.isUserAuthenticated() ? <SideBar/> : \"\";\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Header logoutAction={logout}/>\r\n          <div className=\"app-body\"> \r\n            {sideBar}\r\n            <MyRouter />\r\n          </div>\r\n        <Footer/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import browserSupport from './utils/browsersSupport';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store, { history } from './store';\r\nimport { ConnectedRouter } from 'connected-react-router'\r\n\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { listLanguages } from './actions/languagesActions';\r\nimport { listPlacesByUserRole } from './components/places/actions/places.actions';\r\nimport { listClients } from './components/clients/actions/clients.actions';\r\n\r\nimport { clearMessages } from './components/messages/messages.actions';\r\nimport { setCurrentUser, logout } from './actions/authActions';\r\nimport jwt from 'jsonwebtoken';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nimport Auth from './utils/Auth';\r\nimport setAuthorizationToken from './utils/setAuthorizationToken';\r\nimport axios from 'axios';\r\nimport setCustomAdminHeader from './utils/setCustomAdminHeader';\r\nimport setTablHeader from './utils/setTablHeader';\r\nimport setCustomPlaceHeader from './utils/setCustomPlaceHeader';\r\n// import {syncWithStore, setLanguage} from 'react-redux-multilang';\r\n// Store to state languages\r\nimport Cookies from 'universal-cookie';\r\nconst cookies = new Cookies();\r\n\r\nsetCustomAdminHeader();\r\nsetTablHeader();\r\n\r\nif (Auth.getToken()) {\r\n    try {\r\n        // jwtDecode(Auth.getToken());\r\n        let currUser = jwtDecode(Auth.getToken());\r\n        store.dispatch(setCurrentUser(currUser));\r\n        setAuthorizationToken(Auth.getToken());\r\n\r\n        if(cookies.get('tabl_a_place')) {\r\n            setCustomPlaceHeader(cookies.get('tabl_a_place'));\r\n        } else {\r\n            setCustomPlaceHeader(currUser.place_id);\r\n        }\r\n\r\n        store.dispatch(listPlacesByUserRole());\r\n        store.dispatch(listLanguages());\r\n\r\n    } catch (e) {\r\n        // console.log(e);\r\n    }\r\n}\r\n\r\n// Add a response interceptor\r\naxios.interceptors.response.use(function (response) {\r\n    return response;\r\n}, function (error) {\r\n    if (error.response && error.response.status && error.response.status == 401) {\r\n        store.dispatch(logout());\r\n        return;\r\n    } else {\r\n        // if(error.response.data.error.errors) {\r\n        // store.dispatch(addErrorMessages(error.response.data.error.errors));\r\n        // TODO: Tuk moje napravo da vikam addErrorMsgs()\r\n        // }\r\n    }\r\n    return Promise.reject(error);\r\n});\r\n\r\n\r\nconst onlisten = history.listen((location, action) => {\r\n    store.dispatch(clearMessages());\r\n})\r\n\r\nconst app =\r\n    <Provider store={store}>\r\n        <ConnectedRouter history={history}>\r\n            <App />\r\n        </ConnectedRouter>\r\n    </Provider>\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n","import axios from 'axios';\r\n\r\nexport default function setCustomAdminHeader() {\r\n    // if (token) {\r\n        axios.defaults.headers.common['Admin'] = `1`;\r\n\r\n        // console.log(\"TOKENN SETT\", token);\r\n        // console.log(axios.defaults.headers)\r\n    // } else {\r\n        // delete axios.defaults.headers.common['Admin'];\r\n    // }\r\n}","import axios from 'axios';\r\n\r\nexport default function setTablHeader(placeId) {\r\n    axios.defaults.headers.common['tabl'] = 'tabl';\r\n}"],"sourceRoot":""}